     1                                  ; ****************************************************************************
     2                                  ; playwav7.s (for TRDOS 386)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; PLAYWAV7.PRG ! AC'97 (ICH) .WAV PLAYER program by Erdogan TAN
     5                                  ;
     6                                  ; 29/05/2024
     7                                  ;
     8                                  ; [ Last Modification: 30/05/2024 ]
     9                                  ;
    10                                  ; Modified from PLAYWAV6.PRG .wav player program by Erdogan Tan, 27/11/2023
    11                                  ; Modified from PLAYWAV4.COM .wav player program by Erdogan Tan, 19/05/2024
    12                                  ;
    13                                  ; Assembler: NASM version 2.15
    14                                  ;	     nasm playwav7.s -l playwav7.txt -o PLAYWAV7.PRG	
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from '.wav file player for DOS' Jeff Leyda, Sep 02, 2002
    17                                  
    18                                  ; tuneloop (user mode) version (29/05/2024
    19                                  
    20                                  ; previous version: playwav6.s (27/11/2023)
    21                                  
    22                                  ; CODE
    23                                  
    24                                  ; 14/07/2020
    25                                  ; 31/12/2017
    26                                  ; TRDOS 386 (v2.0) system calls
    27                                  _ver 	equ 0
    28                                  _exit 	equ 1
    29                                  _fork 	equ 2
    30                                  _read 	equ 3
    31                                  _write	equ 4
    32                                  _open	equ 5
    33                                  _close 	equ 6
    34                                  _wait 	equ 7
    35                                  _create	equ 8
    36                                  _rename	equ 9
    37                                  _delete	equ 10
    38                                  _exec	equ 11
    39                                  _chdir	equ 12
    40                                  _time 	equ 13
    41                                  _mkdir 	equ 14
    42                                  _chmod	equ 15
    43                                  _rmdir	equ 16
    44                                  _break	equ 17
    45                                  _drive	equ 18
    46                                  _seek	equ 19
    47                                  _tell 	equ 20
    48                                  _memory	equ 21
    49                                  _prompt	equ 22
    50                                  _path	equ 23
    51                                  _env	equ 24
    52                                  _stime	equ 25
    53                                  _quit	equ 26
    54                                  _intr	equ 27
    55                                  _dir	equ 28
    56                                  _emt 	equ 29
    57                                  _ldrvt 	equ 30
    58                                  _video 	equ 31
    59                                  _audio	equ 32
    60                                  _timer	equ 33
    61                                  _sleep	equ 34
    62                                  _msg    equ 35
    63                                  _geterr	equ 36
    64                                  _fpstat	equ 37
    65                                  _pri	equ 38
    66                                  _rele	equ 39
    67                                  _fff	equ 40
    68                                  _fnf	equ 41
    69                                  _alloc	equ 42
    70                                  _dalloc equ 43
    71                                  _calbac equ 44
    72                                  _dma	equ 45
    73                                  
    74                                  %macro sys 1-4
    75                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)	
    76                                      ; 03/09/2015	
    77                                      ; 13/04/2015
    78                                      ; Retro UNIX 386 v1 system call.	
    79                                      %if %0 >= 2   
    80                                          mov ebx, %2
    81                                          %if %0 >= 3    
    82                                              mov ecx, %3
    83                                              %if %0 = 4
    84                                                 mov edx, %4   
    85                                              %endif
    86                                          %endif
    87                                      %endif
    88                                      mov eax, %1
    89                                      ;int 30h
    90                                      int 40h ; TRDOS 386 (TRDOS v2.0)	   
    91                                  %endmacro
    92                                  
    93                                  ; TRDOS 386 (and Retro UNIX 386 v1) system call format:
    94                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
    95                                  
    96                                  ;BUFFERSIZE	equ	32768	; audio buffer size 
    97                                  ENDOFFILE       equ     1	; flag for knowing end of file
    98                                  
    99                                  [BITS 32]
   100                                  
   101                                  [ORG 0]
   102                                  
   103                                  	; 29/05/2024
   104                                  	%include 'ac97.inc' ; 17/02/2017 
     1                              <1> ; 11/11/2023
     2                              <1> ; 05/11/2023
     3                              <1> ; 03/11/2023
     4                              <1> ; 17/02/2017 (Erdogan Tan, PLAYWAV.ASM)
     5                              <1> ; constant.inc & codec.inc (for ICH AC97 wav player, 'PLAYWAV.COM') 
     6                              <1> 
     7                              <1> ; ----------------------------------------------------------------------------
     8                              <1> ; CONSTANT.INC
     9                              <1> ; ----------------------------------------------------------------------------
    10                              <1> 
    11                              <1> ;constants of stuff that seem hard to remember at times.
    12                              <1> 
    13                              <1> TRUE  EQU 1
    14                              <1> FALSE EQU 0
    15                              <1> 
    16                              <1> ENABLED  EQU 1
    17                              <1> DISABLED EQU 0
    18                              <1> 
    19                              <1> BIT0  EQU 1
    20                              <1> BIT1  EQU 2
    21                              <1> BIT2  EQU 4
    22                              <1> BIT3  EQU 8
    23                              <1> BIT4  EQU 10h
    24                              <1> BIT5  EQU 20h
    25                              <1> BIT6  EQU 40h
    26                              <1> BIT7  EQU 80h
    27                              <1> BIT8  EQU 100h
    28                              <1> BIT9  EQU 200h
    29                              <1> BIT10 EQU 400h
    30                              <1> BIT11 EQU 800h
    31                              <1> BIT12 EQU 1000h
    32                              <1> BIT13 EQU 2000h
    33                              <1> BIT14 EQU 4000h
    34                              <1> BIT15 EQU 8000h
    35                              <1> BIT16 EQU 10000h
    36                              <1> BIT17 EQU 20000h
    37                              <1> BIT18 EQU 40000h
    38                              <1> BIT19 EQU 80000h
    39                              <1> BIT20 EQU 100000h
    40                              <1> BIT21 EQU 200000h
    41                              <1> BIT22 EQU 400000h
    42                              <1> BIT23 EQU 800000h
    43                              <1> BIT24 EQU 1000000h
    44                              <1> BIT25 EQU 2000000h
    45                              <1> BIT26 EQU 4000000h
    46                              <1> BIT27 EQU 8000000h
    47                              <1> BIT28 EQU 10000000h
    48                              <1> BIT29 EQU 20000000h
    49                              <1> BIT30 EQU 40000000h
    50                              <1> BIT31 EQU 80000000h
    51                              <1> 
    52                              <1> ;special characters
    53                              <1> NUL     EQU 0
    54                              <1> NULL    EQU 0
    55                              <1> BELL    EQU 07
    56                              <1> BS      EQU 08
    57                              <1> TAB     EQU 09
    58                              <1> LF      EQU 10
    59                              <1> CR      EQU 13
    60                              <1> ESCAPE  EQU 27           ;ESC is a reserved word....
    61                              <1> 
    62                              <1> 
    63                              <1> ;file stuff
    64                              <1> READONLY  EQU   BIT0
    65                              <1> HIDDEN    EQU   BIT1
    66                              <1> SYSTEM    EQU   BIT2
    67                              <1> VOLUME    EQU   BIT3         ;ignored for file access
    68                              <1> DIRECTORY EQU   BIT4         ;must be 0 for file access
    69                              <1> ARCHIVE   EQU   BIT5
    70                              <1> SHAREABLE EQU   BIT7         ;for novell networks
    71                              <1> OPEN	EQU	2		; open existing file
    72                              <1> CREATE	EQU	1		; create new file
    73                              <1> 
    74                              <1> 
    75                              <1> ; PCI equates
    76                              <1> ; PCI function address (PFA)
    77                              <1> ; bit 31 = 1
    78                              <1> ; bit 23:16 = bus number     (0-255)
    79                              <1> ; bit 15:11 = device number  (0-31)
    80                              <1> ; bit 10:8 = function number (0-7)
    81                              <1> ; bit 7:0 = register number  (0-255)
    82                              <1> 
    83                              <1> IO_ADDR_MASK    EQU     0FFFEh          ; mask off bit 0 for reading BARs
    84                              <1> PCI_INDEX_PORT  EQU     0CF8h
    85                              <1> PCI_DATA_PORT   EQU     0CFCh
    86                              <1> PCI32           EQU     BIT31           ; bitflag to signal 32bit access
    87                              <1> PCI16           EQU     BIT30           ; bitflag for 16bit access
    88                              <1> 
    89                              <1> PCI_FN0         EQU     0 << 8
    90                              <1> PCI_FN1         EQU     1 << 8
    91                              <1> PCI_FN2         EQU     2 << 8
    92                              <1> PCI_FN3         EQU     3 << 8
    93                              <1> PCI_FN4         EQU     4 << 8
    94                              <1> PCI_FN5         EQU     5 << 8
    95                              <1> PCI_FN6         EQU     6 << 8
    96                              <1> PCI_FN7         EQU     7 << 8
    97                              <1> 
    98                              <1> PCI_CMD_REG		EQU	04h		; reg 04, command reg
    99                              <1>  IO_ENA			EQU	BIT0		; i/o decode enable
   100                              <1>  MEM_ENA		EQU	BIT1		; memory decode enable
   101                              <1>  BM_ENA                 EQU     BIT2		; bus master enable
   102                              <1> 
   103                              <1> ; ----------------------------------------------------------------------------
   104                              <1> ; CODEC.INC
   105                              <1> ; ----------------------------------------------------------------------------
   106                              <1> 
   107                              <1> ;Codec registers.
   108                              <1> ;
   109                              <1> ;Not all codecs are created equal. Refer to the spec for your specific codec.
   110                              <1> ;
   111                              <1> ;All registers are 16bits wide.  Access to codec registers over the AC97 link
   112                              <1> ;is defined by the OEM.  
   113                              <1> ;
   114                              <1> ;Secondary codec's are accessed by ORing in BIT7 of all register accesses.
   115                              <1> ;
   116                              <1> 
   117                              <1> ; each codec/mixer register is 16bits
   118                              <1> 
   119                              <1> CODEC_RESET_REG                 equ     00      ; reset codec
   120                              <1> CODEC_MASTER_VOL_REG            equ     02      ; master volume
   121                              <1> CODEC_HP_VOL_REG                equ     04      ; headphone volume
   122                              <1> CODEC_MASTER_MONO_VOL_REG       equ     06      ; master mono volume
   123                              <1> CODEC_MASTER_TONE_REG           equ     08      ; master tone (R+L)
   124                              <1> CODEC_PCBEEP_VOL_REG            equ     0ah     ; PC beep volume
   125                              <1> CODEC_PHONE_VOL_REG             equ     0bh     ; phone volume
   126                              <1> CODEC_MIC_VOL_REG               equ     0eh     ; MIC volume
   127                              <1> CODEC_LINE_IN_VOL_REG           equ     10h     ; line input volume
   128                              <1> CODEC_CD_VOL_REG                equ     12h     ; CD volume
   129                              <1> CODEC_VID_VOL_REG               equ     14h     ; video volume
   130                              <1> CODEC_AUX_VOL_REG               equ     16h     ; aux volume
   131                              <1> CODEC_PCM_OUT_REG               equ     18h     ; PCM output volume
   132                              <1> CODEC_RECORD_SELECT_REG         equ     1ah     ; record select input
   133                              <1> CODEC_RECORD_VOL_REG            equ     1ch     ; record volume
   134                              <1> CODEC_RECORD_MIC_VOL_REG        equ     1eh     ; record mic volume
   135                              <1> CODEC_GP_REG                    equ     20h     ; general purpose
   136                              <1> CODEC_3D_CONTROL_REG            equ     22h     ; 3D control
   137                              <1> ; 24h is reserved
   138                              <1> CODEC_POWER_CTRL_REG            equ     26h     ; powerdown control
   139                              <1> CODEC_EXT_AUDIO_REG             equ     28h     ; extended audio
   140                              <1> CODEC_EXT_AUDIO_CTRL_REG        equ     2ah     ; extended audio control
   141                              <1> CODEC_PCM_FRONT_DACRATE_REG     equ     2ch     ; PCM out sample rate
   142                              <1> CODEC_PCM_SURND_DACRATE_REG     equ     2eh     ; surround sound sample rate
   143                              <1> CODEC_PCM_LFE_DACRATE_REG       equ     30h     ; LFE sample rate
   144                              <1> CODEC_LR_ADCRATE_REG            equ     32h     ; PCM in sample rate
   145                              <1> CODEC_MIC_ADCRATE_REG           equ     34h     ; mic in sample rate
   146                              <1> 
   147                              <1> ; registers 36-7a are reserved on the ICH
   148                              <1> 
   149                              <1> CODEC_VENDORID1_REG             equ     7ch     ; codec vendor ID 1
   150                              <1> CODEC_VENDORID2_REG             equ     7eh     ; codec vendor ID 2
   151                              <1> 
   152                              <1> ; Mixer registers 0 through 51h reside in the ICH and are not forwarded over
   153                              <1> ; the AC97 link to the codec, which I think is a little weird.  Looks like
   154                              <1> ; the ICH makes it so you don't need a fully functional codec to play audio?
   155                              <1> ;
   156                              <1> ; whenever 2 codecs are present in the system, use BIT7 to access the 2nd
   157                              <1> ; set of registers, ie 80h-feh
   158                              <1> 
   159                              <1> PRIMARY_CODEC                   equ     0       ; 0-7F for primary codec
   160                              <1> SECONDARY_CODEC                 equ     BIT7    ; 80-8f registers for 2ndary
   161                              <1> 
   162                              <1> SAMPLE_RATE_441khz	equ     44100   ; 44.1Khz (cd quality) rate
   163                              <1> 
   164                              <1> ; ----------------------------------------------------------------------------
   165                              <1> ; 17/02/2017
   166                              <1> PCI_IO_BASE	equ 10h			; = NAMBAR register offset
   167                              <1> AC97_INT_LINE   equ 3Ch			; AC97 Interrupt Line register offset
   168                              <1> 
   169                              <1> ; ----------------------------------------------------------------------------
   170                              <1> ; ICH2AC97.INC
   171                              <1> ; ----------------------------------------------------------------------------
   172                              <1> 
   173                              <1> ; PCI stuff
   174                              <1> 
   175                              <1> ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
   176                              <1> 
   177                              <1> INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
   178                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   179                              <1> SIS_VID		equ	1039h
   180                              <1> NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
   181                              <1> AMD_VID		equ	1022h
   182                              <1> 
   183                              <1> ICH_DID         equ     2415h           ; ICH device ID
   184                              <1> ICH0_DID        equ     2425h           ; ICH0
   185                              <1> ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
   186                              <1>                                         ; they all should be compatible.
   187                              <1> 
   188                              <1> ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
   189                              <1> ICH3_DID	equ     2485h           ; ICH3
   190                              <1> ICH4_DID        equ     24C5h           ; ICH4
   191                              <1> ICH5_DID	equ     24D5h           ; ICH5 
   192                              <1> ICH6_DID	equ     266Eh           ; ICH6
   193                              <1> ESB6300_DID	equ     25A6h           ; 6300ESB
   194                              <1> ESB631X_DID	equ     2698h           ; 631XESB
   195                              <1> ICH7_DID	equ	27DEh		; ICH7
   196                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   197                              <1> MX82440_DID	equ	7195h
   198                              <1> SI7012_DID	equ	7012h
   199                              <1> NFORCE_DID	equ	01B1h
   200                              <1> NFORCE2_DID	equ	006Ah
   201                              <1> AMD8111_DID	equ	746Dh
   202                              <1> AMD768_DID	equ	7445h
   203                              <1> ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
   204                              <1> CK804_DID	equ	0059h
   205                              <1> MCP04_DID	equ	003Ah
   206                              <1> CK8_DID		equ	008Ah
   207                              <1> NFORCE3_DID	equ	00DAh
   208                              <1> CK8S_DID	equ	00EAh
   209                              <1> 
   210                              <1> NAMBAR_REG      equ     10h             ; native audio mixer BAR
   211                              <1>  NAM_SIZE       equ     256             ; 256 bytes required.
   212                              <1> 
   213                              <1> NABMBAR_REG     equ     14h             ; native audio bus mastering BAR
   214                              <1>  NABM_SIZE      equ     64              ; 64 bytes
   215                              <1> 
   216                              <1> ; BUS master registers, accessed via NABMBAR+offset
   217                              <1> 
   218                              <1> ; ICH supports 3 different types of register sets for three types of things
   219                              <1> ; it can do, thus:
   220                              <1> ;
   221                              <1> ; PCM in (for recording) aka PI
   222                              <1> ; PCM out (for playback) aka PO
   223                              <1> ; MIC in (for recording) aka MC
   224                              <1> 
   225                              <1> PI_BDBAR_REG            equ     0       ; PCM in buffer descriptor BAR
   226                              <1> PO_BDBAR_REG            equ     10h     ; PCM out buffer descriptor BAR
   227                              <1> MC_BDBAR_REG            equ     20h     ; MIC in buffer descriptor BAR
   228                              <1> 
   229                              <1> ; each buffer descriptor BAR holds a pointer which has entries to the buffer
   230                              <1> ; contents of the .WAV file we're going to play. Each entry is 8 bytes long
   231                              <1> ; (more on that later) and can contain 32 entries total, so each BAR is
   232                              <1> ; 256 bytes in length, thus:
   233                              <1> 
   234                              <1> BDL_SIZE                equ     32*8    ; Buffer Descriptor List size
   235                              <1> INDEX_MASK              equ     31      ; indexes must be 0-31
   236                              <1> 
   237                              <1> 
   238                              <1> 
   239                              <1> PI_CIV_REG              equ     4       ; PCM in current Index value (RO)
   240                              <1> PO_CIV_REG              equ     14h     ; PCM out current Index value (RO)
   241                              <1> MC_CIV_REG              equ     24h     ; MIC in current Index value (RO)
   242                              <1> ;8bit read only
   243                              <1> ; each current index value is simply a pointer showing us which buffer
   244                              <1> ; (0-31) the codec is currently processing. Once this counter hits 31, it
   245                              <1> ; wraps back to 0.
   246                              <1> ; this can be handy to know, as once it hits 31, we're almost out of data to
   247                              <1> ; play back or room to record!
   248                              <1> 
   249                              <1> 
   250                              <1> PI_LVI_REG              equ     5       ; PCM in Last Valid Index
   251                              <1> PO_LVI_REG              equ     15h     ; PCM out Last Valid Index
   252                              <1> MC_LVI_REG              equ     25h     ; MIC in Last Valid Index
   253                              <1> ;8bit read/write
   254                              <1> ; The Last Valid Index is a number (0-31) to let the codec know what buffer
   255                              <1> ; number to stop on after processing. It could be very nasty to play audio
   256                              <1> ; from buffers that aren't filled with the audio we want to play.
   257                              <1> 
   258                              <1> 
   259                              <1> PI_SR_REG               equ     6       ; PCM in Status register
   260                              <1> PO_SR_REG               equ     16h     ; PCM out Status register
   261                              <1> MC_SR_REG               equ     26h     ; MIC in Status register
   262                              <1> ;16bit read/write
   263                              <1> ; status registers.  Bitfields follow:
   264                              <1> 
   265                              <1> FIFO_ERR                equ     BIT4    ; FIFO Over/Underrun W1TC.
   266                              <1> 
   267                              <1> BCIS                    equ     BIT3    ; buffer completion interrupt status.
   268                              <1>                                         ; Set whenever the last sample in ANY
   269                              <1>                                         ; buffer is finished.  Bit is only
   270                              <1>                                         ; set when the Interrupt on Complete
   271                              <1>                                         ; (BIT4 of control reg) is set.
   272                              <1> 
   273                              <1> LVBCI                   equ     BIT2    ; Set whenever the codec has processed
   274                              <1>                                         ; the last buffer in the buffer list.
   275                              <1>                                         ; Will fire an interrupt if IOC bit is
   276                              <1>                                         ; set. Probably set after the last
   277                              <1>                                         ; sample in the last buffer is
   278                              <1>                                         ; processed.  W1TC
   279                              <1> 
   280                              <1>                                         ; 
   281                              <1> CELV                    equ     BIT1    ; Current buffer == last valid.
   282                              <1>                                         ; Bit is RO and remains set until LVI is
   283                              <1>                                         ; cleared.  Probably set up the start
   284                              <1>                                         ; of processing for the last buffer.
   285                              <1> 
   286                              <1> 
   287                              <1> DCH                     equ     BIT0    ; DMA controller halted.
   288                              <1>                                         ; set whenever audio stream is stopped
   289                              <1>                                         ; or something else goes wrong.
   290                              <1> 
   291                              <1> 
   292                              <1> PI_PICB_REG             equ     8       ; PCM in position in current buffer(RO)
   293                              <1> PO_PICB_REG             equ     18h     ; PCM out position in current buffer(RO)
   294                              <1> MC_PICB_REG             equ     28h     ; MIC in position in current buffer (RO)
   295                              <1> ;16bit read only
   296                              <1> ; position in current buffer regs show the number of dwords left to be
   297                              <1> ; processed in the current buffer.
   298                              <1> ; 
   299                              <1> 
   300                              <1> PI_PIV_REG              equ     0ah     ; PCM in Prefected index value
   301                              <1> PO_PIV_REG              equ     1ah     ; PCM out Prefected index value
   302                              <1> MC_PIV_REG              equ     2ah     ; MIC in Prefected index value
   303                              <1> ;8bit, read only
   304                              <1> ; Prefetched index value register.
   305                              <1> ; tells which buffer number (0-31) has be prefetched. I'd imagine this
   306                              <1> ; value follows the current index value fairly closely. (CIV+1)
   307                              <1> ;
   308                              <1> 
   309                              <1> 
   310                              <1> PI_CR_REG               equ     0bh     ; PCM in Control Register
   311                              <1> PO_CR_REG               equ     1bh     ; PCM out Control Register
   312                              <1> MC_CR_REG               equ     2bh     ; MIC in Control Register
   313                              <1> ; 8bit
   314                              <1> ; Control register *MUST* only be accessed as an 8bit value.
   315                              <1> ; Control register. See bitfields below.
   316                              <1> ;
   317                              <1> 
   318                              <1> 
   319                              <1> IOCE                    equ     BIT4    ; interrupt on complete enable.
   320                              <1>                                         ; set this bit if you want an intrtpt
   321                              <1>                                         ; to fire whenever LVBCI is set.
   322                              <1> FEIFE                   equ     BIT3    ; set if you want an interrupt to fire
   323                              <1>                                         ; whenever there is a FIFO (over or
   324                              <1>                                         ; under) error.
   325                              <1> LVBIE                   equ     BIT2    ; last valid buffer interrupt enable.
   326                              <1>                                         ; set if you want an interrupt to fire
   327                              <1>                                         ; whenever the completion of the last
   328                              <1>                                         ; valid buffer.
   329                              <1> RR                      equ     BIT1    ; reset registers.  Nukes all regs
   330                              <1>                                         ; except bits 4:2 of this register.
   331                              <1>                                         ; Only set this bit if BIT 0 is 0
   332                              <1> RPBM                    equ     BIT0    ; Run/Pause
   333                              <1>                                         ; set this bit to start the codec!
   334                              <1> 
   335                              <1> 
   336                              <1> GLOB_CNT_REG            equ     2ch     ; Global control register
   337                              <1> SEC_RES_EN              equ     BIT5    ; secondary codec resume event 
   338                              <1>                                         ; interrupt enable.  Not used here.
   339                              <1> PRI_RES_EN              equ     BIT4    ; ditto for primary. Not used here.
   340                              <1> ACLINK_OFF              equ     BIT3    ; Turn off the AC97 link
   341                              <1> ACWARM_RESET            equ     BIT2    ; Awaken the AC97 link from sleep.
   342                              <1>                                         ; registers preserved, bit self clears
   343                              <1> ACCOLD_RESET            equ     BIT1    ; Reset everything in the AC97 and
   344                              <1>                                         ; reset all registers.  Not self clearing
   345                              <1> 
   346                              <1> GPIIE                   equ     BIT0    ; GPI Interrupt enable.
   347                              <1>                                         ; set if you want an interrupt to
   348                              <1>                                         ; fire upon ANY of the bits in the
   349                              <1>                                         ; GPI (general pursose inputs?) not used.
   350                              <1> 
   351                              <1> GLOB_STS_REG            equ     30h     ; Global Status register (RO)
   352                              <1> 
   353                              <1> MD3                     equ     BIT17   ; modem powerdown status (yawn)
   354                              <1> AD3                     equ     BIT16   ; Audio powerdown status (yawn)
   355                              <1> RD_COMPLETE_STS         equ     BIT15   ; Codec read timed out. 0=normal
   356                              <1> BIT3SLOT12              equ     BIT14   ; shadowed status of bit 3 in slot 12
   357                              <1> BIT2SLOT12              equ     BIT13   ; shadowed status of bit 2 in slot 12
   358                              <1> BIT1SLOT12              equ     BIT12   ; shadowed status of bit 1 in slot 12
   359                              <1> SEC_RESUME_STS          equ     BIT11   ; secondary codec has resumed (and irqed)
   360                              <1> PRI_RESUME_STS          equ     BIT10   ; primary codec has resumed (and irqed)
   361                              <1> SEC_CODEC_RDY           equ     BIT9    ; secondary codec is ready for action
   362                              <1> PRI_CODEC_RDY           equ     BIT8    ; Primary codec is ready for action
   363                              <1>                                         ; software must check these bits before
   364                              <1>                                         ; starting the codec!
   365                              <1> MIC_IN_IRQ              equ     BIT7    ; MIC in caused an interrupt
   366                              <1> PCM_OUT_IRQ             equ     BIT6    ; One of the PCM out channels IRQed
   367                              <1> PCM_IN_IRQ              equ     BIT5    ; One of the PCM in channels IRQed
   368                              <1> MODEM_OUT_IRQ           equ     BIT2    ; modem out channel IRQed
   369                              <1> MODEM_IN_IRQ            equ     BIT1    ; modem in channel IRQed
   370                              <1> GPI_STS_CHANGE          equ     BIT0    ; set whenever GPI's have changed.
   371                              <1>                                         ; BIT0 of slot 12 also reflects this.
   372                              <1> 
   373                              <1> ACC_SEMA_REG            equ     34h     ; Codec write semiphore register
   374                              <1> CODEC_BUSY              equ     BIT0    ; codec register I/O is happening
   375                              <1>                                         ; self clearing
   376                              <1> ;
   377                              <1> ; Buffer Descriptors List
   378                              <1> ; As stated earlier, each buffer descriptor list is a set of (up to) 32 
   379                              <1> ; descriptors, each 8 bytes in length. Bytes 0-3 of a descriptor entry point
   380                              <1> ; to a chunk of memory to either play from or record to. Bytes 4-7 of an
   381                              <1> ; entry describe various control things detailed below.
   382                              <1> ; 
   383                              <1> ; Buffer pointers must always be aligned on a Dword boundry.
   384                              <1> ;
   385                              <1> 
   386                              <1> IOC                     equ     BIT31   ; Fire an interrupt whenever this
   387                              <1>                                         ; buffer is complete.
   388                              <1> 
   389                              <1> BUP                     equ     BIT30   ; Buffer Underrun Policy.
   390                              <1>                                         ; if this buffer is the last buffer
   391                              <1>                                         ; in a playback, fill the remaining
   392                              <1>                                         ; samples with 0 (silence) or not.
   393                              <1>                                         ; It's a good idea to set this to 1
   394                              <1>                                         ; for the last buffer in playback,
   395                              <1>                                         ; otherwise you're likely to get a lot
   396                              <1>                                         ; of noise at the end of the sound.
   397                              <1> 
   398                              <1> ;
   399                              <1> ; Bits 15:0 contain the length of the buffer, in number of samples, which
   400                              <1> ; are 16 bits each, coupled in left and right pairs, or 32bits each.
   401                              <1> ; Luckily for us, that's the same format as .wav files.
   402                              <1> ;
   403                              <1> ; A value of FFFF is 65536 samples. Running at 44.1Khz, that's just about
   404                              <1> ; 1.5 seconds of sample time. FFFF * 32bits is 1FFFFh bytes or 128k of data.
   405                              <1> ;
   406                              <1> ; A value of 0 in these bits means play no samples.
   407                              <1> ;
   408                              <1> 
   409                              <1> ; 11/11/2023
   410                              <1> CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
   411                              <1> CODEC_REG_POWERDOWN	equ	26h
   105                                  
   106                                  _STARTUP:
   107                                  	; Prints the Credits Text.
   108                                  	sys	_msg, Credits, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000000 BB[08250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000005 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000000A BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000000F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000014 CD40                <1>  int 40h
   109                                  
   110                                  	; clear bss
   111 00000016 B9[AA280000]            	mov	ecx, bss_end
   112 0000001B BF[1B280000]            	mov	edi, bss_start
   113 00000020 29F9                    	sub	ecx, edi
   114 00000022 D1E9                    	shr	ecx, 1
   115 00000024 31C0                    	xor	eax, eax
   116 00000026 F366AB                  	rep	stosw
   117                                  
   118                                  	; Detect (& Enable) AC'97 Audio Device
   119 00000029 E812050000              	call	DetectAC97
   120 0000002E 731B                    	jnc     short GetFileName
   121                                  
   122                                  _dev_not_ready:
   123                                  	; couldn't find the audio device!
   124                                  	sys	_msg, noDevMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000030 BB[BE250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000035 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000003A BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000003F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000044 CD40                <1>  int 40h
   125 00000046 E97E030000                      jmp     Exit
   126                                  
   127                                  GetFileName:  
   128 0000004B 89E6                    	mov	esi, esp
   129 0000004D AD                      	lodsd
   130 0000004E 83F802                  	cmp	eax, 2 ; two arguments 
   131                                  	       ; (program file name & mod file name)
   132 00000051 0F8280030000            	jb	pmsg_usage ; nothing to do
   133                                  
   134 00000057 AD                      	lodsd ; program file name address 
   135 00000058 AD                      	lodsd ; mod file name address (file to be read)
   136 00000059 89C6                    	mov	esi, eax
   137 0000005B BF[42280000]            	mov	edi, wav_file_name
   138                                  ScanName:       
   139 00000060 AC                      	lodsb
   140 00000061 84C0                    	test	al, al
   141 00000063 0F846E030000            	je	pmsg_usage
   142 00000069 3C20                    	cmp	al, 20h
   143 0000006B 74F3                    	je	short ScanName	; scan start of name.
   144 0000006D AA                      	stosb
   145 0000006E B4FF                    	mov	ah, 0FFh
   146                                  a_0:	
   147 00000070 FEC4                    	inc	ah
   148                                  a_1:
   149 00000072 AC                      	lodsb
   150 00000073 AA                      	stosb
   151 00000074 3C2E                    	cmp	al, '.'
   152 00000076 74F8                    	je	short a_0	
   153 00000078 20C0                    	and	al, al
   154 0000007A 75F6                    	jnz	short a_1
   155                                  
   156 0000007C 08E4                    	or	ah, ah		; if period NOT found,
   157 0000007E 750B                    	jnz	short _1 	; then add a .WAV extension.
   158                                  SetExt:
   159 00000080 4F                      	dec	edi
   160 00000081 C7072E574156            	mov	dword [edi], '.WAV'
   161 00000087 C6470400                	mov	byte [edi+4], 0
   162                                  
   163                                  _1:
   164 0000008B E84E060000              	call	write_audio_dev_info 
   165                                  
   166                                  ; open the file
   167                                          ; open existing file
   168 00000090 E8FB040000                      call    openFile ; no error? ok.
   169 00000095 731B                            jnc     short _gsr
   170                                  
   171                                  ; file not found!
   172                                  	sys	_msg, noFileErrMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000097 BB[E9250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000009C B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000000A1 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000000A6 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000000AB CD40                <1>  int 40h
   173                                  _exit_:
   174 000000AD E917030000                      jmp     Exit
   175                                  
   176                                  _gsr:  
   177 000000B2 E813050000                     	call    getSampleRate		; read the sample rate
   178                                                                          ; pass it onto codec.
   179                                  	; 25/11/2023
   180 000000B7 72F4                    	jc	short _exit_		; nothing to do
   181                                  
   182 000000B9 66A3[1E280000]          	mov	[sample_rate], ax
   183 000000BF 880D[1C280000]          	mov	[stmo], cl
   184 000000C5 8815[1D280000]          	mov	[bps], dl
   185                                  
   186                                  	; 26/11/2023
   187 000000CB C605[95280000]00        	mov	byte [fbs_shift], 0 ; 0 = stereo and 16 bit 
   188 000000D2 FEC9                    	dec	cl
   189 000000D4 7506                    	jnz	short _gsr_1 ; stereo
   190 000000D6 FE05[95280000]          	inc	byte [fbs_shift] ; 1 = mono or 8 bit		
   191                                  _gsr_1:	
   192 000000DC 80FA08                  	cmp	dl, 8 
   193 000000DF 7706                    	ja	short _gsr_2 ; 16 bit samples
   194 000000E1 FE05[95280000]          	inc	byte [fbs_shift] ; 2 = mono and 8 bit
   195                                  _gsr_2:	
   196                                  	; 29/05/2024
   197 000000E7 E8D4060000              	call	write_ac97_pci_dev_info
   198                                  
   199                                  	; 30/05/2024
   200                                  	; 29/05/2024
   201 000000EC E804230000              	call	check_vra
   202                                  
   203                                  	; 30/05/2024
   204 000000F1 E873200000              	call	codecConfig		; unmute codec, set rates.
   205 000000F6 0F82F3020000            	jc	init_err
   206                                  
   207                                  	; 25/11/2023
   208 000000FC E886080000              	call	write_VRA_info
   209                                  
   210                                  	; 01/05/2017
   211 00000101 E8EF050000              	call	write_wav_file_info
   212                                  
   213                                  	; 25/11/2023
   214                                  	; ------------------------------------------
   215                                  
   216 00000106 803D[25280000]01        	cmp	byte [VRA], 1
   217 0000010D 7205                    	jb	short chk_sample_rate
   218                                  
   219                                  playwav_48_khz:	
   220                                  	;mov	dword [loadfromwavfile], loadFromFile
   221                                  	;mov	dword [buffersize], 65536
   222 0000010F E969020000              	jmp	PlayNow
   223                                  
   224                                  chk_sample_rate:
   225                                  	; set conversion parameters
   226                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
   227 00000114 66A1[1E280000]          	mov	ax, [sample_rate]
   228 0000011A 663D80BB                	cmp	ax, 48000
   229 0000011E 74EF                    	je	short playwav_48_khz
   230                                  chk_22khz:
   231 00000120 663D2256                	cmp	ax, 22050
   232 00000124 7545                    	jne	short chk_11khz
   233 00000126 803D[1D280000]08        	cmp	byte [bps], 8
   234 0000012D 7615                    	jna	short chk_22khz_1
   235 0000012F BB[24160000]            	mov	ebx, load_22khz_stereo_16_bit
   236 00000134 803D[1C280000]01        	cmp	byte [stmo], 1 
   237 0000013B 751A                    	jne	short chk_22khz_2
   238 0000013D BB[96150000]            	mov	ebx, load_22khz_mono_16_bit
   239 00000142 EB13                    	jmp	short chk_22khz_2
   240                                  chk_22khz_1:
   241 00000144 BB[0E150000]            	mov	ebx, load_22khz_stereo_8_bit
   242 00000149 803D[1C280000]01        	cmp	byte [stmo], 1 
   243 00000150 7505                    	jne	short chk_22khz_2
   244 00000152 BB[84140000]            	mov	ebx, load_22khz_mono_8_bit
   245                                  chk_22khz_2:
   246 00000157 B85A1D0000              	mov	eax, 7514  ; (442*17)
   247 0000015C BA25000000              	mov	edx, 37
   248 00000161 B911000000              	mov	ecx, 17 
   249 00000166 E9BA010000              	jmp	set_sizes	
   250                                  chk_11khz:
   251 0000016B 663D112B                	cmp	ax, 11025
   252 0000016F 7545                    	jne	short chk_44khz
   253 00000171 803D[1D280000]08        	cmp	byte [bps], 8
   254 00000178 7615                    	jna	short chk_11khz_1
   255 0000017A BB[44180000]            	mov	ebx, load_11khz_stereo_16_bit
   256 0000017F 803D[1C280000]01        	cmp	byte [stmo], 1 
   257 00000186 751A                    	jne	short chk_11khz_2
   258 00000188 BB[CA170000]            	mov	ebx, load_11khz_mono_16_bit
   259 0000018D EB13                    	jmp	short chk_11khz_2
   260                                  chk_11khz_1:
   261 0000018F BB[4F170000]            	mov	ebx, load_11khz_stereo_8_bit
   262 00000194 803D[1C280000]01        	cmp	byte [stmo], 1 
   263 0000019B 7505                    	jne	short chk_11khz_2
   264 0000019D BB[D6160000]            	mov	ebx, load_11khz_mono_8_bit
   265                                  chk_11khz_2:
   266 000001A2 B8AD0E0000              	mov	eax, 3757  ; (221*17)
   267 000001A7 BA4A000000              	mov	edx, 74
   268 000001AC B911000000              	mov	ecx, 17
   269 000001B1 E96F010000              	jmp	set_sizes 
   270                                  chk_44khz:
   271 000001B6 663D44AC                	cmp	ax, 44100
   272 000001BA 7545                    	jne	short chk_16khz
   273 000001BC 803D[1D280000]08        	cmp	byte [bps], 8
   274 000001C3 7615                    	jna	short chk_44khz_1
   275 000001C5 BB[6F1A0000]            	mov	ebx, load_44khz_stereo_16_bit
   276 000001CA 803D[1C280000]01        	cmp	byte [stmo], 1 
   277 000001D1 751A                    	jne	short chk_44khz_2
   278 000001D3 BB[F5190000]            	mov	ebx, load_44khz_mono_16_bit
   279 000001D8 EB13                    	jmp	short chk_44khz_2
   280                                  chk_44khz_1:
   281 000001DA BB[77190000]            	mov	ebx, load_44khz_stereo_8_bit
   282 000001DF 803D[1C280000]01        	cmp	byte [stmo], 1 
   283 000001E6 7505                    	jne	short chk_44khz_2
   284 000001E8 BB[FA180000]            	mov	ebx, load_44khz_mono_8_bit
   285                                  chk_44khz_2:
   286 000001ED B8D93A0000              	mov	eax, 15065 ; (655*23)
   287 000001F2 BA19000000              	mov	edx, 25
   288 000001F7 B917000000              	mov	ecx, 23
   289 000001FC E924010000              	jmp	set_sizes 
   290                                  chk_16khz:
   291 00000201 663D803E                	cmp	ax, 16000
   292 00000205 7545                    	jne	short chk_8khz
   293 00000207 803D[1D280000]08        	cmp	byte [bps], 8
   294 0000020E 7615                    	jna	short chk_16khz_1
   295 00000210 BB[C00F0000]            	mov	ebx, load_16khz_stereo_16_bit
   296 00000215 803D[1C280000]01        	cmp	byte [stmo], 1 
   297 0000021C 751A                    	jne	short chk_16khz_2
   298 0000021E BB[3E0F0000]            	mov	ebx, load_16khz_mono_16_bit
   299 00000223 EB13                    	jmp	short chk_16khz_2
   300                                  chk_16khz_1:
   301 00000225 BB[830E0000]            	mov	ebx, load_16khz_stereo_8_bit
   302 0000022A 803D[1C280000]01        	cmp	byte [stmo], 1 
   303 00000231 7505                    	jne	short chk_16khz_2
   304 00000233 BB[030E0000]            	mov	ebx, load_16khz_mono_8_bit
   305                                  chk_16khz_2:
   306 00000238 B855150000              	mov	eax, 5461
   307 0000023D BA03000000              	mov	edx, 3
   308 00000242 B901000000              	mov	ecx, 1
   309 00000247 E9D9000000              	jmp	set_sizes 
   310                                  chk_8khz:
   311 0000024C 663D401F                	cmp	ax, 8000
   312 00000250 7545                    	jne	short chk_24khz
   313 00000252 803D[1D280000]08        	cmp	byte [bps], 8
   314 00000259 7615                    	jna	short chk_8khz_1
   315 0000025B BB[B70C0000]            	mov	ebx, load_8khz_stereo_16_bit
   316 00000260 803D[1C280000]01        	cmp	byte [stmo], 1 
   317 00000267 751A                    	jne	short chk_8khz_2
   318 00000269 BB[E60B0000]            	mov	ebx, load_8khz_mono_16_bit
   319 0000026E EB13                    	jmp	short chk_8khz_2
   320                                  chk_8khz_1:
   321 00000270 BB[B50A0000]            	mov	ebx, load_8khz_stereo_8_bit
   322 00000275 803D[1C280000]01        	cmp	byte [stmo], 1 
   323 0000027C 7505                    	jne	short chk_8khz_2
   324 0000027E BB[D4090000]            	mov	ebx, load_8khz_mono_8_bit
   325                                  chk_8khz_2:
   326 00000283 B8AA0A0000              	mov	eax, 2730
   327 00000288 BA06000000              	mov	edx, 6
   328 0000028D B901000000              	mov	ecx, 1
   329 00000292 E98E000000              	jmp	set_sizes 
   330                                  chk_24khz:
   331 00000297 663DC05D                	cmp	ax, 24000
   332 0000029B 7542                    	jne	short chk_32khz
   333 0000029D 803D[1D280000]08        	cmp	byte [bps], 8
   334 000002A4 7615                    	jna	short chk_24khz_1
   335 000002A6 BB[EE110000]            	mov	ebx, load_24khz_stereo_16_bit
   336 000002AB 803D[1C280000]01        	cmp	byte [stmo], 1 
   337 000002B2 751A                    	jne	short chk_24khz_2
   338 000002B4 BB[8A110000]            	mov	ebx, load_24khz_mono_16_bit
   339 000002B9 EB13                    	jmp	short chk_24khz_2
   340                                  chk_24khz_1:
   341 000002BB BB[FF100000]            	mov	ebx, load_24khz_stereo_8_bit
   342 000002C0 803D[1C280000]01        	cmp	byte [stmo], 1 
   343 000002C7 7505                    	jne	short chk_24khz_2
   344 000002C9 BB[97100000]            	mov	ebx, load_24khz_mono_8_bit
   345                                  chk_24khz_2:
   346 000002CE B800200000              	mov	eax, 8192
   347 000002D3 BA02000000              	mov	edx, 2
   348 000002D8 B901000000              	mov	ecx, 1
   349 000002DD EB46                    	jmp	short set_sizes 
   350                                  chk_32khz:
   351 000002DF 663D007D                	cmp	ax, 32000
   352 000002E3 7574                    	jne	short vra_needed
   353 000002E5 803D[1D280000]08        	cmp	byte [bps], 8
   354 000002EC 7615                    	jna	short chk_32khz_1
   355 000002EE BB[F3130000]            	mov	ebx, load_32khz_stereo_16_bit
   356 000002F3 803D[1C280000]01        	cmp	byte [stmo], 1 
   357 000002FA 751A                    	jne	short chk_32khz_2
   358 000002FC BB[88130000]            	mov	ebx, load_32khz_mono_16_bit
   359 00000301 EB13                    	jmp	short chk_32khz_2
   360                                  chk_32khz_1:
   361 00000303 BB[EA120000]            	mov	ebx, load_32khz_stereo_8_bit
   362 00000308 803D[1C280000]01        	cmp	byte [stmo], 1 
   363 0000030F 7505                    	jne	short chk_32khz_2
   364 00000311 BB[76120000]            	mov	ebx, load_32khz_mono_8_bit
   365                                  chk_32khz_2:
   366 00000316 B8AA2A0000              	mov	eax, 10922
   367 0000031B BA03000000              	mov	edx, 3
   368 00000320 B902000000              	mov	ecx, 2
   369                                  	;jmp	short set_sizes 
   370                                  set_sizes:
   371 00000325 803D[1C280000]01        	cmp	byte [stmo], 1
   372 0000032C 7402                    	je	short ss_1
   373 0000032E D1E0                    	shl	eax, 1
   374                                  ss_1:
   375 00000330 803D[1D280000]08        	cmp	byte [bps], 8
   376 00000337 7602                    	jna	short ss_2
   377                                  	; 16 bit samples
   378 00000339 D1E0                    	shl	eax, 1
   379                                  ss_2:
   380 0000033B A3[75030000]            	mov	[loadsize], eax
   381 00000340 F7E2                    	mul	edx
   382                                  	;cmp	ecx, 1
   383                                  	;je	short ss_3
   384                                  ;ss_3:
   385 00000342 F7F1                    	div	ecx
   386 00000344 8A0D[95280000]          	mov	cl, [fbs_shift]
   387 0000034A D3E0                    	shl	eax, cl
   388                                  	; 26/11/2023
   389                                  	;shr	eax, 1	; buffer size is 16 bit sample count
   390 0000034C A3[79030000]            	mov	[buffersize], eax ; buffer size in bytes 
   391 00000351 891D[71030000]          	mov	[loadfromwavfile], ebx
   392 00000357 EB24                    	jmp	short PlayNow
   393                                  
   394                                  vra_needed:
   395                                  	sys	_msg, msg_no_vra, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000359 BB[53260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000035E B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000363 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000368 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000036D CD40                <1>  int 40h
   396 0000036F EB58                    	jmp	Exit
   397                                  
   398                                  	; 26/11/2023
   399                                  	; 13/11/2023
   400                                  loadfromwavfile:
   401 00000371 [28060000]              	dd	loadFromFile
   402                                  loadsize:	; read from wav file
   403 00000375 00000000                	dd	0
   404                                  buffersize:	; write to DMA buffer
   405 00000379 00000100                	dd	65536 ; bytes
   406                                  
   407                                  PlayNow: 
   408                                  
   409                                  ; 26/11/2023
   410                                  %if 0
   411                                  	; Allocate Audio Buffer (for user)
   412                                  	;sys	_audio, 0200h, BUFFERSIZE, audio_buffer
   413                                  	; 26/11/2023
   414                                  	sys	_audio, 0200h, [buffersize], audio_buffer
   415                                  	jnc	short _2
   416                                  
   417                                  	; 26/11/2023 - temporary
   418                                  	;sys	_msg, test_1, 255, 0Ch
   419                                  
   420                                  error_exit:
   421                                  	sys	_msg, trdos386_err_msg, 255, 0Eh
   422                                  	jmp	Exit
   423                                  _2:
   424                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   425                                  	; bl = 0, bh = 4
   426                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   427                                  
   428                                  	sys	_video, 0400h
   429                                  	cmp	eax, 0B8000h
   430                                  	jne	short error_exit
   431                                  
   432                                  	; Initialize Audio Device (bh = 3)
   433                                  	sys	_audio, 0301h, 0, audio_int_handler 
   434                                  ;	jc	short error_exit
   435                                  _3:
   436                                  
   437                                  %else
   438                                  	; 29/05/2024
   439                                  	; playwav4.asm
   440                                  _2:	
   441 0000037D E8DB200000              	call	check4keyboardstop	; flush keyboard buffer
   442 00000382 72F9                    	jc	short _2		; 07/11/2023
   443                                  
   444                                   	;call	codecConfig		; unmute codec, set rates.
   445                                  	; 11/11/2023
   446                                  	;jc	short init_err
   447                                  %endif
   448                                  
   449                                  ;
   450                                  ; position file pointer to start in actual wav data
   451                                  ; MUCH improvement should really be done here to check if sample size is
   452                                  ; supported, make sure there are 2 channels, etc.  
   453                                  ;
   454                                          ;mov     ah, 42h
   455                                          ;mov     al, 0	; from start of file
   456                                          ;mov     bx, [FileHandle]
   457                                          ;xor     cx, cx
   458                                          ;mov     dx, 44	; jump past .wav/riff header
   459                                          ;int     21h
   460                                  
   461                                  	sys	_seek, [FileHandle], 44, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000384 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000038A B92C000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000038F BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000394 B813000000          <1>  mov eax, %1
    89                              <1> 
    90 00000399 CD40                <1>  int 40h
   462                                  
   463                                  	sys	_msg, nextline, 255, 07h ; 01/05/2017
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000039B BB[2C270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003A0 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003A5 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003AA B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003AF CD40                <1>  int 40h
   464                                  
   465                                  	; 29/05/2024
   466                                  	; ----
   467                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   468                                  	; bl = 0, bh = 4
   469                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   470                                  
   471                                  	sys	_video, 0400h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003B1 BB00040000          <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003B6 B81F000000          <1>  mov eax, %1
    89                              <1> 
    90 000003BB CD40                <1>  int 40h
   472 000003BD 3D00800B00              	cmp	eax, 0B8000h
   473 000003C2 7543                    	jne	short error_exit
   474                                  	; ----
   475                                  
   476                                  ; play the .wav file. Most of the good stuff is in here.
   477                                  
   478 000003C4 E856000000              	call    PlayWav
   479                                  
   480                                  ; close the .wav file and exit.
   481                                  
   482                                  ; 29/05/2024
   483                                  %if 0
   484                                  StopPlaying:
   485                                  	; Stop Playing
   486                                  	sys	_audio, 0700h
   487                                  	; Cancel callback service (for user)
   488                                  	sys	_audio, 0900h
   489                                  	; Deallocate Audio Buffer (for user)
   490                                  	sys	_audio, 0A00h
   491                                  	; Disable Audio Device
   492                                  	sys	_audio, 0C00h
   493                                  %endif
   494                                  
   495                                  Exit:  
   496 000003C9 E8DB010000                      call    closeFile
   497                                           
   498                                  	sys	_exit	; Bye!
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80                              <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003CE B801000000          <1>  mov eax, %1
    89                              <1> 
    90 000003D3 CD40                <1>  int 40h
   499                                  here:
   500 000003D5 EBFE                    	jmp	short here
   501                                  
   502                                  pmsg_usage:
   503                                  	sys	_msg, msg_usage, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003D7 BB[9F250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003DC B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003E1 BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003E6 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003EB CD40                <1>  int 40h
   504 000003ED EBDA                    	jmp	short Exit
   505                                  
   506                                  	; 29/05/2024
   507                                  init_err:
   508                                  	sys	_msg, msg_init_err, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003EF BB[22260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003F4 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003F9 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003FE B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000403 CD40                <1>  int 40h
   509 00000405 EBC2                    	jmp	short Exit
   510                                  
   511                                  	; 29/05/2024
   512                                  error_exit:
   513                                  	sys	_msg, msg_error, 255, 0Eh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000407 BB[02260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000040C B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000411 BA0E000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000416 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000041B CD40                <1>  int 40h
   514 0000041D EBAA                    	jmp	short Exit
   515                                  
   516                                  	; --------------------------------------------
   517                                  	
   518                                  	; 29/05/2024 (TYRDOS 386, playwav7.s)
   519                                  	; ((Modified from playwav4.asm, ich_wav4.asm))
   520                                  	; ------------------
   521                                  ;playwav_vra:
   522                                  PlayWav:
   523                                  	; create Buffer Descriptor List
   524                                  
   525                                  	;  Generic Form of Buffer Descriptor
   526                                  	;  ---------------------------------
   527                                  	;  63   62    61-48    47-32   31-0
   528                                  	;  ---  ---  --------  ------- -----
   529                                  	;  IOC  BUP -reserved- Buffer  Buffer
   530                                  	;		      Length   Pointer
   531                                  	;		      [15:0]   [31:0]
   532                                  
   533                                  	; 29/05/2024
   534                                  	; Allocate memory block (33 pages)
   535                                  	sys	_alloc, BDL_BUFFER, 33*4096, 0 ; no upper limit
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000041F BB[00300000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000424 B900100200          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000429 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000042E B82A000000          <1>  mov eax, %1
    89                              <1> 
    90 00000433 CD40                <1>  int 40h
   536 00000435 72D0                    	jc	short error_exit
   537                                  	
   538                                  	;mov	esi, eax
   539                                  
   540 00000437 A3[A6280000]            	mov	[_bdl_buffer], eax ; BDL_BUFFER physical address 
   541                                  
   542 0000043C 0500100000              	add	eax, 4096	; WAVBUFFER_1 physical address
   543 00000441 89C3                    	mov	ebx, eax
   544                                  	;mov	[wav_buffer1], eax
   545                                  	;add	eax, 65536	; WAVBUFFER_2 physical address
   546                                  	;mov	[wav_buffer2], eax
   547                                  
   548 00000443 BF[00300000]            	mov	edi, BDL_BUFFER
   549 00000448 B910000000              	mov	ecx, 16
   550                                  _0:
   551                                  	;mov	eax, WAVBUFFER_1
   552 0000044D 89D8                    	mov	eax, ebx	; WAVBUFFER_1 physical address
   553 0000044F AB                      	stosd
   554                                  
   555 00000450 A1[79030000]            	mov	eax, [buffersize]
   556 00000455 D1E8                    	shr	eax, 1 ; buffer size in word
   557 00000457 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   558 0000045C AB                      	stosd
   559                                  
   560                                  	;mov	eax, WAVBUFFER_2
   561 0000045D 89D8                    	mov	eax, ebx
   562 0000045F 0500000100              	add	eax, 65536	; WAVBUFFER_2 physical address
   563 00000464 AB                      	stosd
   564                                  
   565 00000465 A1[79030000]            	mov	eax, [buffersize]
   566 0000046A D1E8                    	shr	eax, 1 ; buffer size in word
   567 0000046C 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   568 00000471 AB                      	stosd
   569                                  
   570 00000472 E2D9                    	loop	_0
   571                                  
   572                                  	;push	esi
   573                                  
   574                                  	; load 64k into buffer 1
   575 00000474 C705[A2280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   575 0000047A [00400000]         
   576 0000047E FF15[71030000]          	call	dword [loadfromwavfile]
   577                                  
   578                                  	; and 64k into buffer 2
   579 00000484 C705[A2280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   579 0000048A [00400100]         
   580 0000048E FF15[71030000]          	call	dword [loadfromwavfile]
   581                                  
   582                                  	;pop	esi
   583                                  	
   584                                  	; write NABMBAR+10h with offset of buffer descriptor list
   585                                  
   586                                         	;;mov	eax, BDL_BUFFER
   587                                          ;mov	eax, esi	; BDL_BUFFER physical address
   588                                  
   589 00000494 A1[A6280000]            	mov	eax, [_bdl_buffer] ; BDL_BUFFER physical address
   590                                  
   591 00000499 668B15[A0280000]        	mov	dx, [NABMBAR]
   592 000004A0 6683C210                        add     dx, PO_BDBAR_REG	; set pointer to BDL
   593                                  	;out	dx, eax 		; write to AC97 controller
   594                                  	; 29/05/2024
   595 000004A4 89C3                    	mov	ebx, eax ; data, dword
   596 000004A6 B405                    	mov	ah, 5	; write port dword
   597 000004A8 CD34                    	int	34h
   598                                  
   599                                  	; 19/05/2024
   600                                  	;call	delay1_4ms
   601                                  
   602 000004AA B01F                            mov	al, 31
   603 000004AC E841200000              	call	setLastValidIndex
   604                                  
   605                                  	; 19/05/2024
   606                                  	;call	delay1_4ms
   607                                  
   608                                  	; 17/02/2017
   609 000004B1 668B15[A0280000]                mov	dx, [NABMBAR]
   610 000004B8 6683C21B                        add	dx, PO_CR_REG		; PCM out Control Register
   611                                          ;mov	al, IOCE + RPBM	; Enable 'Interrupt On Completion' + run
   612                                  	;			; (LVBI interrupt will not be enabled)
   613                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   614 000004BC B001                    	mov	al, RPBM
   615                                  	;out	dx, al			; Start bus master operation.
   616                                  	; 29/05/2024
   617                                  	; al = data, byte
   618 000004BE B401                    	mov	ah, 1 ; write port, byte
   619 000004C0 CD34                    	int	34h
   620                                  
   621                                  	; 19/05/2024
   622                                  	; 06/11/2023
   623                                  	;call	delay1_4ms
   624                                  	;call	delay1_4ms
   625                                  	;call	delay1_4ms
   626                                  	;call	delay1_4ms
   627                                  
   628                                  ; while DMA engine is running, examine current index and wait until it hits 1
   629                                  ; as soon as it's 1, we need to refresh the data in wavbuffer1 with another
   630                                  ; 64k. Likewise when it's playing buffer 2, refresh buffer 1 and repeat.
   631                                  
   632                                  ; 18/11/2023
   633                                  ; 08/11/2023
   634                                  ; 07/11/2023
   635                                  
   636                                  tuneLoop:
   637                                  	; 18/11/2023 (ich_wav4.asm)
   638                                  	; 08/11/2023
   639                                  	; 06/11/2023
   640 000004C2 B031                    	mov	al, '1'
   641 000004C4 E86C000000              	call	tL0
   642                                  tL1:
   643 000004C9 E8E71F0000              	call	updateLVI	; /set LVI != CIV/
   644 000004CE 7452                    	jz	short _exitt_	; 08/11/2023
   645 000004D0 E8881F0000              	call	check4keyboardstop
   646 000004D5 724B                    	jc	short _exitt_
   647 000004D7 E8C91F0000              	call	getCurrentIndex
   648 000004DC A801                    	test	al, BIT0
   649 000004DE 74E9                    	jz	short tL1	; loop if buffer 2 is not playing
   650                                  
   651                                  	; 29/05/2024
   652                                  	; load buffer 1
   653 000004E0 C705[A2280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   653 000004E6 [00400000]         
   654 000004EA FF15[71030000]          	call	dword [loadfromwavfile]
   655 000004F0 7230                    	jc	short _exitt_	; end of file
   656                                  
   657 000004F2 B032                    	mov	al, '2'
   658 000004F4 E83C000000              	call	tL0
   659                                  tL2:
   660 000004F9 E8B71F0000              	call    updateLVI
   661 000004FE 7422                    	jz	short _exitt_	; 08/11/2023
   662 00000500 E8581F0000              	call    check4keyboardstop
   663 00000505 721B                    	jc	short _exitt_
   664 00000507 E8991F0000              	call    getCurrentIndex
   665 0000050C A801                    	test	al, BIT0
   666 0000050E 75E9                    	jnz	short tL2	; loop if buffer 1 is not playing
   667                                  
   668                                  	; 29/05/2024
   669                                  	; load buffer 2
   670 00000510 C705[A2280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   670 00000516 [00400100]         
   671 0000051A FF15[71030000]          	call	dword [loadfromwavfile]
   672 00000520 73A0                    	jnc	short tuneLoop
   673                                  _exitt_:
   674 00000522 668B15[A0280000]        	mov	dx, [NABMBAR]		
   675 00000529 6683C21B                	add	dx, PO_CR_REG	; PCM out Control Register
   676 0000052D B000                    	mov	al, 0
   677                                  	;out	dx, al		; stop player
   678                                  	; 29/05/2024
   679                                  	; al = data, byte
   680 0000052F B401                    	mov	ah, 1  ; write port, byte
   681 00000531 CD34                    	int	34h	
   682                                  
   683                                  	; 29/05/2024
   684 00000533 B030                    	mov	al, '0'
   685                                  
   686                                  	;add	al, '0'
   687                                  	;call	tL0
   688                                  	;
   689                                  	;retn
   690                                  	; 06/11/2023
   691                                  	;jmp	short tL0
   692                                  	;retn
   693                                  
   694                                  	; 06/11/2023
   695                                  tL0:
   696                                  	; 29/05/2024 (TRDOS 386)
   697                                  	; 08/11/2023
   698                                  	; 05/11/2023
   699                                  	; 17/02/2017 - Buffer switch test (temporary)
   700                                  	; 06/11/2023
   701                                  	; al = buffer indicator ('1', '2' or '0' -stop- )
   702                                  	
   703 00000535 BB00800B00              	mov	ebx, 0B8000h ; video display page address
   704 0000053A B44E                    	mov	ah, 4Eh
   705 0000053C 668903                  	mov	[ebx], ax ; show current play buffer (1, 2)
   706 0000053F C3                      	retn
   707                                  
   708                                  	; ------------------
   709                                  
   710                                  ; 29/05/2024
   711                                  %if 0
   712                                  	; 25/11/2023
   713                                  DetectAC97:
   714                                  	; Detect (BH=1) AC'97 (BL=2) Audio Device
   715                                          sys	_audio, 0102h
   716                                  	jc	short DetectAC97_retn
   717                                  
   718                                  	; 25/11/2023
   719                                  	; Get AC'97 Codec info
   720                                  	; (Function 14, sub function 1)
   721                                  	sys	_audio, 0E01h
   722                                  	; Save Variable Rate Audio support bit
   723                                  	and	al, 1
   724                                  	mov	[VRA], al
   725                                  
   726                                  DetectAC97_retn:
   727                                  	retn
   728                                  %else
   729                                  	; 29/05/2024
   730                                  DetectAC97:
   731                                  DetectICH:
   732                                  	; 22/11/2023
   733                                  	; 19/11/2023
   734                                  	; 01/11/2023 - TRDOS 386 Kernel v2.0.7
   735                                  	;; 10/06/2017
   736                                  	;; 05/06/2017
   737                                  	;; 29/05/2017
   738                                  	;; 28/05/2017
   739                                  
   740                                  	; 19/11/2023
   741 00000540 BE[8C260000]            	mov	esi, valid_ids	; address of Valid ICH (AC97) Device IDs
   742 00000545 B915000000              	mov	ecx, valid_id_count
   743                                  pfd_1:
   744 0000054A AD                      	lodsd
   745 0000054B E8EE1A0000              	call	pciFindDevice
   746 00000550 7303                    	jnc	short d_ac97_1
   747 00000552 E2F6                    	loop	pfd_1
   748                                  
   749                                  	;stc
   750 00000554 C3                      	retn
   751                                  
   752                                  d_ac97_1:
   753                                  	; eax = BUS/DEV/FN
   754                                  	;	00000000BBBBBBBBDDDDDFFF00000000
   755                                  	; edx = DEV/VENDOR
   756                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
   757                                  
   758                                  	; playwav4.asm - 19/05/2024
   759                                  
   760 00000555 A3[9A280000]            	mov	[bus_dev_fn], eax
   761 0000055A 8915[96280000]          	mov	[dev_vendor], edx
   762                                  
   763                                  	; get ICH base address regs for mixer and bus master
   764                                  
   765 00000560 B010                            mov     al, NAMBAR_REG
   766 00000562 E8651B0000                      call    pciRegRead16			; read PCI registers 10-11
   767                                          ;and    dx, IO_ADDR_MASK 		; mask off BIT0
   768                                  	; 19/05/2024
   769 00000567 80E2FE                  	and	dl, 0FEh
   770                                  
   771 0000056A 668915[9E280000]                mov     [NAMBAR], dx			; save audio mixer base addr
   772                                  
   773 00000571 B014                    	mov     al, NABMBAR_REG
   774 00000573 E8541B0000                      call    pciRegRead16
   775                                          ;and    dx, IO_ADDR_MASK
   776                                  	; 19/05/2024
   777 00000578 80E2C0                  	and	dl, 0C0h
   778                                  
   779 0000057B 668915[A0280000]                mov     [NABMBAR], dx			; save bus master base addr
   780                                  
   781 00000582 B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
   782 00000584 E83C1B0000              	call	pciRegRead8 ; 17/02/2017
   783                                  
   784 00000589 8815[94280000]          	mov     [ac97_int_ln_reg], dl
   785                                  
   786                                  	;clc
   787                                  
   788 0000058F C3                      	retn
   789                                  %endif
   790                                  
   791                                  ;open or create file
   792                                  ;
   793                                  ;input: ds:dx-->filename (asciiz)
   794                                  ;       al=file Mode (create or open)
   795                                  ;output: none  cs:[FileHandle] filled
   796                                  ;
   797                                  openFile:
   798                                  	;mov	ah, 3Bh	; start with a mode
   799                                  	;add	ah, al	; add in create or open mode
   800                                  	;xor	ecx, ecx
   801                                  	;int	21h
   802                                  	;jc	short _of1
   803                                  	;;mov	[cs:FileHandle], ax
   804                                  
   805                                  	sys	_open, wav_file_name, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000590 BB[42280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000595 B900000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000059A B805000000          <1>  mov eax, %1
    89                              <1> 
    90 0000059F CD40                <1>  int 40h
   806 000005A1 7205                    	jc	short _of1
   807                                  
   808 000005A3 A3[03250000]            	mov	[FileHandle], eax
   809                                  _of1:
   810 000005A8 C3                      	retn
   811                                  
   812                                  ; close the currently open file
   813                                  ; input: none, uses cs:[FileHandle]
   814                                  closeFile:
   815 000005A9 833D[03250000]FF        	cmp	dword [FileHandle], -1
   816 000005B0 7417                    	je	short _cf1
   817                                  	;mov    bx, [FileHandle]  
   818                                  	;mov    ax, 3E00h
   819                                          ;int    21h              ;close file
   820                                  
   821                                  	sys	_close, [FileHandle]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005B2 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005B8 B806000000          <1>  mov eax, %1
    89                              <1> 
    90 000005BD CD40                <1>  int 40h
   822 000005BF C705[03250000]FFFF-     	mov 	dword [FileHandle], -1
   822 000005C7 FFFF               
   823                                  _cf1:
   824 000005C9 C3                      	retn
   825                                  
   826                                  getSampleRate:
   827                                  	
   828                                  ; reads the sample rate from the .wav file.
   829                                  ; entry: none - assumes file is already open
   830                                  ; exit: ax = sample rate (11025, 22050, 44100, 48000)
   831                                  ;	cx = number of channels (mono=1, stereo=2)
   832                                  ;	dx = bits per sample (8, 16)
   833                                  
   834 000005CA 53                      	push    ebx
   835                                  
   836                                          ;mov	ah, 42h
   837                                          ;mov	al, 0	; from start of file
   838                                          ;mov	bx, [FileHandle]
   839                                          ;xor	ecx, ecx
   840                                          ;mov	dx, 08h	; "WAVE"
   841                                          ;int	21h
   842                                  	
   843                                  	sys	_seek, [FileHandle], 8, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005CB 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005D1 B908000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005D6 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005DB B813000000          <1>  mov eax, %1
    89                              <1> 
    90 000005E0 CD40                <1>  int 40h
   844                                  
   845                                          ;mov	dx, smpRBuff
   846                                          ;mov	cx, 28	; 28 bytes
   847                                  	;mov	ah, 3fh
   848                                          ;int	21h
   849                                  
   850                                  	sys	_read, [FileHandle], smpRBuff, 28
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005E2 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005E8 B9[26280000]        <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005ED BA1C000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005F2 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000005F7 CD40                <1>  int 40h
   851                                  
   852 000005F9 813D[26280000]5741-     	cmp	dword [smpRBuff], 'WAVE'
   852 00000601 5645               
   853 00000603 7520                    	jne	short gsr_stc
   854                                  
   855 00000605 66833D[32280000]01      	cmp	word [smpRBuff+12], 1	; Offset 20, must be 1 (= PCM)
   856 0000060D 7516                    	jne	short gsr_stc
   857                                  
   858 0000060F 668B0D[34280000]        	mov	cx, [smpRBuff+14]	; return num of channels in CX
   859 00000616 66A1[36280000]                  mov     ax, [smpRBuff+16]	; return sample rate in AX
   860 0000061C 668B15[40280000]        	mov	dx, [smpRBuff+26]	; return bits per sample value in DX
   861                                  gsr_retn:
   862 00000623 5B                              pop     ebx
   863 00000624 C3                              retn
   864                                  gsr_stc:
   865 00000625 F9                      	stc
   866 00000626 EBFB                    	jmp	short gsr_retn
   867                                  
   868                                  ; 29/05/2024
   869                                  %if 0
   870                                  audio_int_handler:
   871                                  	; 18/08/2020 (14/10/2020, 'wavplay2.s')
   872                                  
   873                                  	;mov	byte [srb], 1 ; interrupt (or signal response byte)
   874                                  	
   875                                  	;cmp	byte [cbs_busy], 1
   876                                  	;jnb	short _callback_bsy_retn
   877                                  	
   878                                  	;mov	byte [cbs_busy], 1
   879                                  
   880                                  	mov	al, [half_buff]
   881                                  
   882                                  	cmp	al, 1
   883                                  	jb	short _callback_retn
   884                                  
   885                                  	; 18/08/2020
   886                                  	mov	byte [srb], 1
   887                                  
   888                                  	xor	byte [half_buff], 3 ; 2->1, 1->2
   889                                  
   890                                  	add	al, '0'
   891                                  tL0:	; 26/11/2023
   892                                  	mov	ah, 4Eh
   893                                  	mov	ebx, 0B8000h ; video display page address
   894                                  	mov	[ebx], ax ; show playing buffer (1, 2)
   895                                  _callback_retn:
   896                                  	;mov	byte [cbs_busy], 0
   897                                  _callback_bsy_retn:
   898                                  	sys	_rele ; return from callback service 
   899                                  	; we must not come here !
   900                                  	sys	_exit
   901                                  %endif
   902                                  	
   903                                  loadFromFile:
   904                                  	; 26/11/2023
   905 00000628 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
   906                                  					; last of the file?
   907 0000062F 7402                    	jz	short lff_0		; no
   908 00000631 F9                      	stc
   909 00000632 C3                      	retn
   910                                  lff_0:
   911                                  	; 13/06/2017
   912                                  	;mov	edx, BUFFERSIZE
   913                                  	; 26/11/2023
   914                                  	;mov	edi, audio_buffer
   915                                  	; 29/05/2024
   916 00000633 8B3D[A2280000]          	mov	edi, [audio_buffer]
   917 00000639 8B15[79030000]          	mov	edx, [buffersize]	; bytes
   918 0000063F 8A0D[95280000]          	mov	cl, [fbs_shift]   
   919 00000645 20C9                    	and	cl, cl
   920 00000647 7409                    	jz	short lff_1 ; stereo, 16 bit
   921                                  
   922                                  	; fbs_shift =
   923                                  	;	2 for mono and 8 bit sample (multiplier = 4)
   924                                  	;	1 for mono or 8 bit sample (multiplier = 2)
   925 00000649 D3EA                    	shr	edx, cl
   926                                  	;inc	edx
   927                                  
   928 0000064B BE[00400200]            	mov     esi, temp_buffer
   929 00000650 EB02                    	jmp	short lff_2
   930                                  lff_1:
   931                                  	;;mov	esi, audio_buffer
   932                                  	; 29/05/2024
   933                                  	;mov	esi, [audio_buffer]
   934 00000652 89FE                    	mov	esi, edi ; audio_buffer
   935                                  lff_2:
   936                                  	; 17/03/2017
   937                                  	; esi = buffer address
   938                                  	; edx = buffer size
   939                                   
   940                                  	; 26/11/2023
   941                                  	; load file into memory
   942                                  	sys 	_read, [FileHandle], esi
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000654 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000065A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000065C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000661 CD40                <1>  int 40h
   943 00000663 89D1                    	mov	ecx, edx
   944 00000665 724A                    	jc	short padfill ; error !
   945                                  
   946 00000667 21C0                    	and	eax, eax
   947 00000669 7446                    	jz	short padfill
   948                                  lff_3:
   949                                  	; 26/11/2023
   950 0000066B 8A1D[95280000]          	mov	bl, [fbs_shift]
   951 00000671 20DB                    	and	bl, bl
   952 00000673 745C                    	jz	short lff_11
   953                                  
   954 00000675 29C1                    	sub	ecx, eax
   955 00000677 89CD                    	mov	ebp, ecx
   956                                  
   957                                  	;mov	esi, temp_buffer
   958                                  	;mov	edi, audio_buffer
   959 00000679 89C1                    	mov	ecx, eax   ; byte count
   960                                  
   961 0000067B 803D[1D280000]08        	cmp	byte [bps], 8 ; bits per sample (8 or 16)
   962 00000682 751E                    	jne	short lff_6 ; 16 bit samples
   963                                  	; 8 bit samples
   964 00000684 FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
   965 00000686 740E                    	jz	short lff_5 ; 8 bit, stereo
   966                                  lff_4:
   967                                  	; mono & 8 bit
   968 00000688 AC                      	lodsb
   969 00000689 2C80                    	sub	al, 80h ; 08/11/2023
   970 0000068B C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   971 0000068E 66AB                    	stosw	; left channel
   972 00000690 66AB                    	stosw	; right channel
   973 00000692 E2F4                    	loop	lff_4
   974 00000694 EB16                    	jmp	short lff_8
   975                                  lff_5:
   976                                  	; stereo & 8 bit
   977 00000696 AC                      	lodsb
   978 00000697 2C80                    	sub	al, 80h ; 08/11/2023
   979 00000699 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   980 0000069C 66AB                    	stosw
   981 0000069E E2F6                    	loop	lff_5			
   982 000006A0 EB0A                    	jmp	short lff_8
   983                                  lff_6:
   984 000006A2 D1E9                    	shr	ecx, 1 ; word count
   985                                  lff_7:
   986 000006A4 66AD                    	lodsw
   987 000006A6 66AB                    	stosw	; left channel
   988 000006A8 66AB                    	stosw	; right channel
   989 000006AA E2F8                    	loop	lff_7
   990                                  lff_8:
   991                                  	; 27/11/2023
   992 000006AC F8                      	clc
   993 000006AD 89E9                    	mov	ecx, ebp
   994 000006AF E314                    	jecxz	endLFF_retn
   995                                  	
   996                                  padfill:
   997 000006B1 803D[1D280000]10        	cmp 	byte [bps], 16
   998 000006B8 740C                    	je	short lff_10
   999                                  	; Minimum Value = 0
  1000 000006BA 30C0                            xor     al, al
  1001 000006BC F3AA                    	rep	stosb
  1002                                  lff_9:
  1003 000006BE 800D[24280000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1004                                  endLFF_retn:
  1005 000006C5 C3                              retn
  1006                                  lff_10:
  1007 000006C6 31C0                    	xor	eax, eax
  1008                                  	; Minimum value = 8000h (-32768)
  1009 000006C8 D1E9                    	shr	ecx, 1 
  1010 000006CA B480                    	mov	ah, 80h ; ax = -32768
  1011 000006CC F366AB                  	rep	stosw
  1012 000006CF EBED                    	jmp	short lff_9
  1013                                  
  1014                                  lff_11:
  1015                                  	; 16 bit stereo
  1016                                  	; ecx = buffer size
  1017                                  	; eax = read count
  1018 000006D1 29C1                    	sub	ecx, eax
  1019 000006D3 76F0                    	jna	short endLFF_retn
  1020 000006D5 01C7                    	add	edi, eax  ; audio_buffer + eax
  1021 000006D7 EBED                    	jmp	short lff_10 ; padfill
  1022                                  
  1023                                  error_exit_2:
  1024                                  	; 26/11/2023 - temporary
  1025                                  	;sys	_msg, test_2, 255, 0Ch
  1026 000006D9 E929FDFFFF              	jmp	error_exit
  1027                                  	
  1028                                  	; 26/11/2023 - temporary
  1029                                  ;test_1:
  1030                                  ;	db 13, 10, 'Test 1', 13,10, 0
  1031                                  ;test_2:
  1032                                  ;	db 13, 10, 'Test 2', 13,10, 0
  1033                                  	
  1034                                  ; 29/05/2024
  1035                                  %if 0
  1036                                  
  1037                                  PlayWav:
  1038                                  	; 26/11/2023
  1039                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1040                                  	; 13/06/2017
  1041                                  	; Convert 8 bit samples to 16 bit samples
  1042                                  	; and convert mono samples to stereo samples
  1043                                  
  1044                                  	; 26/11/2023
  1045                                  	; load 32768 bytes into audio buffer
  1046                                  	;mov	edi, audio_buffer
  1047                                  	;;mov	edx, BUFFERSIZE
  1048                                  	; 26/11/2023
  1049                                  	;mov	edx, [buffersize]
  1050                                  	;call	loadFromFile
  1051                                  	; 26/11/2023
  1052                                  	call	dword [loadfromwavfile]
  1053                                  	jc	short error_exit_2
  1054                                  	mov	byte [half_buff], 1 ; (DMA) Buffer 1
  1055                                  
  1056                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1057                                  	test    byte [flags], ENDOFFILE  ; end of file
  1058                                  	jnz	short _6 ; yes
  1059                                  			 ; bypass filling dma half buffer 2
  1060                                  
  1061                                  	; bh = 16 : update (current, first) dma half buffer
  1062                                  	; bl = 0  : then switch to the next (second) half buffer
  1063                                  	sys	_audio, 1000h
  1064                                  
  1065                                  	; 18/08/2020
  1066                                  	; [audio_flag] = 1 (in TRDOS 386 kernel)
  1067                                  
  1068                                  	; audio_buffer must be filled again after above system call 
  1069                                  	; (Because audio interrupt will be generated by AC97 hardware
  1070                                  	; at the end of the first half of dma buffer.. so, 
  1071                                  	; the second half must be ready. 'sound_play' will use it.)
  1072                                  
  1073                                  	; 26/11/2023
  1074                                  	;mov	edi, audio_buffer
  1075                                  	;;mov	edx, BUFFERSIZE
  1076                                  	; 26/11/2023
  1077                                  	;mov	edx, [buffersize]
  1078                                  	;call	loadFromFile
  1079                                  	; 26/11/2023
  1080                                  	call	dword [loadfromwavfile]
  1081                                  	;jc	short p_return
  1082                                  _6:
  1083                                  	; Set Master Volume Level (BL=0 or 80h)
  1084                                  	; 	for next playing (BL>=80h)
  1085                                  	;sys	_audio, 0B80h, 1D1Dh
  1086                                  	sys	_audio, 0B00h, 1D1Dh
  1087                                  
  1088                                  	; 18/08/2020
  1089                                  	;mov	byte [volume_level], 1Dh
  1090                                  	mov	[volume_level], cl
  1091                                  
  1092                                  	; Start	to play
  1093                                  	mov	al, [bps]
  1094                                  	shr	al, 4 ; 8 -> 0, 16 -> 1
  1095                                  	shl	al, 1 ; 16 -> 2, 8 -> 0
  1096                                  	mov	bl, [stmo]
  1097                                  	dec	bl
  1098                                  	or	bl, al
  1099                                  	mov	cx, [sample_rate] 
  1100                                  	mov	bh, 4 ; start to play	
  1101                                  	sys	_audio
  1102                                  
  1103                                  	;mov	ebx, 0B8000h ; video display page address
  1104                                  	;mov	ah, 4Eh
  1105                                  	;mov	al, [half_buffer]
  1106                                  	;mov	[ebx], ax ; show playing buffer (1, 2)
  1107                                  
  1108                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1109                                  	; Here..
  1110                                  	; If byte [flags] <> ENDOFFILE ...
  1111                                  	; user's audio_buffer has been copied to dma half buffer 2
  1112                                  
  1113                                  	; [audio_flag] = 0 (in TRDOS 386 kernel)
  1114                                  
  1115                                  	; audio_buffer must be filled again after above system call 
  1116                                  	; (Because, audio interrupt will be generated by VT8237R
  1117                                  	; at the end of the first half of dma buffer.. so, 
  1118                                  	; the 2nd half of dma buffer is ready but the 1st half
  1119                                  	; must be filled again.)
  1120                                  
  1121                                  	; 18/08/2020
  1122                                  	test    byte [flags], ENDOFFILE  ; end of file
  1123                                  	jnz	short p_loop ; yes
  1124                                  
  1125                                  	; 18/08/2020
  1126                                  	; load 32768 bytes into audio buffer
  1127                                  	;; (for the second half of DMA buffer)
  1128                                  	; 27/11/2023
  1129                                  	; 20/05/2017
  1130                                  	;mov	edi, audio_buffer
  1131                                  	;mov	edx, BUFFERSIZE
  1132                                  	; 26/11/2023
  1133                                  	;mov	edx, [buffersize]
  1134                                  	;call	loadFromFile
  1135                                  	; 26/11/2023
  1136                                  	call	dword [loadfromwavfile]
  1137                                  	;jc	short p_return
  1138                                  	;mov	byte [half_buff], 2 ; (DMA) Buffer 2
  1139                                  
  1140                                  	; we need to wait for 'SRB' (audio interrupt)
  1141                                  	; (we can not return from 'PlayWav' here 
  1142                                  	;  even if we have got an error from file reading)
  1143                                  	; ((!!current audio data must be played!!))
  1144                                  
  1145                                  	; 18/08/2020
  1146                                  	;mov	byte [srb], 1
  1147                                  
  1148                                  p_loop:
  1149                                  	;mov	ah, 1		; any key pressed?
  1150                                  	;int	32h		; no, Loop.
  1151                                  	;jz	short q_loop
  1152                                  	;
  1153                                  	;mov	ah, 0		; flush key buffer...
  1154                                  	;int	32h
  1155                                  
  1156                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1157                                  	cmp	byte [srb], 0
  1158                                  	jna	short q_loop
  1159                                  	mov	byte [srb], 0
  1160                                  	; 27/11/2023
  1161                                  	;mov	edi, audio_buffer
  1162                                  	;mov	edx, BUFFERSIZE
  1163                                  	; 26/11/2023
  1164                                  	;mov	edx, [buffersize]
  1165                                  	;call	loadFromFile
  1166                                  	; 26/11/2023
  1167                                  	call	dword [loadfromwavfile]
  1168                                  	jc	short p_return
  1169                                  q_loop:
  1170                                  	mov     ah, 1		; any key pressed?
  1171                                  	int     32h		; no, Loop.
  1172                                  	jz	short p_loop
  1173                                  
  1174                                  	mov     ah, 0		; flush key buffer...
  1175                                  	int     32h
  1176                                  	
  1177                                  	cmp	al, '+' ; increase sound volume
  1178                                  	je	short inc_volume_level
  1179                                  	cmp	al, '-'
  1180                                  	je	short dec_volume_level
  1181                                  
  1182                                  p_return:
  1183                                  	mov	byte [half_buff], 0
  1184                                  	retn
  1185                                  
  1186                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1187                                  inc_volume_level:
  1188                                  	mov	cl, [volume_level]
  1189                                  	cmp	cl, 1Fh ; 31
  1190                                  	jnb	short q_loop
  1191                                  	inc	cl
  1192                                  change_volume_level:
  1193                                  	mov	[volume_level], cl
  1194                                  	mov	ch, cl
  1195                                  	; Set Master Volume Level
  1196                                  	sys	_audio, 0B00h
  1197                                  	jmp	short p_loop
  1198                                  dec_volume_level:
  1199                                  	mov	cl, [volume_level]
  1200                                  	cmp	cl, 1 ; 1
  1201                                  	jna	short p_loop
  1202                                  	dec	cl
  1203                                  	jmp	short change_volume_level
  1204                                  %endif
  1205                                  
  1206                                  write_audio_dev_info:
  1207                                  	; EBX = Message address
  1208                                  	; ECX = Max. message length (or stop on ZERO character)
  1209                                  	;	(1 to 255)
  1210                                  	; DL  = Message color (07h = light gray, 0Fh = white) 
  1211                                       	sys 	_msg, msgAudioCardInfo, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006DE BB[76250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006E3 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006E8 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000006ED B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000006F2 CD40                <1>  int 40h
  1212 000006F4 C3                      	retn
  1213                                  
  1214                                  write_wav_file_info:
  1215                                  	; 01/05/2017
  1216                                  	sys	_msg, msgWavFileName, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006F5 BB[E0260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006FA B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006FF BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000704 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000709 CD40                <1>  int 40h
  1217                                  	sys	_msg, wav_file_name, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000070B BB[42280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000710 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000715 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000071A B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000071F CD40                <1>  int 40h
  1218                                  
  1219                                  write_sample_rate:
  1220                                  	; 01/05/2017
  1221 00000721 66A1[1E280000]          	mov	ax, [sample_rate]
  1222                                  	; ax = sample rate (hertz)
  1223 00000727 31D2                    	xor	edx, edx
  1224 00000729 66B90A00                	mov	cx, 10
  1225 0000072D 66F7F1                  	div	cx
  1226 00000730 0015[05270000]          	add	[msgHertz+4], dl
  1227 00000736 29D2                    	sub	edx, edx
  1228 00000738 66F7F1                  	div	cx
  1229 0000073B 0015[04270000]          	add	[msgHertz+3], dl
  1230 00000741 29D2                    	sub	edx, edx
  1231 00000743 66F7F1                  	div	cx
  1232 00000746 0015[03270000]          	add	[msgHertz+2], dl
  1233 0000074C 29D2                    	sub	edx, edx
  1234 0000074E 66F7F1                  	div	cx
  1235 00000751 0015[02270000]          	add	[msgHertz+1], dl
  1236 00000757 0005[01270000]          	add	[msgHertz], al
  1237                                  	
  1238                                  	sys	_msg, msgSampleRate, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000075D BB[F2260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000762 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000767 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000076C B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000771 CD40                <1>  int 40h
  1239                                  
  1240 00000773 BE[1C270000]            	mov	esi, msg16Bits
  1241 00000778 803D[1D280000]10        	cmp	byte [bps], 16
  1242 0000077F 7405                    	je	short wsr_1
  1243 00000781 BE[0C270000]            	mov	esi, msg8Bits
  1244                                  wsr_1:
  1245                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000786 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000788 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000078D BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000792 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000797 CD40                <1>  int 40h
  1246                                  
  1247 00000799 BE[15270000]            	mov	esi, msgMono
  1248 0000079E 803D[1C280000]01        	cmp	byte [stmo], 1
  1249 000007A5 7405                    	je	short wsr_2
  1250 000007A7 BE[26270000]            	mov	esi, msgStereo		
  1251                                  wsr_2:
  1252                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000007AC 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000007AE B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000007B3 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000007B8 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000007BD CD40                <1>  int 40h
  1253 000007BF C3                              retn
  1254                                  
  1255                                  write_ac97_pci_dev_info:
  1256                                  	; 06/06/2017
  1257                                  	; 03/06/2017
  1258                                  	; BUS/DEV/FN
  1259                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  1260                                  	; DEV/VENDOR
  1261                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  1262                                  
  1263 000007C0 8B35[96280000]          	mov	esi, [dev_vendor]
  1264 000007C6 89F0                    	mov	eax, esi
  1265 000007C8 0FB6D8                  	movzx	ebx, al
  1266 000007CB 88DA                    	mov	dl, bl
  1267 000007CD 80E30F                  	and	bl, 0Fh
  1268 000007D0 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1269 000007D6 A2[74270000]            	mov	[msgVendorId+3], al
  1270 000007DB 88D3                    	mov	bl, dl
  1271 000007DD C0EB04                  	shr	bl, 4
  1272 000007E0 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1273 000007E6 A2[73270000]            	mov	[msgVendorId+2], al
  1274 000007EB 88E3                    	mov	bl, ah
  1275 000007ED 88DA                    	mov	dl, bl
  1276 000007EF 80E30F                  	and	bl, 0Fh
  1277 000007F2 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1278 000007F8 A2[72270000]            	mov	[msgVendorId+1], al
  1279 000007FD 88D3                    	mov	bl, dl
  1280 000007FF C0EB04                  	shr	bl, 4
  1281 00000802 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1282 00000808 A2[71270000]            	mov	[msgVendorId], al
  1283 0000080D C1E810                  	shr	eax, 16
  1284 00000810 88C3                    	mov	bl, al
  1285 00000812 88DA                    	mov	dl, bl
  1286 00000814 80E30F                  	and	bl, 0Fh
  1287 00000817 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1288 0000081D A2[85270000]            	mov	[msgDevId+3], al
  1289 00000822 88D3                    	mov	bl, dl
  1290 00000824 C0EB04                  	shr	bl, 4
  1291 00000827 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1292 0000082D A2[84270000]            	mov	[msgDevId+2], al
  1293 00000832 88E3                    	mov	bl, ah
  1294 00000834 88DA                    	mov	dl, bl
  1295 00000836 80E30F                  	and	bl, 0Fh
  1296 00000839 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1297 0000083F A2[83270000]            	mov	[msgDevId+1], al
  1298 00000844 88D3                    	mov	bl, dl
  1299 00000846 C0EB04                  	shr	bl, 4
  1300 00000849 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1301 0000084F A2[82270000]            	mov	[msgDevId], al
  1302                                  
  1303 00000854 8B35[9A280000]          	mov	esi, [bus_dev_fn]
  1304 0000085A C1EE08                  	shr	esi, 8
  1305 0000085D 6689F0                  	mov	ax, si
  1306 00000860 88C3                    	mov	bl, al
  1307 00000862 88DA                    	mov	dl, bl
  1308 00000864 80E307                  	and	bl, 7 ; bit 0,1,2
  1309 00000867 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1310 0000086D A2[A9270000]            	mov	[msgFncNo+1], al
  1311 00000872 88D3                    	mov	bl, dl
  1312 00000874 C0EB03                  	shr	bl, 3
  1313 00000877 88DA                    	mov	dl, bl
  1314 00000879 80E30F                  	and	bl, 0Fh
  1315 0000087C 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1316 00000882 A2[9B270000]            	mov	[msgDevNo+1], al
  1317 00000887 88D3                    	mov	bl, dl
  1318 00000889 C0EB04                  	shr	bl, 4
  1319 0000088C 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1320 00000892 A2[9A270000]            	mov	[msgDevNo], al
  1321 00000897 88E3                    	mov	bl, ah
  1322 00000899 88DA                    	mov	dl, bl
  1323 0000089B 80E30F                  	and	bl, 0Fh
  1324 0000089E 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1325 000008A4 A2[8F270000]            	mov	[msgBusNo+1], al
  1326 000008A9 88D3                    	mov	bl, dl
  1327 000008AB C0EB04                  	shr	bl, 4
  1328 000008AE 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1329 000008B4 A2[8E270000]            	mov	[msgBusNo], al
  1330                                  
  1331                                  	;mov	ax, [ac97_NamBar]
  1332 000008B9 66A1[9E280000]          	mov	ax, [NAMBAR]	; 29/05/2024
  1333 000008BF 88C3                    	mov	bl, al
  1334 000008C1 88DA                    	mov	dl, bl
  1335 000008C3 80E30F                  	and	bl, 0Fh
  1336 000008C6 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1337 000008CC A2[B8270000]            	mov	[msgNamBar+3], al
  1338 000008D1 88D3                    	mov	bl, dl
  1339 000008D3 C0EB04                  	shr	bl, 4
  1340 000008D6 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1341 000008DC A2[B7270000]            	mov	[msgNamBar+2], al
  1342 000008E1 88E3                    	mov	bl, ah
  1343 000008E3 88DA                    	mov	dl, bl
  1344 000008E5 80E30F                  	and	bl, 0Fh
  1345 000008E8 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1346 000008EE A2[B6270000]            	mov	[msgNamBar+1], al
  1347 000008F3 88D3                    	mov	bl, dl
  1348 000008F5 C0EB04                  	shr	bl, 4
  1349 000008F8 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1350 000008FE A2[B5270000]            	mov	[msgNamBar], al
  1351                                  
  1352                                  	;mov	ax, [ac97_NabmBar]
  1353 00000903 66A1[A0280000]          	mov	ax, [NABMBAR]	; 29/05/2024
  1354 00000909 88C3                    	mov	bl, al
  1355 0000090B 88DA                    	mov	dl, bl
  1356 0000090D 80E30F                  	and	bl, 0Fh
  1357 00000910 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1358 00000916 A2[C8270000]            	mov	[msgNabmBar+3], al
  1359 0000091B 88D3                    	mov	bl, dl
  1360 0000091D C0EB04                  	shr	bl, 4
  1361 00000920 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1362 00000926 A2[C7270000]            	mov	[msgNabmBar+2], al
  1363 0000092B 88E3                    	mov	bl, ah
  1364 0000092D 88DA                    	mov	dl, bl
  1365 0000092F 80E30F                  	and	bl, 0Fh
  1366 00000932 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1367 00000938 A2[C6270000]            	mov	[msgNabmBar+1], al
  1368 0000093D 88D3                    	mov	bl, dl
  1369 0000093F C0EB04                  	shr	bl, 4
  1370 00000942 8A83[2F270000]          	mov	al, [ebx+hex_chars]
  1371 00000948 A2[C5270000]            	mov	[msgNabmBar], al
  1372                                  
  1373 0000094D 30E4                    	xor	ah, ah
  1374 0000094F A0[94280000]            	mov	al, [ac97_int_ln_reg]
  1375 00000954 B10A                    	mov	cl, 10
  1376 00000956 F6F1                    	div	cl
  1377 00000958 660105[D1270000]        	add	[msgIRQ], ax
  1378 0000095F 20C0                    	and	al, al
  1379 00000961 750D                    	jnz	short _w_ac97imsg_
  1380 00000963 A0[D2270000]            	mov	al, [msgIRQ+1]
  1381 00000968 B420                    	mov	ah, ' '
  1382 0000096A 66A3[D1270000]          	mov	[msgIRQ], ax
  1383                                  _w_ac97imsg_:
  1384                                  	sys	_msg, msgAC97Info, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000970 BB[40270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000975 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000097A BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000097F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000984 CD40                <1>  int 40h
  1385                                  
  1386 00000986 C3                              retn
  1387                                  
  1388                                  write_VRA_info:
  1389                                  	; 25/11/2023
  1390                                  	sys	_msg, msgVRAheader, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000987 BB[D6270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000098C B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000991 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000996 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000099B CD40                <1>  int 40h
  1391 0000099D 803D[25280000]00        	cmp	byte [VRA], 0
  1392 000009A4 7617                    	jna	short _w_VRAi_no
  1393                                  _w_VRAi_yes:
  1394                                  	sys	_msg, msgVRAyes, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009A6 BB[E4270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009AB B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009B0 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009B5 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009BA CD40                <1>  int 40h
  1395 000009BC C3                      	retn
  1396                                  _w_VRAi_no:
  1397                                  	sys	_msg, msgVRAno, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009BD BB[EA270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009C2 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009C7 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009CC B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009D1 CD40                <1>  int 40h
  1398 000009D3 C3                      	retn
  1399                                  
  1400                                  ; 26/11/2023
  1401                                  ; 25/11/2023 - playwav6.s (32 bit registers, TRDOS 386 adaption)
  1402                                  ; 15/11/2023 - PLAYWAV5.COM, ich_wav5.asm
  1403                                  ; 14/11/2023
  1404                                  ; 13/11/2023 - Erdogan Tan - (VRA, sample rate conversion)
  1405                                  ; --------------------------------------------------------
  1406                                  
  1407                                  ;;Note:	At the end of every buffer load,
  1408                                  ;;	during buffer switch/swap, there will be discontinuity
  1409                                  ;;	between the last converted sample and the 1st sample
  1410                                  ;;	of the next buffer.
  1411                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1412                                  ;;	-To avoid this defect, the 1st sample of
  1413                                  ;;	the next buffer may be read from the wav file but
  1414                                  ;;	the file pointer would need to be set to 1 sample back
  1415                                  ;;	again via seek system call. Time comsumption problem! -
  1416                                  ;;
  1417                                  ;;	Erdogan Tan - 15/11/2023
  1418                                  ;;
  1419                                  ;;	((If entire wav data would be loaded at once.. conversion
  1420                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1421                                  ;;	64KB buffer limit is important also it is important
  1422                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1423                                  ;;	I have tested this program by using 2-30MB wav files.))
  1424                                  ;;
  1425                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1426                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1427                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1428                                  ;;			Realtek ALC850 codec.
  1429                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1430                                  
  1431                                  load_8khz_mono_8_bit:
  1432                                  	; 15/11/2023
  1433                                  	; 14/11/2023
  1434                                  	; 13/11/2023
  1435 000009D4 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1436                                  					; last of the file?
  1437 000009DB 7402                    	jz	short lff8m_0		; no
  1438 000009DD F9                      	stc
  1439 000009DE C3                      	retn
  1440                                  
  1441                                  lff8m_0:
  1442 000009DF BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1443                                          ;mov	edx, [loadsize]
  1444                                  
  1445                                  	; esi = buffer address
  1446                                  	;; edx = buffer size
  1447                                  
  1448                                  	; load file into memory
  1449                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009E4 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009EA 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009EC 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009F2 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000009F7 CD40                <1>  int 40h
  1450 000009F9 7305                    	jnc	short lff8m_6
  1451 000009FB E9AC000000              	jmp	lff8m_5  ; error !
  1452                                  
  1453                                  lff8m_6:
  1454                                  	;mov	edi, audio_buffer
  1455                                  	; 29/05/2024
  1456 00000A00 8B3D[A2280000]          	mov	edi, [audio_buffer]
  1457 00000A06 21C0                    	and	eax, eax
  1458 00000A08 0F8495000000            	jz	lff8_eof
  1459                                  
  1460 00000A0E 89C1                    	mov	ecx, eax		; byte count
  1461                                  lff8m_1:
  1462 00000A10 AC                      	lodsb
  1463 00000A11 A2[35200000]            	mov	[previous_val], al
  1464 00000A16 2C80                    	sub	al, 80h
  1465 00000A18 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1466 00000A1C 66AB                    	stosw		; original sample (left channel)
  1467 00000A1E 66AB                    	stosw		; original sample (right channel)
  1468                                  	;xor	eax, eax
  1469 00000A20 B080                    	mov	al, 80h
  1470 00000A22 49                      	dec	ecx
  1471 00000A23 7402                    	jz	short lff8m_2
  1472 00000A25 8A06                    	mov	al, [esi]
  1473                                  lff8m_2:
  1474                                  	;mov	[next_val], ax
  1475 00000A27 88C7                    	mov	bh, al	; [next_val]
  1476 00000A29 8A25[35200000]          	mov	ah, [previous_val]
  1477 00000A2F 00E0                    	add	al, ah	; [previous_val]
  1478 00000A31 D0D8                    	rcr	al, 1
  1479 00000A33 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1480 00000A35 00E0                    	add	al, ah	; [previous_val]
  1481 00000A37 D0D8                    	rcr	al, 1	
  1482 00000A39 88C3                    	mov	bl, al 	; this is temporary interpolation value	
  1483 00000A3B 00E0                    	add	al, ah	; [previous_val]
  1484 00000A3D D0D8                    	rcr	al, 1
  1485 00000A3F 2C80                    	sub	al, 80h
  1486 00000A41 66C1E008                	shl	ax, 8	
  1487 00000A45 66AB                    	stosw		; this is 1st interpolated sample (L)
  1488 00000A47 66AB                    	stosw		; this is 1st interpolated sample (R)
  1489 00000A49 88D8                    	mov	al, bl
  1490 00000A4B 00D0                    	add	al, dl
  1491 00000A4D D0D8                    	rcr	al, 1
  1492 00000A4F 2C80                    	sub	al, 80h
  1493 00000A51 66C1E008                	shl	ax, 8
  1494 00000A55 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1495 00000A57 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1496 00000A59 88D0                    	mov	al, dl
  1497 00000A5B 2C80                    	sub	al, 80h
  1498 00000A5D 66C1E008                	shl	ax, 8
  1499 00000A61 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1500 00000A63 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1501                                  	;mov	al, [next_val]
  1502 00000A65 88F8                    	mov	al, bh
  1503 00000A67 00D0                    	add	al, dl
  1504 00000A69 D0D8                    	rcr	al, 1
  1505 00000A6B 88C3                    	mov	bl, al	; this is temporary interpolation value
  1506 00000A6D 00D0                    	add	al, dl
  1507 00000A6F D0D8                    	rcr	al, 1
  1508 00000A71 2C80                    	sub	al, 80h
  1509 00000A73 66C1E008                	shl	ax, 8
  1510 00000A77 66AB                    	stosw		; this is 4th interpolated sample (L)
  1511 00000A79 66AB                    	stosw		; this is 4th interpolated sample (R)
  1512                                  	;mov	al, [next_val]
  1513 00000A7B 88F8                    	mov	al, bh
  1514 00000A7D 00D8                    	add	al, bl
  1515 00000A7F D0D8                    	rcr	al, 1
  1516 00000A81 2C80                    	sub	al, 80h
  1517 00000A83 66C1E008                	shl	ax, 8
  1518 00000A87 66AB                    	stosw		; this is 5th interpolated sample (L)
  1519 00000A89 66AB                    	stosw		; this is 5th interpolated sample (R)
  1520                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1521 00000A8B 09C9                    	or	ecx, ecx
  1522 00000A8D 7581                    	jnz	short lff8m_1
  1523                                  
  1524                                  	; --------------
  1525                                  
  1526                                  lff8s_3:
  1527                                  lff8m_3:
  1528                                  lff8s2_3:
  1529                                  lff8m2_3:
  1530                                  lff16s_3:
  1531                                  lff16m_3:
  1532                                  lff16s2_3:
  1533                                  lff16m2_3:
  1534                                  lff24_3:
  1535                                  lff32_3:
  1536                                  lff44_3:
  1537                                  lff22_3:
  1538                                  lff11_3:
  1539 00000A8F 8B0D[79030000]          	mov	ecx, [buffersize] ; 16 bit (48 kHZ, stereo) sample size
  1540 00000A95 D1E1                    	shl	ecx, 1	; byte count
  1541 00000A97 29F9                    	sub	ecx, edi
  1542 00000A99 7607                    	jna	short lff8m_4
  1543                                  	;inc	ecx
  1544 00000A9B C1E902                  	shr	ecx, 2
  1545 00000A9E 31C0                    	xor	eax, eax ; fill (remain part of) buffer with zeros	
  1546 00000AA0 F3AB                    	rep	stosd
  1547                                  lff8m_4:
  1548 00000AA2 C3                      	retn
  1549                                  
  1550                                  lff8_eof:
  1551                                  lff16_eof:
  1552                                  lff24_eof:
  1553                                  lff32_eof:
  1554                                  lff44_eof:
  1555                                  lff22_eof:
  1556                                  lff11_eof:
  1557                                  	; 15/11/2023
  1558 00000AA3 C605[24280000]01        	mov	byte [flags], ENDOFFILE
  1559 00000AAA EBE3                    	jmp	short lff8m_3
  1560                                  
  1561                                  lff8s_5:
  1562                                  lff8m_5:
  1563                                  lff8s2_5:
  1564                                  lff8m2_5:
  1565                                  lff16s_5:
  1566                                  lff16m_5:
  1567                                  lff16s2_5:
  1568                                  lff16m2_5:
  1569                                  lff24_5:
  1570                                  lff32_5:
  1571                                  lff44_5:
  1572                                  lff22_5:
  1573                                  lff11_5:
  1574 00000AAC B021                    	mov	al, '!'  ; error
  1575 00000AAE E882FAFFFF              	call	tL0
  1576                                  	
  1577                                  	;jmp	short lff8m_3
  1578                                  	; 15/11/2023
  1579 00000AB3 EBEE                    	jmp	lff8_eof
  1580                                  
  1581                                  	; --------------
  1582                                  
  1583                                  load_8khz_stereo_8_bit:
  1584                                  	; 15/11/2023
  1585                                  	; 14/11/2023
  1586                                  	; 13/11/2023
  1587 00000AB5 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1588                                  					; last of the file?
  1589 00000ABC 7402                    	jz	short lff8s_0		; no
  1590 00000ABE F9                      	stc
  1591 00000ABF C3                      	retn
  1592                                  
  1593                                  lff8s_0:
  1594 00000AC0 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1595                                          ;mov	edx, [loadsize]
  1596                                  
  1597                                  	; esi = buffer address
  1598                                  	;; edx = buffer size
  1599                                  
  1600                                  	; load file into memory
  1601                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000AC5 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000ACB 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000ACD 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000AD3 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000AD8 CD40                <1>  int 40h
  1602 00000ADA 72D0                    	jc	short lff8s_5 ; error !
  1603                                  
  1604                                  	;mov	edi, audio_buffer
  1605                                  	; 29/05/2024
  1606 00000ADC 8B3D[A2280000]          	mov	edi, [audio_buffer]
  1607                                  	
  1608 00000AE2 D1E8                    	shr	eax, 1
  1609 00000AE4 74BD                    	jz	short lff8_eof
  1610                                  
  1611 00000AE6 89C1                    	mov	ecx, eax	; word count
  1612                                  lff8s_1:
  1613 00000AE8 AC                      	lodsb
  1614 00000AE9 A2[35200000]            	mov	[previous_val_l], al
  1615 00000AEE 2C80                    	sub	al, 80h
  1616 00000AF0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1617 00000AF4 66AB                    	stosw		; original sample (L)
  1618 00000AF6 AC                      	lodsb
  1619 00000AF7 A2[37200000]            	mov	[previous_val_r], al
  1620 00000AFC 2C80                    	sub	al, 80h
  1621 00000AFE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1622 00000B02 66AB                    	stosw		; original sample (R)
  1623                                  
  1624                                  	;xor	eax, eax
  1625 00000B04 66B88080                	mov	ax, 8080h
  1626 00000B08 49                      	dec	ecx
  1627 00000B09 7403                    	jz	short lff8s_2
  1628                                  		; convert 8 bit sample to 16 bit sample
  1629 00000B0B 668B06                  	mov	ax, [esi]
  1630                                  lff8s_2:
  1631 00000B0E A2[39200000]            	mov	[next_val_l], al
  1632 00000B13 8825[3B200000]          	mov	[next_val_r], ah
  1633 00000B19 8A25[35200000]          	mov	ah, [previous_val_l]
  1634 00000B1F 00E0                    	add	al, ah
  1635 00000B21 D0D8                    	rcr	al, 1
  1636 00000B23 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1637 00000B25 00E0                    	add	al, ah
  1638 00000B27 D0D8                    	rcr	al, 1	
  1639 00000B29 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1640 00000B2B 00E0                    	add	al, ah
  1641 00000B2D D0D8                    	rcr	al, 1
  1642 00000B2F 2C80                    	sub	al, 80h
  1643 00000B31 66C1E008                	shl	ax, 8
  1644 00000B35 66AB                    	stosw		; this is 1st interpolated sample (L)
  1645 00000B37 A0[3B200000]            	mov	al, [next_val_r]
  1646 00000B3C 8A25[37200000]          	mov	ah, [previous_val_r]
  1647 00000B42 00E0                    	add	al, ah
  1648 00000B44 D0D8                    	rcr	al, 1
  1649 00000B46 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1650 00000B48 00E0                    	add	al, ah
  1651 00000B4A D0D8                    	rcr	al, 1
  1652 00000B4C 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1653 00000B4E 00E0                    	add	al, ah
  1654 00000B50 D0D8                    	rcr	al, 1
  1655 00000B52 2C80                    	sub	al, 80h
  1656 00000B54 66C1E008                	shl	ax, 8
  1657 00000B58 66AB                    	stosw		; this is 1st interpolated sample (R)
  1658 00000B5A 88D8                    	mov	al, bl
  1659 00000B5C 00D0                    	add	al, dl
  1660 00000B5E D0D8                    	rcr	al, 1
  1661 00000B60 2C80                    	sub	al, 80h
  1662 00000B62 66C1E008                	shl	ax, 8
  1663 00000B66 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1664 00000B68 88F8                    	mov	al, bh
  1665 00000B6A 00F0                    	add	al, dh
  1666 00000B6C D0D8                    	rcr	al, 1
  1667 00000B6E 2C80                    	sub	al, 80h
  1668 00000B70 66C1E008                	shl	ax, 8
  1669 00000B74 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1670 00000B76 88D0                    	mov	al, dl
  1671 00000B78 2C80                    	sub	al, 80h
  1672 00000B7A 66C1E008                	shl	ax, 8
  1673 00000B7E 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1674 00000B80 88F0                    	mov	al, dh
  1675 00000B82 2C80                    	sub	al, 80h
  1676 00000B84 66C1E008                	shl	ax, 8
  1677 00000B88 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1678 00000B8A A0[39200000]            	mov	al, [next_val_l]
  1679 00000B8F 00D0                    	add	al, dl
  1680 00000B91 D0D8                    	rcr	al, 1
  1681 00000B93 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1682 00000B95 00D0                    	add	al, dl
  1683 00000B97 D0D8                    	rcr	al, 1
  1684 00000B99 2C80                    	sub	al, 80h
  1685 00000B9B 66C1E008                	shl	ax, 8
  1686 00000B9F 66AB                    	stosw		; this is 4th interpolated sample (L)
  1687 00000BA1 A0[3B200000]            	mov	al, [next_val_r]
  1688 00000BA6 00F0                    	add	al, dh
  1689 00000BA8 D0D8                    	rcr	al, 1
  1690 00000BAA 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1691 00000BAC 00F0                    	add	al, dh
  1692 00000BAE D0D8                    	rcr	al, 1
  1693 00000BB0 2C80                    	sub	al, 80h
  1694 00000BB2 66C1E008                	shl	ax, 8
  1695 00000BB6 66AB                    	stosw		; this is 4th interpolated sample (R)
  1696 00000BB8 A0[39200000]            	mov	al, [next_val_l]
  1697 00000BBD 00D8                    	add	al, bl
  1698 00000BBF D0D8                    	rcr	al, 1
  1699 00000BC1 2C80                    	sub	al, 80h
  1700 00000BC3 66C1E008                	shl	ax, 8
  1701 00000BC7 66AB                    	stosw		; this is 5th interpolated sample (L)
  1702 00000BC9 A0[3B200000]            	mov	al, [next_val_r]
  1703 00000BCE 00F8                    	add	al, bh
  1704 00000BD0 D0D8                    	rcr	al, 1
  1705 00000BD2 2C80                    	sub	al, 80h
  1706 00000BD4 66C1E008                	shl	ax, 8
  1707 00000BD8 66AB                    	stosw		; this is 5th interpolated sample (R)
  1708                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1709 00000BDA E305                    	jecxz	lff8s_6
  1710 00000BDC E907FFFFFF              	jmp	lff8s_1
  1711                                  lff8s_6:
  1712 00000BE1 E9A9FEFFFF              	jmp	lff8s_3
  1713                                  
  1714                                  load_8khz_mono_16_bit:
  1715                                  	; 13/11/2023
  1716 00000BE6 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1717                                  					; last of the file?
  1718 00000BED 7402                    	jz	short lff8m2_0		; no
  1719 00000BEF F9                      	stc
  1720 00000BF0 C3                      	retn
  1721                                  
  1722                                  lff8m2_0:
  1723 00000BF1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1724                                          ;mov	edx, [loadsize]
  1725                                  
  1726                                  	; esi = buffer address
  1727                                  	;; edx = buffer size
  1728                                  
  1729                                  	; load file into memory
  1730                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000BF6 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000BFC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000BFE 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000C04 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000C09 CD40                <1>  int 40h
  1731 00000C0B 0F82A1000000            	jc	lff8m2_7 ; error !
  1732                                  
  1733                                  	;mov	edi, audio_buffer
  1734                                  	; 29/05/2024
  1735 00000C11 8B3D[A2280000]          	mov	edi, [audio_buffer]
  1736                                  	
  1737 00000C17 D1E8                    	shr	eax, 1
  1738 00000C19 7505                    	jnz	short lff8m2_8
  1739 00000C1B E983FEFFFF              	jmp	lff8_eof
  1740                                  
  1741                                  lff8m2_8:
  1742 00000C20 89C1                    	mov	ecx, eax	; word count
  1743                                  lff8m2_1:
  1744 00000C22 66AD                    	lodsw
  1745 00000C24 66AB                    	stosw		; original sample (left channel)
  1746 00000C26 66AB                    	stosw		; original sample (right channel)
  1747 00000C28 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1748 00000C2B 66A3[35200000]          	mov	[previous_val], ax
  1749 00000C31 31C0                    	xor	eax, eax
  1750 00000C33 49                      	dec	ecx
  1751 00000C34 7403                    	jz	short lff8m2_2
  1752 00000C36 668B06                  	mov	ax, [esi]
  1753                                  lff8m2_2:
  1754 00000C39 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1755 00000C3C 89C5                    	mov	ebp, eax	; [next_val]
  1756 00000C3E 660305[35200000]        	add	ax, [previous_val]
  1757 00000C45 66D1D8                  	rcr	ax, 1
  1758 00000C48 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample
  1759 00000C4A 660305[35200000]        	add	ax, [previous_val]
  1760 00000C51 66D1D8                  	rcr	ax, 1	; this is temporary interpolation value
  1761 00000C54 89C3                    	mov	ebx, eax 		
  1762 00000C56 660305[35200000]        	add	ax, [previous_val]
  1763 00000C5D 66D1D8                  	rcr	ax, 1
  1764 00000C60 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1765 00000C63 66AB                    	stosw		; this is 1st interpolated sample (L)
  1766 00000C65 66AB                    	stosw		; this is 1st interpolated sample (R)
  1767 00000C67 89D8                    	mov	eax, ebx
  1768 00000C69 6601D0                  	add	ax, dx
  1769 00000C6C 66D1D8                  	rcr	ax, 1
  1770 00000C6F 80EC80                  	sub	ah, 80h
  1771 00000C72 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1772 00000C74 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1773 00000C76 89D0                    	mov	eax, edx
  1774 00000C78 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1775 00000C7B 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1776 00000C7D 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1777 00000C7F 89E8                    	mov	eax, ebp
  1778 00000C81 6601D0                  	add	ax, dx
  1779 00000C84 66D1D8                  	rcr	ax, 1
  1780 00000C87 89C3                    	mov	ebx, eax ; this is temporary interpolation value
  1781 00000C89 6601D0                  	add	ax, dx
  1782 00000C8C 66D1D8                  	rcr	ax, 1
  1783 00000C8F 80EC80                  	sub	ah, 80h
  1784 00000C92 66AB                    	stosw		; this is 4th interpolated sample (L)
  1785 00000C94 66AB                    	stosw		; this is 4th interpolated sample (R)
  1786 00000C96 89E8                    	mov	eax, ebp
  1787 00000C98 6601D8                  	add	ax, bx
  1788 00000C9B 66D1D8                  	rcr	ax, 1
  1789 00000C9E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1790 00000CA1 66AB                    	stosw		; this is 5th interpolated sample (L)
  1791 00000CA3 66AB                    	stosw		; this is 5th interpolated sample (R)
  1792                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1793 00000CA5 09C9                    	or	ecx, ecx
  1794 00000CA7 0F8575FFFFFF            	jnz	lff8m2_1
  1795 00000CAD E9DDFDFFFF              	jmp	lff8m2_3
  1796                                  
  1797                                  lff8m2_7:
  1798                                  lff8s2_7:
  1799 00000CB2 E9F5FDFFFF              	jmp	lff8m2_5  ; error
  1800                                  
  1801                                  load_8khz_stereo_16_bit:
  1802                                  	; 16/11/2023
  1803                                  	; 15/11/2023
  1804                                  	; 13/11/2023
  1805 00000CB7 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1806                                  					; last of the file?
  1807 00000CBE 7402                    	jz	short lff8s2_0		; no
  1808 00000CC0 F9                      	stc
  1809 00000CC1 C3                      	retn
  1810                                  
  1811                                  lff8s2_0:
  1812 00000CC2 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1813                                          ;mov	edx, [loadsize]
  1814                                  
  1815                                  	; esi = buffer address
  1816                                  	;; edx = buffer size
  1817                                  
  1818                                  	; load file into memory
  1819                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000CC7 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000CCD 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000CCF 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000CD5 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000CDA CD40                <1>  int 40h
  1820 00000CDC 72D4                    	jc	short lff8s2_7 ; error !
  1821                                  
  1822                                  	;mov	edi, audio_buffer
  1823                                  	; 29/05/2024
  1824 00000CDE 8B3D[A2280000]          	mov	edi, [audio_buffer]
  1825                                  	
  1826 00000CE4 C1E802                  	shr	eax, 2
  1827 00000CE7 7505                    	jnz	short lff8s2_8
  1828 00000CE9 E9B5FDFFFF              	jmp	lff8_eof
  1829                                  
  1830                                  lff8s2_8:
  1831 00000CEE 89C1                    	mov	ecx, eax ; dword count
  1832                                  lff8s2_1:
  1833 00000CF0 66AD                    	lodsw
  1834 00000CF2 66AB                    	stosw		; original sample (L)
  1835                                  	; 15/11/2023
  1836 00000CF4 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1837 00000CF7 66A3[35200000]          	mov	[previous_val_l], ax
  1838 00000CFD 66AD                    	lodsw
  1839 00000CFF 66AB                    	stosw		; original sample (R)
  1840 00000D01 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1841 00000D04 66A3[37200000]          	mov	[previous_val_r], ax
  1842 00000D0A 31D2                    	xor	edx, edx
  1843 00000D0C 31C0                    	xor	eax, eax
  1844                                  	; 16/11/2023
  1845 00000D0E 49                      	dec	ecx
  1846 00000D0F 7407                    	jz	short lff8s2_2
  1847 00000D11 668B06                  	mov	ax, [esi]
  1848 00000D14 668B5602                	mov	dx, [esi+2]
  1849                                  lff8s2_2:
  1850 00000D18 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1851 00000D1B 66A3[39200000]          	mov	[next_val_l], ax
  1852 00000D21 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1853 00000D24 668915[3B200000]        	mov	[next_val_r], dx
  1854 00000D2B 660305[35200000]        	add	ax, [previous_val_l]
  1855 00000D32 66D1D8                  	rcr	ax, 1
  1856 00000D35 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample (L)
  1857 00000D37 660305[35200000]        	add	ax, [previous_val_l]
  1858 00000D3E 66D1D8                  	rcr	ax, 1	
  1859 00000D41 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1860 00000D43 660305[35200000]        	add	ax, [previous_val_l]
  1861 00000D4A 66D1D8                  	rcr	ax, 1
  1862 00000D4D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1863 00000D50 66AB                    	stosw		; this is 1st interpolated sample (L)
  1864 00000D52 66A1[3B200000]          	mov	ax, [next_val_r]
  1865 00000D58 660305[37200000]        	add	ax, [previous_val_r]
  1866 00000D5F 66D1D8                  	rcr	ax, 1
  1867 00000D62 89C5                    	mov	ebp, eax ; this is interpolated middle (3th) sample (R)
  1868 00000D64 660305[37200000]        	add	ax, [previous_val_r]
  1869 00000D6B 66D1D8                  	rcr	ax, 1
  1870 00000D6E 50                      	push	eax ; *	; this is temporary interpolation value (R)
  1871 00000D6F 660305[37200000]        	add	ax, [previous_val_r]
  1872 00000D76 66D1D8                  	rcr	ax, 1
  1873 00000D79 80EC80                  	sub	ah, 80h
  1874 00000D7C 66AB                    	stosw		; this is 1st interpolated sample (R)
  1875 00000D7E 89D8                    	mov	eax, ebx
  1876 00000D80 6601D0                  	add	ax, dx
  1877 00000D83 66D1D8                  	rcr	ax, 1
  1878 00000D86 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1879 00000D89 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1880 00000D8B 58                      	pop	eax ; *
  1881 00000D8C 6601E8                  	add	ax, bp
  1882 00000D8F 66D1D8                  	rcr	ax, 1
  1883 00000D92 80EC80                  	sub	ah, 80h
  1884 00000D95 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1885 00000D97 89D0                    	mov	eax, edx
  1886 00000D99 80EC80                  	sub	ah, 80h
  1887 00000D9C 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1888 00000D9E 89E8                    	mov	eax, ebp
  1889 00000DA0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1890 00000DA3 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1891 00000DA5 66A1[39200000]          	mov	ax, [next_val_l]
  1892 00000DAB 6601D0                  	add	ax, dx
  1893 00000DAE 66D1D8                  	rcr	ax, 1
  1894 00000DB1 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1895 00000DB3 6601D0                  	add	ax, dx
  1896 00000DB6 66D1D8                  	rcr	ax, 1
  1897 00000DB9 80EC80                  	sub	ah, 80h
  1898 00000DBC 66AB                    	stosw		; this is 4th interpolated sample (L)
  1899 00000DBE 66A1[3B200000]          	mov	ax, [next_val_r]
  1900 00000DC4 6601E8                  	add	ax, bp
  1901 00000DC7 66D1D8                  	rcr	ax, 1
  1902 00000DCA 50                      	push	eax ; ** ; this is temporary interpolation value (R)
  1903 00000DCB 6601E8                  	add	ax, bp
  1904 00000DCE 66D1D8                  	rcr	ax, 1
  1905 00000DD1 80EC80                  	sub	ah, 80h
  1906 00000DD4 66AB                    	stosw		; this is 4th interpolated sample (R)
  1907 00000DD6 66A1[39200000]          	mov	ax, [next_val_l]
  1908 00000DDC 6601D8                  	add	ax, bx
  1909 00000DDF 66D1D8                  	rcr	ax, 1
  1910 00000DE2 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1911 00000DE5 66AB                    	stosw		; this is 5th interpolated sample (L)
  1912 00000DE7 58                      	pop	eax ; **
  1913 00000DE8 660305[3B200000]        	add	ax, [next_val_r]
  1914 00000DEF 66D1D8                  	rcr	ax, 1
  1915 00000DF2 80EC80                  	sub	ah, 80h
  1916 00000DF5 66AB                    	stosw		; this is 5th interpolated sample (R)
  1917                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1918 00000DF7 E305                    	jecxz	lff8_s2_9
  1919 00000DF9 E9F2FEFFFF              	jmp	lff8s2_1
  1920                                  lff8_s2_9:
  1921 00000DFE E98CFCFFFF              	jmp	lff8s2_3
  1922                                  
  1923                                  ; .....................
  1924                                  
  1925                                  load_16khz_mono_8_bit:
  1926                                  	; 14/11/2023
  1927                                  	; 13/11/2023
  1928 00000E03 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1929                                  					; last of the file?
  1930 00000E0A 7402                    	jz	short lff16m_0		; no
  1931 00000E0C F9                      	stc
  1932 00000E0D C3                      	retn
  1933                                  
  1934                                  lff16m_0:
  1935 00000E0E BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1936                                          ;mov	edx, [loadsize]
  1937                                  
  1938                                  	; esi = buffer address
  1939                                  	;; edx = buffer size
  1940                                  
  1941                                  	; load file into memory
  1942                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E13 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E19 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E1B 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000E21 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000E26 CD40                <1>  int 40h
  1943 00000E28 7254                    	jc	short lff16m_7 ; error !
  1944                                  
  1945                                  	;mov	edi, audio_buffer
  1946                                  	; 29/05/2024
  1947 00000E2A 8B3D[A2280000]          	mov	edi, [audio_buffer]
  1948                                  	
  1949 00000E30 21C0                    	and	eax, eax
  1950 00000E32 7505                    	jnz	short lff16m_8
  1951 00000E34 E96AFCFFFF              	jmp	lff16_eof
  1952                                  
  1953                                  lff16m_8:
  1954 00000E39 89C1                    	mov	ecx, eax		; byte count
  1955                                  lff16m_1:
  1956 00000E3B AC                      	lodsb
  1957                                  	;mov	[previous_val], al
  1958 00000E3C 88C3                    	mov	bl, al
  1959 00000E3E 2C80                    	sub	al, 80h
  1960 00000E40 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1961 00000E44 66AB                    	stosw		; original sample (left channel)
  1962 00000E46 66AB                    	stosw		; original sample (right channel)
  1963                                  	;xor	ax, ax
  1964                                  	; 14/11/22023
  1965 00000E48 B080                    	mov	al, 80h
  1966 00000E4A 49                      	dec	ecx
  1967 00000E4B 7402                    	jz	short lff16m_2
  1968 00000E4D 8A06                    	mov	al, [esi]
  1969                                  lff16m_2:
  1970                                  	;mov	[next_val], al
  1971 00000E4F 88C7                    	mov	bh, al
  1972                                  	;add	al, [previous_val]
  1973 00000E51 00D8                    	add	al, bl
  1974 00000E53 D0D8                    	rcr	al, 1
  1975 00000E55 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1976                                  	;add	al, [previous_val]
  1977 00000E57 00D8                    	add	al, bl
  1978 00000E59 D0D8                    	rcr	al, 1
  1979 00000E5B 2C80                    	sub	al, 80h
  1980 00000E5D 66C1E008                	shl	ax, 8
  1981 00000E61 66AB                    	stosw		; this is 1st interpolated sample (L)
  1982 00000E63 66AB                    	stosw		; this is 1st interpolated sample (R)
  1983                                  	;mov	al, [next_val]
  1984 00000E65 88F8                    	mov	al, bh
  1985 00000E67 00D0                    	add	al, dl
  1986 00000E69 D0D8                    	rcr	al, 1
  1987 00000E6B 2C80                    	sub	al, 80h
  1988 00000E6D 66C1E008                	shl	ax, 8
  1989 00000E71 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1990 00000E73 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1991                                  	
  1992                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1993 00000E75 09C9                    	or	ecx, ecx
  1994 00000E77 75C2                    	jnz	short lff16m_1
  1995 00000E79 E911FCFFFF              	jmp	lff16m_3
  1996                                  
  1997                                  lff16m_7:
  1998                                  lff16s_7:
  1999 00000E7E E929FCFFFF              	jmp	lff16m_5  ; error
  2000                                  
  2001                                  load_16khz_stereo_8_bit:
  2002                                  	; 14/11/2023
  2003                                  	; 13/11/2023
  2004 00000E83 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2005                                  					; last of the file?
  2006 00000E8A 7402                    	jz	short lff16s_0		; no
  2007 00000E8C F9                      	stc
  2008 00000E8D C3                      	retn
  2009                                  
  2010                                  lff16s_0:
  2011 00000E8E BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2012                                          ;mov	edx, [loadsize]
  2013                                  
  2014                                  	; esi = buffer address
  2015                                  	;; edx = buffer size
  2016                                  
  2017                                  	; load file into memory
  2018                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E93 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E99 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E9B 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000EA1 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000EA6 CD40                <1>  int 40h
  2019 00000EA8 72D4                    	jc	short lff16s_7 ; error !
  2020                                  
  2021                                  	;mov	edi, audio_buffer
  2022                                  	; 29/05/2024
  2023 00000EAA 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2024                                  	
  2025 00000EB0 D1E8                    	shr	eax, 1
  2026 00000EB2 7505                    	jnz	short lff16s_8
  2027 00000EB4 E9EAFBFFFF              	jmp	lff16_eof
  2028                                  
  2029                                  lff16s_8:
  2030 00000EB9 89C1                    	mov	ecx, eax	; word count
  2031                                  lff16s_1:
  2032 00000EBB AC                      	lodsb
  2033 00000EBC A2[35200000]            	mov	[previous_val_l], al
  2034 00000EC1 2C80                    	sub	al, 80h
  2035 00000EC3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2036 00000EC7 66AB                    	stosw		; original sample (L)
  2037 00000EC9 AC                      	lodsb
  2038 00000ECA A2[37200000]            	mov	[previous_val_r], al
  2039 00000ECF 2C80                    	sub	al, 80h
  2040 00000ED1 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2041 00000ED5 66AB                    	stosw		; original sample (R)
  2042                                  
  2043                                  	;xor	eax, eax
  2044 00000ED7 66B88080                	mov	ax, 8080h
  2045 00000EDB 49                      	dec	ecx
  2046 00000EDC 7403                    	jz	short lff16s_2
  2047                                  		; convert 8 bit sample to 16 bit sample
  2048 00000EDE 668B06                  	mov	ax, [esi]
  2049                                  lff16s_2:
  2050                                  	;mov	[next_val_l], al
  2051                                  	;mov	[next_val_r], ah
  2052 00000EE1 89C3                    	mov	ebx, eax
  2053 00000EE3 0205[35200000]          	add	al, [previous_val_l]
  2054 00000EE9 D0D8                    	rcr	al, 1
  2055 00000EEB 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  2056 00000EED 0205[35200000]          	add	al, [previous_val_l]
  2057 00000EF3 D0D8                    	rcr	al, 1
  2058 00000EF5 2C80                    	sub	al, 80h
  2059 00000EF7 66C1E008                	shl	ax, 8
  2060 00000EFB 66AB                    	stosw		; this is 1st interpolated sample (L)
  2061 00000EFD 88F8                    	mov	al, bh	; [next_val_r]
  2062 00000EFF 0205[37200000]          	add	al, [previous_val_r]
  2063 00000F05 D0D8                    	rcr	al, 1
  2064 00000F07 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  2065 00000F09 0205[37200000]          	add	al, [previous_val_r]
  2066 00000F0F D0D8                    	rcr	al, 1
  2067 00000F11 2C80                    	sub	al, 80h
  2068 00000F13 66C1E008                	shl	ax, 8
  2069 00000F17 66AB                    	stosw		; this is 1st interpolated sample (R)
  2070 00000F19 88D0                    	mov	al, dl
  2071 00000F1B 00D8                    	add	al, bl	; [next_val_l]
  2072 00000F1D D0D8                    	rcr	al, 1
  2073 00000F1F 2C80                    	sub	al, 80h
  2074 00000F21 66C1E008                	shl	ax, 8
  2075 00000F25 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2076 00000F27 88F0                    	mov	al, dh
  2077 00000F29 00F8                    	add	al, bh	; [next_val_r]
  2078 00000F2B D0D8                    	rcr	al, 1
  2079 00000F2D 2C80                    	sub	al, 80h
  2080 00000F2F 66C1E008                	shl	ax, 8
  2081 00000F33 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2082                                  	
  2083                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2084 00000F35 09C9                    	or	ecx, ecx
  2085 00000F37 7582                    	jnz	short lff16s_1
  2086 00000F39 E951FBFFFF              	jmp	lff16s_3
  2087                                  
  2088                                  load_16khz_mono_16_bit:
  2089                                  	; 15/11/2023
  2090                                  	; 13/11/2023
  2091 00000F3E F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2092                                  					; last of the file?
  2093 00000F45 7402                    	jz	short lff16m2_0		; no
  2094 00000F47 F9                      	stc
  2095 00000F48 C3                      	retn
  2096                                  
  2097                                  lff16m2_0:
  2098 00000F49 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2099                                          ;mov	edx, [loadsize]
  2100                                  
  2101                                  	; esi = buffer address
  2102                                  	;; edx = buffer size
  2103                                  
  2104                                  	; load file into memory
  2105                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000F4E 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000F54 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000F56 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000F5C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000F61 CD40                <1>  int 40h
  2106 00000F63 7256                    	jc	short lff16m2_7 ; error !
  2107                                  
  2108                                  	;mov	edi, audio_buffer
  2109                                  	; 29/05/2024
  2110 00000F65 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2111                                  	
  2112 00000F6B D1E8                    	shr	eax, 1
  2113 00000F6D 7505                    	jnz	short lff16m2_8
  2114 00000F6F E92FFBFFFF              	jmp	lff16_eof
  2115                                  
  2116                                  lff16m2_8:
  2117 00000F74 89C1                    	mov	ecx, eax  ; word count
  2118                                  lff16m2_1:
  2119 00000F76 66AD                    	lodsw
  2120 00000F78 66AB                    	stosw		; original sample (left channel)
  2121 00000F7A 66AB                    	stosw		; original sample (right channel)
  2122 00000F7C 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2123                                  	;mov	[previous_val], ax
  2124 00000F7F 89C3                    	mov	ebx, eax	
  2125 00000F81 31C0                    	xor	eax, eax
  2126 00000F83 49                      	dec	ecx
  2127 00000F84 7403                    	jz	short lff16m2_2
  2128 00000F86 668B06                  	mov	ax, [esi]
  2129                                  lff16m2_2:
  2130 00000F89 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2131 00000F8C 89C5                    	mov	ebp, eax	; [next_val]
  2132                                  	;add	ax, [previous_val]
  2133 00000F8E 6601D8                  	add	ax, bx
  2134 00000F91 66D1D8                  	rcr	ax, 1
  2135 00000F94 89C2                    	mov	edx, eax ; this is temporary interpolation value
  2136                                  	;add	ax, [previous_val]
  2137 00000F96 6601D8                  	add	ax, bx
  2138 00000F99 66D1D8                  	rcr	ax, 1
  2139 00000F9C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2140 00000F9F 66AB                    	stosw		; this is 1st interpolated sample (L)
  2141 00000FA1 66AB                    	stosw		; this is 1st interpolated sample (R)
  2142 00000FA3 89E8                    	mov	eax, ebp 
  2143 00000FA5 6601D0                  	add	ax, dx
  2144 00000FA8 66D1D8                  	rcr	ax, 1
  2145 00000FAB 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2146 00000FAE 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2147 00000FB0 66AB                    	stosw		; this is 2nd interpolated sample (R)
  2148                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2149 00000FB2 09C9                    	or	ecx, ecx
  2150 00000FB4 75C0                    	jnz	short lff16m2_1
  2151 00000FB6 E9D4FAFFFF              	jmp	lff16m2_3
  2152                                  
  2153                                  lff16m2_7:
  2154                                  lff16s2_7:
  2155 00000FBB E9ECFAFFFF              	jmp	lff16m2_5  ; error
  2156                                  
  2157                                  load_16khz_stereo_16_bit:
  2158                                  	; 16/11/2023
  2159                                  	; 15/11/2023
  2160                                  	; 13/11/2023
  2161 00000FC0 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2162                                  					; last of the file?
  2163 00000FC7 7402                    	jz	short lff16s2_0		; no
  2164 00000FC9 F9                      	stc
  2165 00000FCA C3                      	retn
  2166                                  
  2167                                  lff16s2_0:
  2168 00000FCB BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2169                                          ;mov	edx, [loadsize]
  2170                                  
  2171                                  	; esi = buffer address
  2172                                  	;; edx = buffer size
  2173                                  
  2174                                  	; load file into memory
  2175                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000FD0 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000FD6 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000FD8 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000FDE B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000FE3 CD40                <1>  int 40h
  2176 00000FE5 72D4                    	jc	short lff16s2_7 ; error !
  2177                                  
  2178                                  	;mov	edi, audio_buffer
  2179                                  	; 29/05/2024
  2180 00000FE7 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2181                                  	
  2182 00000FED C1E802                  	shr	eax, 2
  2183 00000FF0 7505                    	jnz	short lff16s2_8
  2184 00000FF2 E9ACFAFFFF              	jmp	lff16_eof
  2185                                  
  2186                                  lff16s2_8:
  2187 00000FF7 89C1                    	mov	ecx, eax  ; dword count
  2188                                  lff16s2_1:
  2189 00000FF9 66AD                    	lodsw
  2190 00000FFB 66AB                    	stosw		; original sample (L)
  2191 00000FFD 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2192 00001000 66A3[35200000]          	mov	[previous_val_l], ax
  2193 00001006 66AD                    	lodsw
  2194 00001008 66AB                    	stosw		; original sample (R)
  2195 0000100A 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2196 0000100D 66A3[37200000]          	mov	[previous_val_r], ax
  2197 00001013 31D2                    	xor	edx, edx
  2198 00001015 31C0                    	xor	eax, eax
  2199                                  	; 16/11/2023
  2200 00001017 49                      	dec	ecx
  2201 00001018 7407                    	jz	short lff16s2_2
  2202 0000101A 668B06                  	mov	ax, [esi]
  2203 0000101D 668B5602                	mov	dx, [esi+2]
  2204                                  lff16s2_2:
  2205 00001021 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2206                                  	;mov	[next_val_l], ax
  2207 00001024 89C5                    	mov	ebp, eax
  2208 00001026 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2209 00001029 668915[3B200000]        	mov	[next_val_r], dx
  2210 00001030 660305[35200000]        	add	ax, [previous_val_l]
  2211 00001037 66D1D8                  	rcr	ax, 1
  2212 0000103A 89C2                    	mov	edx, eax ; this is temporary interpolation value (L)
  2213 0000103C 660305[35200000]        	add	ax, [previous_val_l]
  2214 00001043 66D1D8                  	rcr	ax, 1
  2215 00001046 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2216 00001049 66AB                    	stosw		; this is 1st interpolated sample (L)
  2217 0000104B 66A1[3B200000]          	mov	ax, [next_val_r]
  2218 00001051 660305[37200000]        	add	ax, [previous_val_r]
  2219 00001058 66D1D8                  	rcr	ax, 1
  2220 0000105B 89C3                    	mov	ebx, eax ; this is temporary interpolation value (R)
  2221 0000105D 660305[37200000]        	add	ax, [previous_val_r]
  2222 00001064 66D1D8                  	rcr	ax, 1
  2223 00001067 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2224 0000106A 66AB                    	stosw		; this is 1st interpolated sample (R)
  2225                                  	;mov	ax, [next_val_l]
  2226 0000106C 89E8                    	mov	eax, ebp
  2227 0000106E 6601D0                  	add	ax, dx
  2228 00001071 66D1D8                  	rcr	ax, 1
  2229 00001074 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2230 00001077 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2231 00001079 66A1[3B200000]          	mov	ax, [next_val_r]
  2232 0000107F 6601D8                  	add	ax, bx
  2233 00001082 66D1D8                  	rcr	ax, 1
  2234 00001085 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2235 00001088 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2236                                  	
  2237                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2238 0000108A 09C9                    	or	ecx, ecx
  2239 0000108C 0F8567FFFFFF            	jnz	lff16s2_1
  2240 00001092 E9F8F9FFFF              	jmp	lff16s2_3
  2241                                  
  2242                                  ; .....................
  2243                                  
  2244                                  load_24khz_mono_8_bit:
  2245                                  	; 15/11/2023
  2246 00001097 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2247                                  					; last of the file?
  2248 0000109E 7402                    	jz	short lff24m_0		; no
  2249 000010A0 F9                      	stc
  2250 000010A1 C3                      	retn
  2251                                  
  2252                                  lff24m_0:
  2253 000010A2 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2254                                          ;mov	edx, [loadsize]
  2255                                  
  2256                                  	; esi = buffer address
  2257                                  	;; edx = buffer size
  2258                                  
  2259                                  	; load file into memory
  2260                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000010A7 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000010AD 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000010AF 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000010B5 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000010BA CD40                <1>  int 40h
  2261 000010BC 723C                    	jc	short lff24m_7 ; error !
  2262                                  
  2263                                  	;mov	edi, audio_buffer
  2264                                  	; 29/05/2024
  2265 000010BE 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2266                                  	
  2267 000010C4 21C0                    	and	eax, eax
  2268 000010C6 7505                    	jnz	short lff24m_8
  2269 000010C8 E9D6F9FFFF              	jmp	lff24_eof
  2270                                  
  2271                                  lff24m_8:
  2272 000010CD 89C1                    	mov	ecx, eax	; byte count
  2273                                  lff24m_1:
  2274 000010CF AC                      	lodsb
  2275                                  	;mov	[previous_val], al
  2276 000010D0 88C3                    	mov	bl, al
  2277 000010D2 2C80                    	sub	al, 80h
  2278 000010D4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2279 000010D8 66AB                    	stosw		; original sample (left channel)
  2280 000010DA 66AB                    	stosw		; original sample (right channel)
  2281                                  	;xor	eax, eax
  2282 000010DC B080                    	mov	al, 80h
  2283 000010DE 49                      	dec	ecx
  2284 000010DF 7402                    	jz	short lff24m_2
  2285 000010E1 8A06                    	mov	al, [esi]
  2286                                  lff24m_2:
  2287                                  	;;mov	[next_val], al
  2288                                  	;mov	bh, al
  2289                                  	;add	al, [previous_val]
  2290 000010E3 00D8                    	add	al, bl
  2291 000010E5 D0D8                    	rcr	al, 1
  2292 000010E7 2C80                    	sub	al, 80h
  2293 000010E9 66C1E008                	shl	ax, 8
  2294 000010ED 66AB                    	stosw		; this is interpolated sample (L)
  2295 000010EF 66AB                    	stosw		; this is interpolated sample (R)
  2296                                  	
  2297                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2298 000010F1 09C9                    	or	ecx, ecx
  2299 000010F3 75DA                    	jnz	short lff24m_1
  2300 000010F5 E995F9FFFF              	jmp	lff24_3
  2301                                  
  2302                                  lff24m_7:
  2303                                  lff24s_7:
  2304 000010FA E9ADF9FFFF              	jmp	lff24_5  ; error
  2305                                  
  2306                                  load_24khz_stereo_8_bit:
  2307                                  	; 15/11/2023
  2308 000010FF F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2309                                  					; last of the file?
  2310 00001106 7402                    	jz	short lff24s_0		; no
  2311 00001108 F9                      	stc
  2312 00001109 C3                      	retn
  2313                                  
  2314                                  lff24s_0:
  2315 0000110A BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2316                                          ;mov	edx, [loadsize]
  2317                                  
  2318                                  	; esi = buffer address
  2319                                  	;; edx = buffer size
  2320                                  
  2321                                  	; load file into memory
  2322                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000110F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001115 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001117 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000111D B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001122 CD40                <1>  int 40h
  2323 00001124 72D4                    	jc	short lff24s_7 ; error !
  2324                                  
  2325                                  	;mov	edi, audio_buffer
  2326                                  	; 29/05/2024
  2327 00001126 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2328                                  	
  2329 0000112C D1E8                    	shr	eax, 1
  2330 0000112E 7505                    	jnz	short lff24s_8
  2331 00001130 E96EF9FFFF              	jmp	lff24_eof
  2332                                  
  2333                                  lff24s_8:
  2334 00001135 89C1                    	mov	ecx, eax  ; word count
  2335                                  lff24s_1:
  2336 00001137 AC                      	lodsb
  2337 00001138 A2[35200000]            	mov	[previous_val_l], al
  2338 0000113D 2C80                    	sub	al, 80h
  2339 0000113F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2340 00001143 66AB                    	stosw		; original sample (L)
  2341 00001145 AC                      	lodsb
  2342 00001146 A2[37200000]            	mov	[previous_val_r], al
  2343 0000114B 2C80                    	sub	al, 80h
  2344 0000114D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2345 00001151 66AB                    	stosw		; original sample (R)
  2346                                  
  2347                                  	;xor	eax, eax
  2348 00001153 66B88080                	mov	ax, 8080h
  2349 00001157 49                      	dec	ecx
  2350 00001158 7403                    	jz	short lff24s_2
  2351                                  		; convert 8 bit sample to 16 bit sample
  2352 0000115A 668B06                  	mov	ax, [esi]
  2353                                  lff24s_2:
  2354                                  	;;mov	[next_val_l], al
  2355                                  	;;mov	[next_val_r], ah
  2356                                  	;mov	bx, ax
  2357 0000115D 88E7                    	mov	bh, ah
  2358 0000115F 0205[35200000]          	add	al, [previous_val_l]
  2359 00001165 D0D8                    	rcr	al, 1
  2360                                  	;mov	dl, al
  2361 00001167 2C80                    	sub	al, 80h
  2362 00001169 66C1E008                	shl	ax, 8
  2363 0000116D 66AB                    	stosw		; this is interpolated sample (L)
  2364 0000116F 88F8                    	mov	al, bh	; [next_val_r]
  2365 00001171 0205[37200000]          	add	al, [previous_val_r]
  2366 00001177 D0D8                    	rcr	al, 1
  2367                                  	;mov	dh, al
  2368 00001179 2C80                    	sub	al, 80h
  2369 0000117B 66C1E008                	shl	ax, 8
  2370 0000117F 66AB                    	stosw		; this is interpolated sample (R)
  2371                                  		
  2372                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2373 00001181 09C9                    	or	ecx, ecx
  2374 00001183 75B2                    	jnz	short lff24s_1
  2375 00001185 E905F9FFFF              	jmp	lff24_3
  2376                                  
  2377                                  load_24khz_mono_16_bit:
  2378                                  	; 15/11/2023
  2379 0000118A F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2380                                  					; last of the file?
  2381 00001191 7402                    	jz	short lff24m2_0		; no
  2382 00001193 F9                      	stc
  2383 00001194 C3                      	retn
  2384                                  
  2385                                  lff24m2_0:
  2386 00001195 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2387                                          ;mov	edx, [loadsize]
  2388                                  
  2389                                  	; esi = buffer address
  2390                                  	;; edx = buffer size
  2391                                  
  2392                                  	; load file into memory
  2393                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000119A 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000011A0 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000011A2 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000011A8 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000011AD CD40                <1>  int 40h
  2394 000011AF 7238                    	jc	short lff24m2_7 ; error !
  2395                                  
  2396                                  	;mov	edi, audio_buffer
  2397                                  	; 29/05/2024
  2398 000011B1 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2399                                  	
  2400 000011B7 D1E8                    	shr	eax, 1
  2401 000011B9 7505                    	jnz	short lff24m2_8
  2402 000011BB E9E3F8FFFF              	jmp	lff24_eof
  2403                                  
  2404                                  lff24m2_8:
  2405 000011C0 89C1                    	mov	ecx, eax  ; word count
  2406                                  lff24m2_1:
  2407 000011C2 66AD                    	lodsw
  2408 000011C4 66AB                    	stosw		; original sample (left channel)
  2409 000011C6 66AB                    	stosw		; original sample (right channel)
  2410 000011C8 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2411                                  	;mov	[previous_val], ax
  2412                                  	;mov	ebx, eax	
  2413                                  	;xor	eax, eax
  2414 000011CB 31DB                    	xor	ebx, ebx
  2415 000011CD 49                      	dec	ecx
  2416 000011CE 7403                    	jz	short lff24m2_2
  2417                                  	;mov	ax, [esi]
  2418 000011D0 668B1E                  	mov	bx, [esi]
  2419                                  lff24m2_2:
  2420                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2421                                  	;mov	ebp, eax	; [next_val]
  2422                                  	;add	ax, [previous_val]
  2423                                  	; ax = [previous_val]
  2424                                  	; bx = [next_val]
  2425 000011D3 6601D8                  	add	ax, bx
  2426 000011D6 66D1D8                  	rcr	ax, 1
  2427 000011D9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2428 000011DC 66AB                    	stosw		; this is interpolated sample (L)
  2429 000011DE 66AB                    	stosw		; this is interpolated sample (R)
  2430                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2431 000011E0 09C9                    	or	ecx, ecx
  2432 000011E2 75DE                    	jnz	short lff24m2_1
  2433 000011E4 E9A6F8FFFF              	jmp	lff24_3
  2434                                  
  2435                                  lff24m2_7:
  2436                                  lff24s2_7:
  2437 000011E9 E9BEF8FFFF              	jmp	lff24_5  ; error
  2438                                  
  2439                                  load_24khz_stereo_16_bit:
  2440                                  	; 16/11/2023
  2441                                  	; 15/11/2023
  2442 000011EE F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2443                                  					; last of the file?
  2444 000011F5 7402                    	jz	short lff24s2_0		; no
  2445 000011F7 F9                      	stc
  2446 000011F8 C3                      	retn
  2447                                  
  2448                                  lff24s2_0:
  2449 000011F9 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2450                                          ;mov	edx, [loadsize]
  2451                                  
  2452                                  	; esi = buffer address
  2453                                  	;; edx = buffer size
  2454                                  
  2455                                  	; load file into memory
  2456                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000011FE 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001204 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001206 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000120C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001211 CD40                <1>  int 40h
  2457 00001213 72D4                    	jc	short lff24s2_7 ; error !
  2458                                  
  2459                                  	;mov	edi, audio_buffer
  2460                                  	; 29/05/2024
  2461 00001215 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2462                                  	
  2463 0000121B C1E802                  	shr	eax, 2
  2464 0000121E 7505                    	jnz	short lff24s2_8
  2465 00001220 E97EF8FFFF              	jmp	lff24_eof
  2466                                  
  2467                                  lff24s2_8:
  2468 00001225 89C1                    	mov	ecx, eax  ; dword count
  2469                                  lff24s2_1:
  2470 00001227 66AD                    	lodsw
  2471 00001229 66AB                    	stosw		; original sample (L)
  2472 0000122B 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2473 0000122E 66A3[35200000]          	mov	[previous_val_l], ax
  2474 00001234 66AD                    	lodsw
  2475 00001236 66AB                    	stosw		; original sample (R)
  2476 00001238 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2477                                  	;mov	[previous_val_r], ax
  2478 0000123B 89C3                    	mov	ebx, eax
  2479 0000123D 31D2                    	xor	edx, edx
  2480 0000123F 31C0                    	xor	eax, eax
  2481                                  	; 16/11/2023
  2482 00001241 49                      	dec	ecx
  2483 00001242 7407                    	jz	short lff24s2_2
  2484 00001244 668B06                  	mov	ax, [esi]
  2485 00001247 668B5602                	mov	dx, [esi+2]
  2486                                  lff24s2_2:
  2487 0000124B 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2488                                  	;;mov	[next_val_l], ax
  2489                                  	;mov	ebp, eax
  2490 0000124E 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2491                                  	;mov	[next_val_r], dx
  2492 00001251 660305[35200000]        	add	ax, [previous_val_l]
  2493 00001258 66D1D8                  	rcr	ax, 1
  2494 0000125B 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2495 0000125E 66AB                    	stosw		; this is interpolated sample (L)
  2496                                  	;mov	ax, [next_val_r]
  2497 00001260 89D0                    	mov	eax, edx
  2498                                  	;add	ax, [previous_val_r]
  2499 00001262 6601D8                  	add	ax, bx
  2500 00001265 66D1D8                  	rcr	ax, 1
  2501 00001268 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2502 0000126B 66AB                    	stosw		; this is interpolated sample (R)
  2503                                  	
  2504                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2505 0000126D 09C9                    	or	ecx, ecx
  2506 0000126F 75B6                    	jnz	short lff24s2_1
  2507 00001271 E919F8FFFF              	jmp	lff24_3
  2508                                  
  2509                                  ; .....................
  2510                                  
  2511                                  load_32khz_mono_8_bit:
  2512                                  	; 15/11/2023
  2513 00001276 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2514                                  					; last of the file?
  2515 0000127D 7402                    	jz	short lff32m_0		; no
  2516 0000127F F9                      	stc
  2517 00001280 C3                      	retn
  2518                                  
  2519                                  lff32m_0:
  2520 00001281 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2521                                          ;mov	edx, [loadsize]
  2522                                  
  2523                                  	; esi = buffer address
  2524                                  	;; edx = buffer size
  2525                                  
  2526                                  	; load file into memory
  2527                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001286 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000128C 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000128E 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001294 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001299 CD40                <1>  int 40h
  2528 0000129B 7248                    	jc	short lff32m_7 ; error !
  2529                                  
  2530                                  	;mov	edi, audio_buffer
  2531                                  	; 29/05/2024
  2532 0000129D 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2533                                  	
  2534 000012A3 21C0                    	and	eax, eax
  2535 000012A5 7505                    	jnz	short lff32m_8
  2536 000012A7 E9F7F7FFFF              	jmp	lff32_eof
  2537                                  
  2538                                  lff32m_8:
  2539 000012AC 89C1                    	mov	ecx, eax	; byte count
  2540                                  lff32m_1:
  2541 000012AE AC                      	lodsb
  2542                                  	;mov	[previous_val], al
  2543 000012AF 88C3                    	mov	bl, al
  2544 000012B1 2C80                    	sub	al, 80h
  2545 000012B3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2546 000012B7 66AB                    	stosw		; original sample (left channel)
  2547 000012B9 66AB                    	stosw		; original sample (right channel)
  2548                                  	;xor	eax, eax
  2549 000012BB B080                    	mov	al, 80h
  2550 000012BD 49                      	dec	ecx
  2551 000012BE 7402                    	jz	short lff32m_2
  2552 000012C0 8A06                    	mov	al, [esi]
  2553                                  lff32m_2:
  2554                                  	;;mov	[next_val], al
  2555                                  	;mov	bh, al
  2556                                  	;add	al, [previous_val]
  2557 000012C2 00D8                    	add	al, bl
  2558 000012C4 D0D8                    	rcr	al, 1
  2559 000012C6 2C80                    	sub	al, 80h
  2560 000012C8 66C1E008                	shl	ax, 8
  2561 000012CC 66AB                    	stosw		; this is interpolated sample (L)
  2562 000012CE 66AB                    	stosw		; this is interpolated sample (R)
  2563                                  	
  2564                                  	; different than 8-16-24 kHZ !
  2565                                  	; 'original-interpolated-original' trio samples 
  2566 000012D0 E30E                    	jecxz	lff32m_3
  2567                                  
  2568 000012D2 AC                      	lodsb
  2569 000012D3 2C80                    	sub	al, 80h
  2570 000012D5 66C1E008                	shl	ax, 8
  2571 000012D9 66AB                    	stosw		; original sample (left channel)
  2572 000012DB 66AB                    	stosw		; original sample (right channel)
  2573                                  
  2574                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2575 000012DD 49                      	dec	ecx
  2576 000012DE 75CE                    	jnz	short lff32m_1
  2577                                  lff32m_3:
  2578 000012E0 E9AAF7FFFF              	jmp	lff32_3
  2579                                  
  2580                                  lff32m_7:
  2581                                  lff32s_7:
  2582 000012E5 E9C2F7FFFF              	jmp	lff32_5  ; error
  2583                                  
  2584                                  load_32khz_stereo_8_bit:
  2585                                  	; 15/11/2023
  2586 000012EA F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2587                                  					; last of the file?
  2588 000012F1 7402                    	jz	short lff32s_0		; no
  2589 000012F3 F9                      	stc
  2590 000012F4 C3                      	retn
  2591                                  
  2592                                  lff32s_0:
  2593 000012F5 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2594                                          ;mov	edx, [loadsize]
  2595                                  
  2596                                  	; esi = buffer address
  2597                                  	;; edx = buffer size
  2598                                  
  2599                                  	; load file into memory
  2600                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000012FA 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001300 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001302 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001308 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000130D CD40                <1>  int 40h
  2601 0000130F 72D4                    	jc	short lff32s_7 ; error !
  2602                                  
  2603                                  	;mov	edi, audio_buffer
  2604                                  	; 29/05/2024
  2605 00001311 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2606                                  	
  2607 00001317 D1E8                    	shr	eax, 1
  2608 00001319 7505                    	jnz	short lff32s_8
  2609 0000131B E983F7FFFF              	jmp	lff32_eof
  2610                                  
  2611                                  lff32s_8:
  2612 00001320 89C1                    	mov	ecx, eax  ; word count
  2613                                  lff32s_1:
  2614 00001322 AC                      	lodsb
  2615 00001323 A2[35200000]            	mov	[previous_val_l], al
  2616 00001328 2C80                    	sub	al, 80h
  2617 0000132A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2618 0000132E 66AB                    	stosw		; original sample (L)
  2619 00001330 AC                      	lodsb
  2620 00001331 A2[37200000]            	mov	[previous_val_r], al
  2621 00001336 2C80                    	sub	al, 80h
  2622 00001338 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2623 0000133C 66AB                    	stosw		; original sample (R)
  2624                                  
  2625                                  	;xor	eax, eax
  2626 0000133E 66B88080                	mov	ax, 8080h
  2627 00001342 49                      	dec	ecx
  2628 00001343 7403                    	jz	short lff32s_2
  2629                                  		; convert 8 bit sample to 16 bit sample
  2630 00001345 668B06                  	mov	ax, [esi]
  2631                                  lff32s_2:
  2632                                  	;;mov	[next_val_l], al
  2633                                  	;;mov	[next_val_r], ah
  2634                                  	;mov	bx, ax
  2635 00001348 88E7                    	mov	bh, ah
  2636 0000134A 0205[35200000]          	add	al, [previous_val_l]
  2637 00001350 D0D8                    	rcr	al, 1
  2638                                  	;mov	dl, al
  2639 00001352 2C80                    	sub	al, 80h
  2640 00001354 66C1E008                	shl	ax, 8
  2641 00001358 66AB                    	stosw		; this is interpolated sample (L)
  2642 0000135A 88F8                    	mov	al, bh	; [next_val_r]
  2643 0000135C 0205[37200000]          	add	al, [previous_val_r]
  2644 00001362 D0D8                    	rcr	al, 1
  2645                                  	;mov	dh, al
  2646 00001364 2C80                    	sub	al, 80h
  2647 00001366 66C1E008                	shl	ax, 8
  2648 0000136A 66AB                    	stosw		; this is interpolated sample (R)
  2649                                  
  2650                                  	; different than 8-16-24 kHZ !
  2651                                  	; 'original-interpolated-original' trio samples 
  2652 0000136C E315                    	jecxz	lff32s_3
  2653                                  
  2654 0000136E AC                      	lodsb
  2655 0000136F 2C80                    	sub	al, 80h
  2656 00001371 66C1E008                	shl	ax, 8
  2657 00001375 66AB                    	stosw		; original sample (left channel)
  2658                                  
  2659 00001377 AC                      	lodsb
  2660 00001378 2C80                    	sub	al, 80h
  2661 0000137A 66C1E008                	shl	ax, 8
  2662 0000137E 66AB                    	stosw		; original sample (right channel)
  2663                                  		
  2664                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2665 00001380 49                      	dec	ecx
  2666 00001381 759F                    	jnz	short lff32s_1
  2667                                  lff32s_3:
  2668 00001383 E907F7FFFF              	jmp	lff32_3
  2669                                  
  2670                                  load_32khz_mono_16_bit:
  2671                                  	; 15/11/2023
  2672 00001388 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2673                                  					; last of the file?
  2674 0000138F 7402                    	jz	short lff32m2_0		; no
  2675 00001391 F9                      	stc
  2676 00001392 C3                      	retn
  2677                                  
  2678                                  lff32m2_0:
  2679 00001393 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2680                                          ;mov	edx, [loadsize]
  2681                                  
  2682                                  	; esi = buffer address
  2683                                  	;; edx = buffer size
  2684                                  
  2685                                  	; load file into memory
  2686                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001398 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000139E 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000013A0 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000013A6 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000013AB CD40                <1>  int 40h
  2687 000013AD 723F                    	jc	short lff32m2_7 ; error !
  2688                                  
  2689                                  	;mov	edi, audio_buffer
  2690                                  	; 29/05/2024
  2691 000013AF 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2692                                  	
  2693 000013B5 D1E8                    	shr	eax, 1
  2694 000013B7 7505                    	jnz	short lff32m2_8
  2695 000013B9 E9E5F6FFFF              	jmp	lff32_eof
  2696                                  
  2697                                  lff32m2_8:
  2698 000013BE 89C1                    	mov	ecx, eax  ; word count
  2699                                  lff32m2_1:
  2700 000013C0 66AD                    	lodsw
  2701 000013C2 66AB                    	stosw		; original sample (left channel)
  2702 000013C4 66AB                    	stosw		; original sample (right channel)
  2703 000013C6 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2704                                  	;mov	[previous_val], ax
  2705                                  	;mov	ebx, eax	
  2706                                  	;xor	eax, eax
  2707 000013C9 31DB                    	xor	ebx, ebx
  2708 000013CB 49                      	dec	ecx
  2709 000013CC 7403                    	jz	short lff32m2_2
  2710                                  	;mov	ax, [esi]
  2711 000013CE 668B1E                  	mov	bx, [esi]
  2712                                  lff32m2_2:
  2713                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2714                                  	;mov	ebp, eax	; [next_val]
  2715                                  	;add	ax, [previous_val]
  2716                                  	; ax = [previous_val]
  2717                                  	; bx = [next_val]
  2718 000013D1 6601D8                  	add	ax, bx
  2719 000013D4 66D1D8                  	rcr	ax, 1
  2720 000013D7 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2721 000013DA 66AB                    	stosw		; this is interpolated sample (L)
  2722 000013DC 66AB                    	stosw		; this is interpolated sample (R)
  2723                                  
  2724                                  	; different than 8-16-24 kHZ !
  2725                                  	; 'original-interpolated-original' trio samples 
  2726 000013DE E309                    	jecxz	lff32m2_3
  2727                                  
  2728 000013E0 66AD                    	lodsw
  2729 000013E2 66AB                    	stosw		; original sample (left channel)
  2730 000013E4 66AB                    	stosw		; original sample (right channel)
  2731                                  
  2732                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2733 000013E6 49                      	dec	ecx
  2734 000013E7 75D7                    	jnz	short lff32m2_1
  2735                                  lff32m2_3:
  2736 000013E9 E9A1F6FFFF              	jmp	lff32_3
  2737                                  
  2738                                  lff32m2_7:
  2739                                  lff32s2_7:
  2740 000013EE E9B9F6FFFF              	jmp	lff32_5  ; error
  2741                                  
  2742                                  load_32khz_stereo_16_bit:
  2743                                  	; 16/11/2023
  2744                                  	; 15/11/2023
  2745 000013F3 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2746                                  					; last of the file?
  2747 000013FA 7402                    	jz	short lff32s2_0		; no
  2748 000013FC F9                      	stc
  2749 000013FD C3                      	retn
  2750                                  
  2751                                  lff32s2_0:
  2752 000013FE BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2753                                          ;mov	edx, [loadsize]
  2754                                  
  2755                                  	; esi = buffer address
  2756                                  	;; edx = buffer size
  2757                                  
  2758                                  	; load file into memory
  2759                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001403 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001409 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000140B 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001411 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001416 CD40                <1>  int 40h
  2760 00001418 72D4                    	jc	short lff32s2_7 ; error !
  2761                                  
  2762                                  	;mov	edi, audio_buffer
  2763                                  	; 29/05/2024
  2764 0000141A 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2765                                  	
  2766 00001420 C1E802                  	shr	eax, 2
  2767 00001423 7505                    	jnz	short lff32s2_8
  2768 00001425 E979F6FFFF              	jmp	lff32_eof
  2769                                  
  2770                                  lff32s2_8:
  2771 0000142A 89C1                    	mov	ecx, eax ; dword count
  2772                                  lff32s2_1:
  2773 0000142C 66AD                    	lodsw
  2774 0000142E 66AB                    	stosw		; original sample (L)
  2775 00001430 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2776 00001433 66A3[35200000]          	mov	[previous_val_l], ax
  2777 00001439 66AD                    	lodsw
  2778 0000143B 66AB                    	stosw		; original sample (R)
  2779 0000143D 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2780                                  	;mov	[previous_val_r], ax
  2781 00001440 89C3                    	mov	ebx, eax
  2782 00001442 31D2                    	xor	edx, edx
  2783 00001444 31C0                    	xor	eax, eax
  2784                                  	; 16/11/2023
  2785 00001446 49                      	dec	ecx
  2786 00001447 7407                    	jz	short lff32s2_2
  2787 00001449 668B06                  	mov	ax, [esi]
  2788 0000144C 668B5602                	mov	dx, [esi+2]
  2789                                  lff32s2_2:
  2790 00001450 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2791                                  	;;mov	[next_val_l], ax
  2792                                  	;mov	ebp, eax
  2793 00001453 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2794                                  	;mov	[next_val_r], dx
  2795 00001456 660305[35200000]        	add	ax, [previous_val_l]
  2796 0000145D 66D1D8                  	rcr	ax, 1
  2797 00001460 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2798 00001463 66AB                    	stosw		; this is interpolated sample (L)
  2799                                  	;mov	ax, [next_val_r]
  2800 00001465 89D0                    	mov	eax, edx
  2801                                  	;add	ax, [previous_val_r]
  2802 00001467 6601D8                  	add	ax, bx
  2803 0000146A 66D1D8                  	rcr	ax, 1
  2804 0000146D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2805 00001470 66AB                    	stosw		; this is interpolated sample (R)
  2806                                  
  2807                                  	; different than 8-16-24 kHZ !
  2808                                  	; 'original-interpolated-original' trio samples 
  2809 00001472 E30B                    	jecxz	lff32s2_3
  2810                                  
  2811 00001474 66AD                    	lodsw
  2812 00001476 66AB                    	stosw	; original sample (L)
  2813 00001478 66AD                    	lodsw
  2814 0000147A 66AB                    	stosw	; original sample (R)
  2815                                  	
  2816                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2817 0000147C 49                      	dec	ecx
  2818 0000147D 75AD                    	jnz	short lff32s2_1
  2819                                  lff32s2_3:
  2820 0000147F E90BF6FFFF              	jmp	lff32_3
  2821                                  
  2822                                  ; .....................
  2823                                  
  2824                                  load_22khz_mono_8_bit:
  2825                                  	; 16/11/2023
  2826 00001484 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2827                                  					; last of the file?
  2828 0000148B 7402                    	jz	short lff22m_0		; no
  2829 0000148D F9                      	stc
  2830 0000148E C3                      	retn
  2831                                  
  2832                                  lff22m_0:
  2833 0000148F BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2834                                          ;mov	edx, [loadsize]
  2835                                  
  2836                                  	; esi = buffer address
  2837                                  	;; edx = buffer size
  2838                                  
  2839                                  	; load file into memory
  2840                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001494 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000149A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000149C 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000014A2 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000014A7 CD40                <1>  int 40h
  2841 000014A9 725E                    	jc	short lff22m_7 ; error !
  2842                                  
  2843                                  	;mov	edi, audio_buffer
  2844                                  	; 29/05/2024
  2845 000014AB 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2846                                  	
  2847 000014B1 21C0                    	and	eax, eax
  2848 000014B3 7505                    	jnz	short lff22m_8
  2849 000014B5 E9E9F5FFFF              	jmp	lff22_eof
  2850                                  
  2851                                  lff22m_8:
  2852 000014BA 89C1                    	mov	ecx, eax	; byte count
  2853                                  lff22m_9:
  2854 000014BC BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2855 000014C1 C605[3D200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2856                                  lff22m_1:
  2857                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2858 000014C8 AC                      	lodsb
  2859 000014C9 B280                    	mov	dl, 80h
  2860 000014CB 49                      	dec	ecx
  2861 000014CC 7402                    	jz	short lff22m_2_1
  2862 000014CE 8A16                    	mov	dl, [esi]
  2863                                  lff22m_2_1:	
  2864                                  	; al = [previous_val]
  2865                                  	; dl = [next_val]
  2866 000014D0 E81A060000              	call	interpolating_3_8bit_mono ; 1 of 17
  2867 000014D5 E32D                    	jecxz	lff22m_3
  2868                                  lff22m_2_2:
  2869 000014D7 AC                      	lodsb
  2870 000014D8 B280                    	mov	dl, 80h
  2871 000014DA 49                      	dec	ecx
  2872 000014DB 7402                    	jz	short lff22m_2_3
  2873 000014DD 8A16                    	mov	dl, [esi]
  2874                                  lff22m_2_3:
  2875 000014DF E88F060000               	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2876 000014E4 E31E                    	jecxz	lff22m_3
  2877 000014E6 4D                      	dec	ebp
  2878 000014E7 75EE                    	jnz	short lff22m_2_2
  2879                                  
  2880 000014E9 A0[3D200000]            	mov	al, [faz]
  2881 000014EE FEC8                    	dec	al
  2882 000014F0 74CA                    	jz	short lff22m_9
  2883 000014F2 FE0D[3D200000]          	dec	byte [faz]
  2884 000014F8 BD04000000              	mov	ebp, 4
  2885 000014FD FEC8                    	dec	al
  2886 000014FF 75C7                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2887 00001501 45                      	inc	ebp ; 5
  2888 00001502 EBC4                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2889                                  
  2890                                  lff22m_3:
  2891                                  lff22s_3:
  2892 00001504 E986F5FFFF              	jmp	lff22_3	; padfill
  2893                                  		; (put zeros in the remain words of the buffer)
  2894                                  lff22m_7:
  2895                                  lff22s_7:
  2896 00001509 E99EF5FFFF              	jmp	lff22_5  ; error
  2897                                  
  2898                                  load_22khz_stereo_8_bit:
  2899                                  	; 16/11/2023
  2900 0000150E F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2901                                  					; last of the file?
  2902 00001515 7402                    	jz	short lff22s_0		; no
  2903 00001517 F9                      	stc
  2904 00001518 C3                      	retn
  2905                                  
  2906                                  lff22s_0:
  2907 00001519 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2908                                          ;mov	edx, [loadsize]
  2909                                  
  2910                                  	; esi = buffer address
  2911                                  	;; edx = buffer size
  2912                                  
  2913                                  	; load file into memory
  2914                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000151E 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001524 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001526 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000152C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001531 CD40                <1>  int 40h
  2915 00001533 72D4                    	jc	short lff22s_7 ; error !
  2916                                  
  2917                                  	;mov	edi, audio_buffer
  2918                                  	; 29/05/2024
  2919 00001535 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2920                                  	
  2921 0000153B D1E8                    	shr	eax, 1
  2922 0000153D 7505                    	jnz	short lff22s_8
  2923 0000153F E95FF5FFFF              	jmp	lff22_eof
  2924                                  
  2925                                  lff22s_8:
  2926 00001544 89C1                    	mov	ecx, eax	; word count
  2927                                  lff22s_9:
  2928 00001546 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2929 0000154B C605[3D200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2930                                  lff22s_1:
  2931                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2932 00001552 66AD                    	lodsw
  2933 00001554 66BA8080                	mov	dx, 8080h
  2934 00001558 49                      	dec	ecx
  2935 00001559 7403                    	jz	short lff22s_2_1 
  2936 0000155B 668B16                  	mov	dx, [esi]
  2937                                  lff22s_2_1:	
  2938                                  	; al = [previous_val_l]
  2939                                  	; ah = [previous_val_r]
  2940                                  	; dl = [next_val_l]
  2941                                  	; dh = [next_val_r]	
  2942 0000155E E8BD050000              	call	interpolating_3_8bit_stereo ; 1 of 17 
  2943 00001563 E39F                    	jecxz	lff22s_3
  2944                                  lff22s_2_2:
  2945 00001565 66AD                    	lodsw
  2946 00001567 66BA8080                	mov	dx, 8080h
  2947 0000156B 49                      	dec	ecx
  2948 0000156C 7403                    	jz	short lff22s_2_3
  2949 0000156E 668B16                  	mov	dx, [esi]
  2950                                  lff22s_2_3:
  2951 00001571 E81A060000               	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2952 00001576 E38C                    	jecxz	lff22s_3
  2953 00001578 4D                      	dec	ebp
  2954 00001579 75EA                    	jnz	short lff22s_2_2
  2955                                  
  2956 0000157B A0[3D200000]            	mov	al, [faz]
  2957 00001580 FEC8                    	dec	al
  2958 00001582 74C2                    	jz	short lff22s_9
  2959 00001584 FE0D[3D200000]          	dec	byte [faz]
  2960 0000158A BD04000000              	mov	ebp, 4
  2961 0000158F FEC8                    	dec	al
  2962 00001591 75BF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2963 00001593 45                      	inc	ebp ; 5
  2964 00001594 EBBC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2965                                  
  2966                                  load_22khz_mono_16_bit:
  2967                                  	; 16/11/2023
  2968 00001596 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2969                                  					; last of the file?
  2970 0000159D 7402                    	jz	short lff22m2_0		; no
  2971 0000159F F9                      	stc
  2972 000015A0 C3                      	retn
  2973                                  
  2974                                  lff22m2_0:
  2975 000015A1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2976                                          ;mov	edx, [loadsize]
  2977                                  
  2978                                  	; esi = buffer address
  2979                                  	;; edx = buffer size
  2980                                  
  2981                                  	; load file into memory
  2982                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000015A6 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000015AC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000015AE 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000015B4 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000015B9 CD40                <1>  int 40h
  2983 000015BB 7262                    	jc	short lff22m2_7 ; error !
  2984                                  
  2985                                  	;mov	edi, audio_buffer
  2986                                  	; 29/05/2024
  2987 000015BD 8B3D[A2280000]          	mov	edi, [audio_buffer]
  2988                                  	
  2989 000015C3 D1E8                    	shr	eax, 1
  2990 000015C5 7505                    	jnz	short lff22m2_8
  2991 000015C7 E9D7F4FFFF              	jmp	lff22_eof
  2992                                  
  2993                                  lff22m2_8:
  2994 000015CC 89C1                    	mov	ecx, eax	; word count
  2995                                  lff22m2_9:
  2996 000015CE BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2997 000015D3 C605[3D200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2998                                  lff22m2_1:
  2999                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3000 000015DA 66AD                    	lodsw
  3001 000015DC 31D2                    	xor	edx, edx
  3002 000015DE 49                      	dec	ecx
  3003 000015DF 7403                    	jz	short lff22m2_2_1
  3004 000015E1 668B16                  	mov	dx, [esi]
  3005                                  lff22m2_2_1:	
  3006                                  	; ax = [previous_val]
  3007                                  	; dx = [next_val]
  3008 000015E4 E8D8050000              	call	interpolating_3_16bit_mono ; 1 of 17
  3009 000015E9 E32F                    	jecxz	lff22m2_3
  3010                                  lff22m2_2_2:
  3011 000015EB 66AD                    	lodsw
  3012 000015ED 31D2                    	xor	edx, edx
  3013 000015EF 49                      	dec	ecx
  3014 000015F0 7403                    	jz	short lff22m2_2_3
  3015 000015F2 668B16                  	mov	dx, [esi]
  3016                                  lff22m2_2_3:
  3017 000015F5 E85A060000               	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  3018 000015FA E31E                    	jecxz	lff22m2_3
  3019 000015FC 4D                      	dec	ebp
  3020 000015FD 75EC                    	jnz	short lff22m2_2_2
  3021                                  
  3022 000015FF A0[3D200000]            	mov	al, [faz]
  3023 00001604 FEC8                    	dec	al
  3024 00001606 74C6                    	jz	short lff22m2_9
  3025 00001608 FE0D[3D200000]          	dec	byte [faz]
  3026 0000160E BD04000000              	mov	ebp, 4
  3027 00001613 FEC8                    	dec	al
  3028 00001615 75C3                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3029 00001617 45                      	inc	ebp ; 5
  3030 00001618 EBC0                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3031                                  
  3032                                  lff22m2_3:
  3033                                  lff22s2_3:
  3034 0000161A E970F4FFFF              	jmp	lff22_3	; padfill
  3035                                  		; (put zeros in the remain words of the buffer)
  3036                                  lff22m2_7:
  3037                                  lff22s2_7:
  3038 0000161F E988F4FFFF              	jmp	lff22_5  ; error
  3039                                  
  3040                                  load_22khz_stereo_16_bit:
  3041                                  	; 16/11/2023
  3042 00001624 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3043                                  					; last of the file?
  3044 0000162B 7402                    	jz	short lff22s2_0		; no
  3045 0000162D F9                      	stc
  3046 0000162E C3                      	retn
  3047                                  
  3048                                  lff22s2_0:
  3049 0000162F BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3050                                          ;mov	edx, [loadsize]
  3051                                  
  3052                                  	; esi = buffer address
  3053                                  	;; edx = buffer size
  3054                                  
  3055                                  	; load file into memory
  3056                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001634 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000163A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000163C 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001642 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001647 CD40                <1>  int 40h
  3057 00001649 72D4                    	jc	short lff22s2_7 ; error !
  3058                                  
  3059                                  	;mov	edi, audio_buffer
  3060                                  	; 29/05/2024
  3061 0000164B 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3062                                  	
  3063 00001651 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3064 00001654 7505                    	jnz	short lff22s2_8
  3065 00001656 E948F4FFFF              	jmp	lff22_eof
  3066                                  
  3067                                  lff22s2_8:
  3068 0000165B 89C1                    	mov	ecx, eax	; dword count
  3069                                  lff22s2_9:
  3070 0000165D BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  3071 00001662 C605[3D200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  3072                                  lff22s2_1:
  3073                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3074 00001669 66AD                    	lodsw
  3075 0000166B 89C3                    	mov	ebx, eax
  3076 0000166D 66AD                    	lodsw
  3077 0000166F 8B16                    	mov	edx, [esi]
  3078 00001671 668915[39200000]        	mov	[next_val_l], dx
  3079                                  	; 26/11/2023
  3080 00001678 C1EA10                  	shr	edx, 16
  3081 0000167B 49                      	dec	ecx
  3082 0000167C 7509                    	jnz	short lff22s2_2_1
  3083 0000167E 31D2                    	xor	edx, edx ; 0
  3084 00001680 668915[39200000]        	mov	[next_val_l], dx
  3085                                  lff22s2_2_1:
  3086                                  	; bx = [previous_val_l]
  3087                                  	; ax = [previous_val_r]
  3088                                  	; [next_val_l]
  3089                                  	; dx = [next_val_r]
  3090 00001687 E865050000              	call	interpolating_3_16bit_stereo ; 1 of 17 
  3091 0000168C E38C                    	jecxz	lff22s2_3
  3092                                  lff22s2_2_2:
  3093 0000168E 66AD                    	lodsw
  3094 00001690 89C3                    	mov	ebx, eax
  3095 00001692 66AD                    	lodsw
  3096 00001694 8B16                    	mov	edx, [esi]
  3097 00001696 668915[39200000]        	mov	[next_val_l], dx
  3098                                  	; 26/11/2023
  3099 0000169D C1EA10                  	shr	edx, 16
  3100 000016A0 49                      	dec	ecx
  3101 000016A1 7509                    	jnz	short lff22s2_2_3
  3102 000016A3 31D2                    	xor	edx, edx ; 0
  3103 000016A5 668915[39200000]        	mov	[next_val_l], dx
  3104                                  lff22s2_2_3:
  3105 000016AC E8BB050000               	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  3106 000016B1 E31E                    	jecxz	lff22s2_2_4
  3107                                  
  3108 000016B3 4D                      	dec	ebp
  3109 000016B4 75D8                    	jnz	short lff22s2_2_2
  3110                                  
  3111 000016B6 A0[3D200000]            	mov	al, [faz]
  3112 000016BB FEC8                    	dec	al
  3113 000016BD 749E                    	jz	short lff22s2_9
  3114 000016BF FE0D[3D200000]          	dec	byte [faz]
  3115 000016C5 BD04000000              	mov	ebp, 4
  3116 000016CA FEC8                    	dec	al
  3117 000016CC 759B                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3118 000016CE 45                      	inc	ebp ; 5
  3119 000016CF EB98                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3120                                  
  3121                                  lff22s2_2_4:
  3122                                  	; 26/11/2023
  3123 000016D1 E9B9F3FFFF              	jmp	lff22_3	; padfill
  3124                                  
  3125                                  ; .....................
  3126                                  
  3127                                  load_11khz_mono_8_bit:
  3128                                  	; 18/11/2023
  3129 000016D6 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3130                                  					; last of the file?
  3131 000016DD 7402                    	jz	short lff11m_0		; no
  3132 000016DF F9                      	stc
  3133 000016E0 C3                      	retn
  3134                                  
  3135                                  lff11m_0:
  3136 000016E1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3137                                          ;mov	edx, [loadsize]
  3138                                  
  3139                                  	; esi = buffer address
  3140                                  	;; edx = buffer size
  3141                                  
  3142                                  	; load file into memory
  3143                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000016E6 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000016EC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000016EE 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000016F4 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000016F9 CD40                <1>  int 40h
  3144 000016FB 7248                    	jc	short lff11m_7 ; error !
  3145                                  
  3146                                  	;mov	edi, audio_buffer
  3147                                  	; 29/05/2024
  3148 000016FD 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3149                                  	
  3150 00001703 21C0                    	and	eax, eax
  3151 00001705 7505                    	jnz	short lff11m_8
  3152 00001707 E997F3FFFF              	jmp	lff11_eof
  3153                                  
  3154                                  lff11m_8:
  3155 0000170C 89C1                    	mov	ecx, eax		; byte count
  3156                                  lff11m_9:
  3157 0000170E BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3158                                  lff11m_1:
  3159                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3160 00001713 AC                      	lodsb
  3161 00001714 B280                    	mov	dl, 80h
  3162 00001716 49                      	dec	ecx
  3163 00001717 7402                    	jz	short lff11m_2_1
  3164 00001719 8A16                    	mov	dl, [esi]
  3165                                  lff11m_2_1:	
  3166                                  	; al = [previous_val]
  3167                                  	; dl = [next_val]
  3168 0000171B E87D050000              	call	interpolating_5_8bit_mono
  3169 00001720 E328                    	jecxz	lff11m_3
  3170                                  lff11m_2_2:
  3171 00001722 AC                      	lodsb
  3172 00001723 B280                    	mov	dl, 80h
  3173 00001725 49                      	dec	ecx
  3174 00001726 7402                    	jz	short lff11m_2_3
  3175 00001728 8A16                    	mov	dl, [esi]
  3176                                  lff11m_2_3:
  3177 0000172A E87A060000               	call	interpolating_4_8bit_mono
  3178 0000172F E319                    	jecxz	lff11m_3
  3179                                  
  3180 00001731 4D                      	dec	ebp
  3181 00001732 74DA                    	jz	short lff11m_9
  3182                                  
  3183 00001734 AC                      	lodsb
  3184 00001735 B280                    	mov	dl, 80h
  3185 00001737 49                      	dec	ecx
  3186 00001738 7402                    	jz	short lff11m_2_4
  3187 0000173A 8A16                    	mov	dl, [esi]
  3188                                  lff11m_2_4:
  3189 0000173C E868060000              	call	interpolating_4_8bit_mono
  3190 00001741 E307                    	jecxz	lff11m_3
  3191 00001743 EBCE                    	jmp	short lff11m_1
  3192                                  
  3193                                  lff11m_7:
  3194                                  lff11s_7:
  3195 00001745 E962F3FFFF              	jmp	lff11_5  ; error
  3196                                  
  3197                                  lff11m_3:
  3198                                  lff11s_3:
  3199 0000174A E940F3FFFF              	jmp	lff11_3	; padfill
  3200                                  		; (put zeros in the remain words of the buffer)
  3201                                  
  3202                                  load_11khz_stereo_8_bit:
  3203                                  	; 18/11/2023
  3204 0000174F F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3205                                  					; last of the file?
  3206 00001756 7402                    	jz	short lff11s_0		; no
  3207 00001758 F9                      	stc
  3208 00001759 C3                      	retn
  3209                                  
  3210                                  lff11s_0:
  3211 0000175A BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3212                                          ;mov	edx, [loadsize]
  3213                                  
  3214                                  	; esi = buffer address
  3215                                  	;; edx = buffer size
  3216                                  
  3217                                  	; load file into memory
  3218                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000175F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001765 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001767 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000176D B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001772 CD40                <1>  int 40h
  3219 00001774 72CF                    	jc	short lff11s_7 ; error !
  3220                                  
  3221                                  	;mov	edi, audio_buffer
  3222                                  	; 29/05/2024
  3223 00001776 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3224                                  	
  3225 0000177C D1E8                    	shr	eax, 1
  3226 0000177E 7505                    	jnz	short lff11s_8
  3227 00001780 E91EF3FFFF              	jmp	lff11_eof
  3228                                  
  3229                                  lff11s_8:
  3230 00001785 89C1                    	mov	ecx, eax	; word count
  3231                                  lff11s_9:
  3232 00001787 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3233                                  lff11s_1:
  3234                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3235 0000178C 66AD                    	lodsw
  3236 0000178E 66BA8080                	mov	dx, 8080h
  3237 00001792 49                      	dec	ecx
  3238 00001793 7403                    	jz	short lff11s_2_1 
  3239 00001795 668B16                  	mov	dx, [esi]
  3240                                  lff11s_2_1:	
  3241                                  	; al = [previous_val_l]
  3242                                  	; ah = [previous_val_r]
  3243                                  	; dl = [next_val_l]
  3244                                  	; dh = [next_val_r]	
  3245 00001798 E85F050000              	call	interpolating_5_8bit_stereo
  3246 0000179D E3AB                    	jecxz	lff11s_3
  3247                                  lff11s_2_2:
  3248 0000179F 66AD                    	lodsw
  3249 000017A1 66BA8080                	mov	dx, 8080h
  3250 000017A5 49                      	dec	ecx
  3251 000017A6 7403                    	jz	short lff11s_2_3
  3252 000017A8 668B16                  	mov	dx, [esi]
  3253                                  lff11s_2_3:
  3254 000017AB E838060000               	call	interpolating_4_8bit_stereo
  3255 000017B0 E398                    	jecxz	lff11s_3
  3256                                  	
  3257 000017B2 4D                      	dec	ebp
  3258 000017B3 74D2                    	jz	short lff11s_9
  3259                                  
  3260 000017B5 66AD                    	lodsw
  3261 000017B7 66BA8080                	mov	dx, 8080h
  3262 000017BB 49                      	dec	ecx
  3263 000017BC 7403                    	jz	short lff11s_2_4
  3264 000017BE 668B16                  	mov	dx, [esi]
  3265                                  lff11s_2_4:
  3266 000017C1 E822060000              	call	interpolating_4_8bit_stereo
  3267 000017C6 E382                    	jecxz	lff11s_3
  3268 000017C8 EBC2                    	jmp	short lff11s_1
  3269                                  
  3270                                  load_11khz_mono_16_bit:
  3271                                  	; 18/11/2023
  3272 000017CA F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3273                                  					; last of the file?
  3274 000017D1 7402                    	jz	short lff11m2_0		; no
  3275 000017D3 F9                      	stc
  3276 000017D4 C3                      	retn
  3277                                  
  3278                                  lff11m2_0:
  3279 000017D5 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3280                                          ;mov	edx, [loadsize]
  3281                                  
  3282                                  	; esi = buffer address
  3283                                  	;; edx = buffer size
  3284                                  
  3285                                  	; load file into memory
  3286                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000017DA 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000017E0 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000017E2 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000017E8 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000017ED CD40                <1>  int 40h
  3287 000017EF 724E                    	jc	short lff11m2_7 ; error !
  3288                                  
  3289                                  	;mov	edi, audio_buffer
  3290                                  	; 29/05/2024
  3291 000017F1 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3292                                  	
  3293 000017F7 D1E8                    	shr	eax, 1
  3294 000017F9 7505                    	jnz	short lff11m2_8
  3295 000017FB E9A3F2FFFF              	jmp	lff11_eof
  3296                                  
  3297                                  lff11m2_8:
  3298 00001800 89C1                    	mov	ecx, eax	; word count
  3299                                  lff11m2_9:
  3300 00001802 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3301                                  lff11m2_1:
  3302                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3303 00001807 66AD                    	lodsw
  3304 00001809 31D2                    	xor	edx, edx
  3305 0000180B 49                      	dec	ecx
  3306 0000180C 7403                    	jz	short lff11m2_2_1
  3307 0000180E 668B16                  	mov	dx, [esi]
  3308                                  lff11m2_2_1:	
  3309                                  	; ax = [previous_val]
  3310                                  	; dx = [next_val]
  3311 00001811 E83F060000              	call	interpolating_5_16bit_mono
  3312 00001816 E363                    	jecxz	lff11m2_3
  3313                                  lff11m2_2_2:
  3314 00001818 66AD                    	lodsw
  3315 0000181A 31D2                    	xor	edx, edx
  3316 0000181C 49                      	dec	ecx
  3317 0000181D 7403                    	jz	short lff11m2_2_3
  3318 0000181F 668B16                  	mov	dx, [esi]
  3319                                  lff11m2_2_3:
  3320 00001822 E858070000               	call	interpolating_4_16bit_mono
  3321 00001827 E352                    	jecxz	lff11m2_3
  3322                                  
  3323 00001829 4D                      	dec	ebp
  3324 0000182A 74D6                    	jz	short lff11m2_9
  3325                                  
  3326 0000182C 66AD                    	lodsw
  3327 0000182E 31D2                    	xor	edx, edx
  3328 00001830 49                      	dec	ecx
  3329 00001831 7403                    	jz	short lff11m2_2_4
  3330 00001833 668B16                  	mov	dx, [esi]
  3331                                  lff11m2_2_4:
  3332 00001836 E844070000               	call	interpolating_4_16bit_mono
  3333 0000183B E33E                    	jecxz	lff11m2_3
  3334 0000183D EBC8                    	jmp	short lff11m2_1
  3335                                  
  3336                                  lff11m2_7:
  3337                                  lff11s2_7:
  3338 0000183F E968F2FFFF              	jmp	lff11_5  ; error
  3339                                  
  3340                                  load_11khz_stereo_16_bit:
  3341                                  	; 18/11/2023
  3342 00001844 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3343                                  					; last of the file?
  3344 0000184B 7402                    	jz	short lff11s2_0		; no
  3345 0000184D F9                      	stc
  3346 0000184E C3                      	retn
  3347                                  
  3348                                  lff11s2_0:
  3349 0000184F BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3350                                          ;mov	edx, [loadsize]
  3351                                  
  3352                                  	; esi = buffer address
  3353                                  	;; edx = buffer size
  3354                                  
  3355                                  	; load file into memory
  3356                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001854 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000185A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000185C 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001862 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001867 CD40                <1>  int 40h
  3357 00001869 72D4                    	jc	short lff11s2_7 ; error !
  3358                                  
  3359                                  	;mov	edi, audio_buffer
  3360                                  	; 29/05/2024
  3361 0000186B 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3362                                  	
  3363 00001871 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3364 00001874 750A                    	jnz	short lff11s2_8
  3365 00001876 E928F2FFFF              	jmp	lff11_eof
  3366                                  
  3367                                  lff11m2_3:
  3368                                  lff11s2_3:
  3369 0000187B E90FF2FFFF              	jmp	lff11_3	; padfill
  3370                                  		; (put zeros in the remain words of the buffer)
  3371                                  
  3372                                  lff11s2_8:
  3373 00001880 89C1                    	mov	ecx, eax	; dword count
  3374                                  lff11s2_9:
  3375 00001882 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3376                                  lff11s2_1:
  3377                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3378 00001887 66AD                    	lodsw
  3379 00001889 89C3                    	mov	ebx, eax
  3380 0000188B 66AD                    	lodsw
  3381 0000188D 8B16                    	mov	edx, [esi]
  3382 0000188F 8915[39200000]          	mov	[next_val_l], edx
  3383                                  	; 26/11/2023
  3384 00001895 C1EA10                  	shr	edx, 16
  3385                                  	;mov	[next_val_r], dx
  3386 00001898 49                      	dec	ecx
  3387 00001899 7509                    	jnz	short lff11s2_2_1
  3388 0000189B 31D2                    	xor	edx, edx ; 0
  3389 0000189D 668915[39200000]        	mov	[next_val_l], dx
  3390                                  	;mov	[next_val_r], dx
  3391                                  lff11s2_2_1:
  3392                                  	; bx = [previous_val_l]
  3393                                  	; ax = [previous_val_r]
  3394                                  	; [next_val_l]
  3395                                  	; dx = [next_val_r]
  3396 000018A4 E807060000              	call	interpolating_5_16bit_stereo
  3397 000018A9 E3D0                    	jecxz	lff11s2_3
  3398                                  lff11s2_2_2:
  3399 000018AB 66AD                    	lodsw
  3400 000018AD 89C3                    	mov	ebx, eax
  3401 000018AF 66AD                    	lodsw
  3402 000018B1 8B16                    	mov	edx, [esi]
  3403 000018B3 668915[39200000]        	mov	[next_val_l], dx
  3404                                  	; 26/11/2023
  3405 000018BA C1EA10                  	shr	edx, 16
  3406                                  	;mov	[next_val_r], dx
  3407 000018BD 49                      	dec	ecx
  3408 000018BE 7509                    	jnz	short lff11s2_2_3
  3409 000018C0 31D2                    	xor	edx, edx ; 0
  3410 000018C2 668915[39200000]        	mov	[next_val_l], dx
  3411                                  	;mov	[next_val_r], dx
  3412                                  lff11s2_2_3:
  3413 000018C9 E8EA060000               	call	interpolating_4_16bit_stereo
  3414 000018CE E3AB                    	jecxz	lff11s2_3
  3415                                  	
  3416 000018D0 4D                      	dec	ebp
  3417 000018D1 74AF                    	jz	short lff11s2_9
  3418                                  
  3419 000018D3 66AD                    	lodsw
  3420 000018D5 89C3                    	mov	ebx, eax
  3421 000018D7 66AD                    	lodsw
  3422 000018D9 8B16                    	mov	edx, [esi]
  3423 000018DB 668915[39200000]        	mov	[next_val_l], dx
  3424                                  	; 26/11/2023
  3425 000018E2 C1EA10                  	shr	edx, 16
  3426                                  	;mov	[next_val_r], dx
  3427 000018E5 49                      	dec	ecx
  3428 000018E6 7509                    	jnz	short lff11s2_2_4
  3429 000018E8 31D2                    	xor	edx, edx ; 0
  3430 000018EA 668915[39200000]        	mov	[next_val_l], dx
  3431                                  	;mov	[next_val_r], dx
  3432                                  lff11s2_2_4:
  3433 000018F1 E8C2060000               	call	interpolating_4_16bit_stereo
  3434 000018F6 E383                    	jecxz	lff11s2_3
  3435 000018F8 EB8D                    	jmp	short lff11s2_1
  3436                                  
  3437                                  ; .....................
  3438                                  
  3439                                  load_44khz_mono_8_bit:
  3440                                  	; 18/11/2023
  3441 000018FA F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3442                                  					; last of the file?
  3443 00001901 7402                    	jz	short lff44m_0		; no
  3444 00001903 F9                      	stc
  3445 00001904 C3                      	retn
  3446                                  
  3447                                  lff44m_0:
  3448 00001905 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3449                                          ;mov	edx, [loadsize]
  3450                                  
  3451                                  	; esi = buffer address
  3452                                  	;; edx = buffer size
  3453                                  
  3454                                  	; load file into memory
  3455                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000190A 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001910 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001912 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001918 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000191D CD40                <1>  int 40h
  3456 0000191F 7251                    	jc	short lff44m_7 ; error !
  3457                                  
  3458                                  	;mov	edi, audio_buffer
  3459                                  	; 29/05/2024
  3460 00001921 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3461                                  	
  3462 00001927 21C0                    	and	eax, eax
  3463 00001929 7505                    	jnz	short lff44m_8
  3464 0000192B E973F1FFFF              	jmp	lff44_eof
  3465                                  
  3466                                  lff44m_8:
  3467 00001930 89C1                    	mov	ecx, eax	; byte count
  3468                                  lff44m_9:
  3469 00001932 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3470 00001937 C605[3D200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3471                                  lff44m_1:
  3472                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3473                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3474 0000193E AC                      	lodsb
  3475 0000193F B280                    	mov	dl, 80h
  3476 00001941 49                      	dec	ecx
  3477 00001942 7402                    	jz	short lff44m_2_1
  3478 00001944 8A16                    	mov	dl, [esi]
  3479                                  lff44m_2_1:	
  3480                                  	; al = [previous_val]
  3481                                  	; dl = [next_val]
  3482 00001946 E828020000              	call	interpolating_2_8bit_mono
  3483 0000194B E320                    	jecxz	lff44m_3
  3484                                  lff44m_2_2:
  3485 0000194D AC                      	lodsb
  3486 0000194E 2C80                    	sub	al, 80h
  3487 00001950 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3488 00001954 66AB                    	stosw		; (L)
  3489 00001956 66AB                    	stosw		; (R)	
  3490                                  
  3491 00001958 49                      	dec	ecx
  3492 00001959 7412                    	jz	short lff44m_3	
  3493 0000195B 4D                      	dec	ebp
  3494 0000195C 75EF                    	jnz	short lff44m_2_2
  3495                                  	
  3496 0000195E FE0D[3D200000]          	dec	byte [faz]
  3497 00001964 74CC                    	jz	short lff44m_9 
  3498 00001966 BD0B000000              	mov	ebp, 11
  3499 0000196B EBD1                    	jmp	short lff44m_1
  3500                                  
  3501                                  lff44m_3:
  3502                                  lff44s_3:
  3503 0000196D E91DF1FFFF              	jmp	lff44_3	; padfill
  3504                                  		; (put zeros in the remain words of the buffer)
  3505                                  lff44m_7:
  3506                                  lff44s_7:
  3507 00001972 E935F1FFFF              	jmp	lff44_5  ; error
  3508                                  
  3509                                  load_44khz_stereo_8_bit:
  3510                                  	; 16/11/2023
  3511 00001977 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3512                                  					; last of the file?
  3513 0000197E 7402                    	jz	short lff44s_0		; no
  3514 00001980 F9                      	stc
  3515 00001981 C3                      	retn
  3516                                  
  3517                                  lff44s_0:
  3518 00001982 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3519                                          ;mov	edx, [loadsize]
  3520                                  
  3521                                  	; esi = buffer address
  3522                                  	;; edx = buffer size
  3523                                  
  3524                                  	; load file into memory
  3525                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001987 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000198D 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000198F 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001995 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000199A CD40                <1>  int 40h
  3526 0000199C 72D4                    	jc	short lff44s_7 ; error !
  3527                                  
  3528                                  	;mov	edi, audio_buffer
  3529                                  	; 29/05/2024
  3530 0000199E 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3531                                  	
  3532 000019A4 D1E8                    	shr	eax, 1
  3533 000019A6 7505                    	jnz	short lff44s_8
  3534 000019A8 E9F6F0FFFF              	jmp	lff44_eof
  3535                                  
  3536                                  lff44s_8:
  3537 000019AD 89C1                    	mov	ecx, eax	; word count
  3538                                  lff44s_9:
  3539 000019AF BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3540 000019B4 C605[3D200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3541                                  lff44s_1:
  3542                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3543                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3544 000019BB 66AD                    	lodsw
  3545 000019BD 66BA8080                	mov	dx, 8080h
  3546 000019C1 49                      	dec	ecx
  3547 000019C2 7403                    	jz	short lff44s_2_1 
  3548 000019C4 668B16                  	mov	dx, [esi]
  3549                                  lff44s_2_1:	
  3550                                  	; al = [previous_val_l]
  3551                                  	; ah = [previous_val_r]
  3552                                  	; dl = [next_val_l]
  3553                                  	; dh = [next_val_r]	
  3554 000019C7 E8C4010000              	call	interpolating_2_8bit_stereo
  3555 000019CC E39F                    	jecxz	lff44s_3
  3556                                  lff44s_2_2:
  3557 000019CE AC                      	lodsb
  3558 000019CF 2C80                    	sub	al, 80h
  3559 000019D1 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3560 000019D5 66AB                    	stosw		; (L)
  3561 000019D7 AC                      	lodsb
  3562 000019D8 2C80                    	sub	al, 80h
  3563 000019DA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3564 000019DE 66AB                    	stosw		; (R)
  3565                                  
  3566 000019E0 49                      	dec	ecx
  3567 000019E1 748A                    	jz	short lff44s_3	
  3568 000019E3 4D                      	dec	ebp
  3569 000019E4 75E8                    	jnz	short lff44s_2_2
  3570                                  	
  3571 000019E6 FE0D[3D200000]          	dec	byte [faz]
  3572 000019EC 74C1                    	jz	short lff44s_9 
  3573 000019EE BD0B000000              	mov	ebp, 11
  3574 000019F3 EBC6                    	jmp	short lff44s_1
  3575                                  
  3576                                  load_44khz_mono_16_bit:
  3577                                  	; 18/11/2023
  3578 000019F5 F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3579                                  					; last of the file?
  3580 000019FC 7402                    	jz	short lff44m2_0		; no
  3581 000019FE F9                      	stc
  3582 000019FF C3                      	retn
  3583                                  
  3584                                  lff44m2_0:
  3585 00001A00 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3586                                          ;mov	edx, [loadsize]
  3587                                  
  3588                                  	; esi = buffer address
  3589                                  	;; edx = buffer size
  3590                                  
  3591                                  	; load file into memory
  3592                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001A05 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001A0B 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001A0D 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001A13 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001A18 CD40                <1>  int 40h
  3593 00001A1A 724E                    	jc	short lff44m2_7 ; error !
  3594                                  
  3595                                  	;mov	edi, audio_buffer
  3596                                  	; 29/05/2024
  3597 00001A1C 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3598                                  	
  3599 00001A22 D1E8                    	shr	eax, 1
  3600 00001A24 7505                    	jnz	short lff44m2_8
  3601 00001A26 E978F0FFFF              	jmp	lff44_eof
  3602                                  
  3603                                  lff44m2_8:
  3604 00001A2B 89C1                    	mov	ecx, eax	; word count
  3605                                  lff44m2_9:
  3606 00001A2D BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3607 00001A32 C605[3D200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3608                                  lff44m2_1:
  3609                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3610                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3611 00001A39 66AD                    	lodsw
  3612 00001A3B 31D2                    	xor	edx, edx
  3613 00001A3D 49                      	dec	ecx
  3614 00001A3E 7403                    	jz	short lff44m2_2_1
  3615 00001A40 668B16                  	mov	dx, [esi]
  3616                                  lff44m2_2_1:	
  3617                                  	; ax = [previous_val]
  3618                                  	; dx = [next_val]
  3619 00001A43 E80C020000              	call	interpolating_2_16bit_mono
  3620 00001A48 E31B                    	jecxz	lff44m2_3
  3621                                  lff44m2_2_2:
  3622 00001A4A 66AD                    	lodsw
  3623 00001A4C 66AB                    	stosw		; (L)eft Channel
  3624 00001A4E 66AB                    	stosw		; (R)ight Channel
  3625                                  
  3626 00001A50 49                      	dec	ecx
  3627 00001A51 7412                    	jz	short lff44m2_3	
  3628 00001A53 4D                      	dec	ebp
  3629 00001A54 75F4                    	jnz	short lff44m2_2_2
  3630                                  	
  3631 00001A56 FE0D[3D200000]          	dec	byte [faz]
  3632 00001A5C 74CF                    	jz	short lff44m2_9 
  3633 00001A5E BD0B000000              	mov	ebp, 11
  3634 00001A63 EBD4                    	jmp	short lff44m2_1
  3635                                  
  3636                                  lff44m2_3:
  3637                                  lff44s2_3:
  3638 00001A65 E925F0FFFF              	jmp	lff44_3	; padfill
  3639                                  		; (put zeros in the remain words of the buffer)
  3640                                  lff44m2_7:
  3641                                  lff44s2_7:
  3642 00001A6A E93DF0FFFF              	jmp	lff44_5  ; error
  3643                                  
  3644                                  load_44khz_stereo_16_bit:
  3645                                  	; 18/11/2023
  3646 00001A6F F605[24280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3647                                  					; last of the file?
  3648 00001A76 7402                    	jz	short lff44s2_0		; no
  3649 00001A78 F9                      	stc
  3650 00001A79 C3                      	retn
  3651                                  
  3652                                  lff44s2_0:
  3653 00001A7A BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3654                                          ;mov	edx, [loadsize]
  3655                                  
  3656                                  	; esi = buffer address
  3657                                  	;; edx = buffer size
  3658                                  
  3659                                  	; load file into memory
  3660                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001A7F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001A85 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001A87 8B15[75030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001A8D B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001A92 CD40                <1>  int 40h
  3661 00001A94 72D4                    	jc	short lff44s2_7 ; error !
  3662                                  
  3663                                  	;mov	edi, audio_buffer
  3664                                  	; 29/05/2024
  3665 00001A96 8B3D[A2280000]          	mov	edi, [audio_buffer]
  3666                                  	
  3667 00001A9C C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3668 00001A9F 7505                    	jnz	short lff44s2_8
  3669 00001AA1 E9FDEFFFFF              	jmp	lff44_eof
  3670                                  
  3671                                  lff44s2_8:
  3672 00001AA6 89C1                    	mov	ecx, eax	; dword count
  3673                                  lff44s2_9:
  3674 00001AA8 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3675 00001AAD C605[3D200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3676                                  lff44s2_1:
  3677                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3678                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3679 00001AB4 66AD                    	lodsw
  3680 00001AB6 89C3                    	mov	ebx, eax
  3681 00001AB8 66AD                    	lodsw
  3682                                  	;mov	dx, [esi]
  3683                                  	;mov	[next_val_l], dx
  3684                                  	;mov	dx, [esi+2]
  3685                                  	; 26/11/2023
  3686 00001ABA 8B16                    	mov	edx, [esi]
  3687 00001ABC 668915[39200000]        	mov	[next_val_l], dx
  3688 00001AC3 C1EA10                  	shr	edx, 16
  3689 00001AC6 49                      	dec	ecx
  3690 00001AC7 7509                    	jnz	short lff44s2_2_1
  3691 00001AC9 31D2                    	xor	edx, edx ; 0
  3692 00001ACB 668915[39200000]        	mov	[next_val_l], dx
  3693                                  lff44s2_2_1:
  3694                                  	; bx = [previous_val_l]
  3695                                  	; ax = [previous_val_r]
  3696                                  	; [next_val_l]
  3697                                  	; dx = [next_val_r]
  3698 00001AD2 E895010000              	call	interpolating_2_16bit_stereo
  3699 00001AD7 E38C                    	jecxz	lff44s2_3
  3700                                  lff44s2_2_2:
  3701                                  	;movsw		; (L)eft Channel
  3702                                  	;movsw		; (R)ight Channel
  3703 00001AD9 A5                      	movsd
  3704                                  
  3705 00001ADA 49                      	dec	ecx
  3706 00001ADB 7488                    	jz	short lff44s2_3	
  3707 00001ADD 4D                      	dec	ebp
  3708 00001ADE 75F9                    	jnz	short lff44s2_2_2
  3709                                  	
  3710 00001AE0 FE0D[3D200000]          	dec	byte [faz]
  3711 00001AE6 74C0                    	jz	short lff44s2_9 
  3712 00001AE8 BD0B000000              	mov	ebp, 11
  3713 00001AED EBC5                    	jmp	short lff44s2_1
  3714                                  
  3715                                  ; .....................
  3716                                  
  3717                                  interpolating_3_8bit_mono:
  3718                                  	; 16/11/2023
  3719                                  	; al = [previous_val]
  3720                                  	; dl = [next_val]
  3721                                  	; original-interpolated-interpolated
  3722 00001AEF 88C3                    	mov	bl, al
  3723 00001AF1 2C80                    	sub	al, 80h
  3724 00001AF3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3725 00001AF7 66AB                    	stosw		; original sample (L)
  3726 00001AF9 66AB                    	stosw		; original sample (R)
  3727 00001AFB 88D8                    	mov	al, bl
  3728 00001AFD 00D0                    	add	al, dl	
  3729 00001AFF D0D8                    	rcr	al, 1
  3730 00001B01 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3731 00001B03 00D8                    	add	al, bl
  3732 00001B05 D0D8                    	rcr	al, 1
  3733 00001B07 2C80                    	sub	al, 80h
  3734 00001B09 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3735 00001B0D 66AB                    	stosw		; interpolated sample 1 (L)
  3736 00001B0F 66AB                    	stosw		; interpolated sample 1 (R)
  3737 00001B11 88F8                    	mov	al, bh
  3738 00001B13 00D0                    	add	al, dl	; [next_val]
  3739 00001B15 D0D8                    	rcr	al, 1
  3740 00001B17 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3741 00001B1B 66AB                    	stosw		; interpolated sample 2 (L)
  3742 00001B1D 66AB                    	stosw		; interpolated sample 2 (R)
  3743 00001B1F C3                      	retn
  3744                                  
  3745                                  interpolating_3_8bit_stereo:
  3746                                  	; 16/11/2023
  3747                                  	; al = [previous_val_l]
  3748                                  	; ah = [previous_val_r]
  3749                                  	; dl = [next_val_l]
  3750                                  	; dh = [next_val_r]	
  3751                                  	; original-interpolated-interpolated
  3752 00001B20 89C3                    	mov	ebx, eax
  3753 00001B22 2C80                    	sub	al, 80h
  3754 00001B24 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3755 00001B28 66AB                    	stosw		; original sample (L)
  3756 00001B2A 88F8                    	mov	al, bh
  3757 00001B2C 2C80                    	sub	al, 80h
  3758 00001B2E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3759 00001B32 66AB                    	stosw		; original sample (R)
  3760 00001B34 88D8                    	mov	al, bl
  3761 00001B36 00D0                    	add	al, dl	; [next_val_l]	
  3762 00001B38 D0D8                    	rcr	al, 1
  3763 00001B3A 50                      	push	eax ; *	; al = interpolated middle (L) (temporary)
  3764 00001B3B 00D8                    	add	al, bl	; [previous_val_l]
  3765 00001B3D D0D8                    	rcr	al, 1
  3766 00001B3F 2C80                    	sub	al, 80h
  3767 00001B41 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3768 00001B45 66AB                    	stosw		; interpolated sample 1 (L)
  3769 00001B47 88F8                    	mov	al, bh
  3770 00001B49 00F0                    	add	al, dh	; [next_val_r]
  3771 00001B4B D0D8                    	rcr	al, 1
  3772 00001B4D 50                      	push	eax ; ** ; al = interpolated middle (R) (temporary)
  3773 00001B4E 00F8                    	add	al, bh	; [previous_val_r]
  3774 00001B50 D0D8                    	rcr	al, 1
  3775 00001B52 2C80                    	sub	al, 80h
  3776 00001B54 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3777 00001B58 66AB                    	stosw		; interpolated sample 1 (R)
  3778 00001B5A 5B                      	pop	ebx ; **
  3779 00001B5B 58                      	pop	eax ; *
  3780 00001B5C 00D0                    	add	al, dl	; [next_val_l]
  3781 00001B5E D0D8                    	rcr	al, 1
  3782 00001B60 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3783 00001B64 66AB                    	stosw		; interpolated sample 2 (L)
  3784 00001B66 88D8                    	mov	al, bl
  3785 00001B68 00F0                    	add	al, dh	; [next_val_r]
  3786 00001B6A D0D8                    	rcr	al, 1
  3787 00001B6C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3788 00001B70 66AB                    	stosw		; interpolated sample 2 (R)
  3789 00001B72 C3                      	retn
  3790                                  
  3791                                  interpolating_2_8bit_mono:
  3792                                  	; 16/11/2023
  3793                                  	; al = [previous_val]
  3794                                  	; dl = [next_val]
  3795                                  	; original-interpolated
  3796 00001B73 88C3                    	mov	bl, al
  3797 00001B75 2C80                    	sub	al, 80h
  3798 00001B77 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3799 00001B7B 66AB                    	stosw		; original sample (L)
  3800 00001B7D 66AB                    	stosw		; original sample (R)
  3801 00001B7F 88D8                    	mov	al, bl
  3802 00001B81 00D0                    	add	al, dl	
  3803 00001B83 D0D8                    	rcr	al, 1
  3804 00001B85 2C80                    	sub	al, 80h
  3805 00001B87 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3806 00001B8B 66AB                    	stosw		; interpolated sample (L)
  3807 00001B8D 66AB                    	stosw		; interpolated sample (R)
  3808 00001B8F C3                      	retn
  3809                                  
  3810                                  interpolating_2_8bit_stereo:
  3811                                  	; 16/11/2023
  3812                                  	; al = [previous_val_l]
  3813                                  	; ah = [previous_val_r]
  3814                                  	; dl = [next_val_l]
  3815                                  	; dh = [next_val_r]	
  3816                                  	; original-interpolated
  3817 00001B90 89C3                    	mov	ebx, eax
  3818 00001B92 2C80                    	sub	al, 80h
  3819 00001B94 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3820 00001B98 66AB                    	stosw		; original sample (L)
  3821 00001B9A 88F8                    	mov	al, bh
  3822 00001B9C 2C80                    	sub	al, 80h
  3823 00001B9E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3824 00001BA2 66AB                    	stosw		; original sample (R)
  3825 00001BA4 88D8                    	mov	al, bl	; [previous_val_l]
  3826 00001BA6 00D0                    	add	al, dl	; [next_val_l]	
  3827 00001BA8 D0D8                    	rcr	al, 1
  3828 00001BAA 2C80                    	sub	al, 80h
  3829 00001BAC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3830 00001BB0 66AB                    	stosw		; interpolated sample (L)
  3831 00001BB2 88F8                    	mov	al, bh
  3832 00001BB4 00F0                    	add	al, dh	; [next_val_r]
  3833 00001BB6 D0D8                    	rcr	al, 1
  3834 00001BB8 2C80                    	sub	al, 80h
  3835 00001BBA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3836 00001BBE 66AB                    	stosw		; interpolated sample (R)
  3837 00001BC0 C3                      	retn
  3838                                  
  3839                                  interpolating_3_16bit_mono:
  3840                                  	; 16/11/2023
  3841                                  	; ax = [previous_val]
  3842                                  	; dx = [next_val]
  3843                                  	; original-interpolated-interpolated
  3844                                  
  3845 00001BC1 66AB                    	stosw		; original sample (L)
  3846 00001BC3 66AB                    	stosw		; original sample (R)
  3847 00001BC5 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3848 00001BC8 50                      	push	eax ; *	; [previous_val]
  3849 00001BC9 80C680                  	add	dh, 80h
  3850 00001BCC 6601D0                  	add	ax, dx
  3851 00001BCF 66D1D8                  	rcr	ax, 1
  3852 00001BD2 5B                      	pop	ebx ; *		
  3853 00001BD3 93                      	xchg	ebx, eax ; bx  = interpolated middle (temporary)
  3854 00001BD4 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  3855 00001BD7 66D1D8                  	rcr	ax, 1
  3856 00001BDA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3857 00001BDD 66AB                    	stosw 		; interpolated sample 1 (L)
  3858 00001BDF 66AB                    	stosw		; interpolated sample 1 (R)
  3859 00001BE1 89D8                    	mov	eax, ebx
  3860 00001BE3 6601D0                  	add	ax, dx	 ;interpolated middle + [next_val]
  3861 00001BE6 66D1D8                  	rcr	ax, 1
  3862 00001BE9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3863 00001BEC 66AB                    	stosw		; interpolated sample 2 (L)
  3864 00001BEE 66AB                    	stosw		; interpolated sample 2 (R)
  3865 00001BF0 C3                      	retn
  3866                                  
  3867                                  interpolating_3_16bit_stereo:
  3868                                  	; 16/11/2023
  3869                                  	; bx = [previous_val_l]
  3870                                  	; ax = [previous_val_r]
  3871                                  	; [next_val_l]
  3872                                  	; dx = [next_val_r]
  3873                                  	; original-interpolated-interpolated
  3874                                  
  3875 00001BF1 93                      	xchg	eax, ebx
  3876 00001BF2 66AB                    	stosw		; original sample (L)
  3877 00001BF4 93                      	xchg	eax, ebx
  3878 00001BF5 66AB                    	stosw		; original sample (R)
  3879 00001BF7 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3880 00001BFA 50                      	push	eax ; *	; [previous_val_r]
  3881 00001BFB 80C780                  	add	bh, 80h
  3882 00001BFE 8005[3A200000]80        	add	byte [next_val_l+1], 80h
  3883 00001C05 66A1[39200000]          	mov	ax, [next_val_l]
  3884 00001C0B 6601D8                  	add	ax, bx	; [previous_val_l]
  3885 00001C0E 66D1D8                  	rcr	ax, 1
  3886 00001C11 93                      	xchg	eax, ebx ; ax = [previous_val_l]	
  3887 00001C12 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  3888 00001C15 66D1D8                  	rcr	ax, 1
  3889 00001C18 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3890 00001C1B 66AB                    	stosw 		; interpolated sample 1 (L)
  3891 00001C1D 58                      	pop	eax  ; *
  3892 00001C1E 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3893 00001C21 52                      	push	edx  ; * ; [next_val_r]
  3894 00001C22 92                      	xchg	eax, edx
  3895 00001C23 6601D0                  	add	ax, dx	; [next_val_r] + [previous_val_r]
  3896 00001C26 66D1D8                  	rcr	ax, 1	; / 2
  3897 00001C29 50                      	push	eax ; ** ; interpolated middle (R)
  3898 00001C2A 6601D0                  	add	ax, dx	; + [previous_val_r]
  3899 00001C2D 66D1D8                  	rcr	ax, 1
  3900 00001C30 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3901 00001C33 66AB                    	stosw 		; interpolated sample 1 (R)
  3902 00001C35 66A1[39200000]          	mov	ax, [next_val_l]
  3903 00001C3B 6601D8                  	add	ax, bx	; + interpolated middle (L)
  3904 00001C3E 66D1D8                  	rcr	ax, 1
  3905 00001C41 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3906 00001C44 66AB                    	stosw 		; interpolated sample 2 (L)
  3907 00001C46 58                      	pop	eax ; **
  3908 00001C47 5A                      	pop	edx ; *	
  3909 00001C48 6601D0                  	add	ax, dx	; interpolated middle + [next_val_r]
  3910 00001C4B 66D1D8                  	rcr	ax, 1	; / 2
  3911 00001C4E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3912 00001C51 66AB                    	stosw 		; interpolated sample 2 (L)
  3913 00001C53 C3                      	retn
  3914                                  
  3915                                  interpolating_2_16bit_mono:
  3916                                  	; 16/11/2023
  3917                                  	; ax = [previous_val]
  3918                                  	; dx = [next_val]
  3919                                  	; original-interpolated
  3920                                  
  3921 00001C54 66AB                    	stosw		; original sample (L)
  3922 00001C56 66AB                    	stosw		; original sample (R)
  3923 00001C58 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3924 00001C5B 80C680                  	add	dh, 80h
  3925 00001C5E 6601D0                  	add	ax, dx
  3926 00001C61 66D1D8                  	rcr	ax, 1
  3927 00001C64 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3928 00001C67 66AB                    	stosw		; interpolated sample (L)
  3929 00001C69 66AB                    	stosw		; interpolated sample (R)
  3930 00001C6B C3                      	retn
  3931                                  
  3932                                  interpolating_2_16bit_stereo:
  3933                                  	; 16/11/2023
  3934                                  	; bx = [previous_val_l]
  3935                                  	; ax = [previous_val_r]
  3936                                  	; [next_val_l]
  3937                                  	; dx = [next_val_r]
  3938                                  	; original-interpolated
  3939                                  
  3940 00001C6C 93                      	xchg	eax, ebx
  3941 00001C6D 66AB                    	stosw		; original sample (L)
  3942 00001C6F 93                      	xchg	eax, ebx
  3943 00001C70 66AB                    	stosw		; original sample (R)
  3944 00001C72 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3945 00001C75 80C680                  	add	dh, 80h
  3946 00001C78 6601D0                  	add	ax, dx	; [previous_val_r] + [next_val_r]
  3947 00001C7B 66D1D8                  	rcr	ax, 1	; / 2
  3948 00001C7E 50                      	push	eax ; *	; interpolated sample (R)
  3949 00001C7F 66A1[39200000]          	mov	ax, [next_val_l]
  3950 00001C85 80C480                  	add	ah, 80h
  3951 00001C88 80C780                  	add	bh, 80h
  3952 00001C8B 6601D8                  	add	ax, bx	; [next_val_l] + [previous_val_l]
  3953 00001C8E 66D1D8                  	rcr	ax, 1	; / 2		
  3954 00001C91 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3955 00001C94 66AB                    	stosw 		; interpolated sample (L)
  3956 00001C96 58                      	pop	eax ; *	
  3957 00001C97 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3958 00001C9A 66AB                    	stosw 		; interpolated sample (R)
  3959 00001C9C C3                      	retn
  3960                                  
  3961                                  interpolating_5_8bit_mono:
  3962                                  	; 17/11/2023
  3963                                  	; al = [previous_val]
  3964                                  	; dl = [next_val]
  3965                                  	; original-interpltd-interpltd-interpltd-interpltd
  3966 00001C9D 88C3                    	mov	bl, al
  3967 00001C9F 2C80                    	sub	al, 80h
  3968 00001CA1 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3969 00001CA5 66AB                    	stosw		; original sample (L)
  3970 00001CA7 66AB                    	stosw		; original sample (R)
  3971 00001CA9 88D8                    	mov	al, bl
  3972 00001CAB 00D0                    	add	al, dl	
  3973 00001CAD D0D8                    	rcr	al, 1
  3974 00001CAF 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3975 00001CB1 00D8                    	add	al, bl  ; [previous_val]
  3976 00001CB3 D0D8                    	rcr	al, 1 	
  3977 00001CB5 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  3978 00001CB7 00D8                    	add	al, bl
  3979 00001CB9 D0D8                    	rcr	al, 1
  3980 00001CBB 2C80                    	sub	al, 80h
  3981 00001CBD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3982 00001CC1 66AB                    	stosw		; interpolated sample 1 (L)
  3983 00001CC3 66AB                    	stosw		; interpolated sample 1 (R)
  3984 00001CC5 88F8                    	mov	al, bh
  3985 00001CC7 00F0                    	add	al, dh
  3986 00001CC9 D0D8                    	rcr	al, 1
  3987 00001CCB 2C80                    	sub	al, 80h
  3988 00001CCD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3989 00001CD1 66AB                    	stosw		; interpolated sample 2 (L)
  3990 00001CD3 66AB                    	stosw		; interpolated sample 2 (R)
  3991 00001CD5 88F8                    	mov	al, bh
  3992 00001CD7 00D0                    	add	al, dl	; [next_val]
  3993 00001CD9 D0D8                    	rcr	al, 1
  3994 00001CDB 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  3995 00001CDD 00F8                    	add	al, bh
  3996 00001CDF D0D8                    	rcr	al, 1
  3997 00001CE1 2C80                    	sub	al, 80h
  3998 00001CE3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3999 00001CE7 66AB                    	stosw		; interpolated sample 3 (L)
  4000 00001CE9 66AB                    	stosw		; interpolated sample 3 (R)
  4001 00001CEB 88F0                    	mov	al, dh
  4002 00001CED 00D0                    	add	al, dl
  4003 00001CEF D0D8                    	rcr	al, 1
  4004 00001CF1 2C80                    	sub	al, 80h
  4005 00001CF3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4006 00001CF7 66AB                    	stosw		; interpolated sample 4 (L)
  4007 00001CF9 66AB                    	stosw		; interpolated sample 4 (R)
  4008 00001CFB C3                      	retn
  4009                                  
  4010                                  interpolating_5_8bit_stereo:
  4011                                  	; 17/11/2023
  4012                                  	; al = [previous_val_l]
  4013                                  	; ah = [previous_val_r]
  4014                                  	; dl = [next_val_l]
  4015                                  	; dh = [next_val_r]	
  4016                                  	; original-interpltd-interpltd-interpltd-interpltd
  4017 00001CFC 89C3                    	mov	ebx, eax
  4018 00001CFE 2C80                    	sub	al, 80h
  4019 00001D00 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4020 00001D04 66AB                    	stosw		; original sample (L)
  4021 00001D06 88F8                    	mov	al, bh
  4022 00001D08 2C80                    	sub	al, 80h
  4023 00001D0A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4024 00001D0E 66AB                    	stosw		; original sample (R)
  4025 00001D10 52                      	push	edx ; *
  4026 00001D11 88D8                    	mov	al, bl
  4027 00001D13 00D0                    	add	al, dl	; [next_val_l]
  4028 00001D15 D0D8                    	rcr	al, 1
  4029 00001D17 50                      	push	eax ; **	; al = interpolated middle (L) (temporary)
  4030 00001D18 00D8                    	add	al, bl	; [previous_val_l]
  4031 00001D1A D0D8                    	rcr	al, 1
  4032 00001D1C 86C3                    	xchg	al, bl	
  4033 00001D1E 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  4034 00001D20 D0D8                    	rcr	al, 1
  4035 00001D22 2C80                    	sub	al, 80h
  4036 00001D24 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4037 00001D28 66AB                    	stosw		; interpolated sample 1 (L)
  4038 00001D2A 88F8                    	mov	al, bh
  4039 00001D2C 00F0                    	add	al, dh	; [next_val_r]
  4040 00001D2E D0D8                    	rcr	al, 1
  4041 00001D30 50                      	push	eax ; *** ; al = interpolated middle (R) (temporary)
  4042 00001D31 00F8                    	add	al, bh	; [previous_val_r]
  4043 00001D33 D0D8                    	rcr	al, 1
  4044 00001D35 86C7                    	xchg	al, bh	
  4045 00001D37 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  4046 00001D39 D0D8                    	rcr	al, 1
  4047 00001D3B 2C80                    	sub	al, 80h
  4048 00001D3D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4049 00001D41 66AB                    	stosw		; interpolated sample 1 (R)
  4050 00001D43 5A                      	pop	edx ; ***
  4051 00001D44 58                      	pop	eax ; **	; al = interpolated middle (L) (temporary)
  4052 00001D45 86C3                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  4053 00001D47 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  4054 00001D49 D0D8                    	rcr	al, 1
  4055 00001D4B 2C80                    	sub	al, 80h
  4056 00001D4D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4057 00001D51 66AB                    	stosw		; interpolated sample 2 (L)	
  4058 00001D53 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  4059 00001D55 86C7                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  4060 00001D57 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  4061 00001D59 D0D8                    	rcr	al, 1
  4062 00001D5B 2C80                    	sub	al, 80h
  4063 00001D5D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4064 00001D61 66AB                    	stosw		; interpolated sample 2 (R)
  4065 00001D63 5A                      	pop	edx ; *
  4066 00001D64 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  4067 00001D66 00D0                    	add	al, dl	; [next_val_l]
  4068 00001D68 D0D8                    	rcr	al, 1
  4069 00001D6A 86C3                    	xchg	al, bl	; al = interpolated middle (R) (temporary)	
  4070 00001D6C 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp) 
  4071 00001D6E D0D8                    	rcr	al, 1
  4072 00001D70 2C80                    	sub	al, 80h
  4073 00001D72 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4074 00001D76 66AB                    	stosw		; interpolated sample 3 (L)
  4075 00001D78 88F8                    	mov	al, bh	
  4076 00001D7A 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4077 00001D7C D0D8                    	rcr	al, 1
  4078 00001D7E 86C7                    	xchg	al, bh	; al = interpolated middle (R)
  4079 00001D80 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4080 00001D82 D0D8                    	rcr	al, 1
  4081 00001D84 2C80                    	sub	al, 80h
  4082 00001D86 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4083 00001D8A 66AB                    	stosw		; interpolated sample 3 (R)
  4084 00001D8C 88D8                    	mov	al, bl
  4085 00001D8E 00D0                    	add	al, dl	; [next_val_l]
  4086 00001D90 D0D8                    	rcr	al, 1
  4087 00001D92 2C80                    	sub	al, 80h
  4088 00001D94 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4089 00001D98 66AB                    	stosw		; interpolated sample 4 (L)
  4090 00001D9A 88F8                    	mov	al, bh
  4091 00001D9C 00F0                    	add	al, dh	; [next_val_r]
  4092 00001D9E D0D8                    	rcr	al, 1
  4093 00001DA0 2C80                    	sub	al, 80h
  4094 00001DA2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4095 00001DA6 66AB                    	stosw		; interpolated sample 4 (R)
  4096 00001DA8 C3                      	retn
  4097                                  
  4098                                  interpolating_4_8bit_mono:
  4099                                  	; 17/11/2023
  4100                                  	; al = [previous_val]
  4101                                  	; dl = [next_val]
  4102                                  	; original-interpolated-interpolated-interpolated
  4103 00001DA9 88C3                    	mov	bl, al
  4104 00001DAB 2C80                    	sub	al, 80h
  4105 00001DAD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4106 00001DB1 66AB                    	stosw		; original sample (L)
  4107 00001DB3 66AB                    	stosw		; original sample (R)
  4108 00001DB5 88D8                    	mov	al, bl
  4109 00001DB7 00D0                    	add	al, dl	
  4110 00001DB9 D0D8                    	rcr	al, 1
  4111 00001DBB 86C3                    	xchg	al, bl  ; al = [previous_val]
  4112 00001DBD 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4113 00001DBF D0D8                    	rcr	al, 1 	
  4114 00001DC1 2C80                    	sub	al, 80h
  4115 00001DC3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4116 00001DC7 66AB                    	stosw		; interpolated sample 1 (L)
  4117 00001DC9 66AB                    	stosw		; interpolated sample 1 (R)
  4118 00001DCB 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4119 00001DCD 2C80                    	sub	al, 80h
  4120 00001DCF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4121 00001DD3 66AB                    	stosw		; interpolated sample 2 (L)
  4122 00001DD5 66AB                    	stosw		; interpolated sample 2 (R)
  4123 00001DD7 88D8                    	mov	al, bl
  4124 00001DD9 00D0                    	add	al, dl	; [next_val]
  4125 00001DDB D0D8                    	rcr	al, 1
  4126 00001DDD 2C80                    	sub	al, 80h
  4127 00001DDF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4128 00001DE3 66AB                    	stosw		; interpolated sample 3 (L)
  4129 00001DE5 66AB                    	stosw		; interpolated sample 3 (R)
  4130 00001DE7 C3                      	retn
  4131                                  
  4132                                  interpolating_4_8bit_stereo:
  4133                                  	; 17/11/2023
  4134                                  	; al = [previous_val_l]
  4135                                  	; ah = [previous_val_r]
  4136                                  	; dl = [next_val_l]
  4137                                  	; dh = [next_val_r]	
  4138                                  	; original-interpolated-interpolated-interpolated
  4139 00001DE8 89C3                    	mov	ebx, eax
  4140 00001DEA 2C80                    	sub	al, 80h
  4141 00001DEC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4142 00001DF0 66AB                    	stosw		; original sample (L)
  4143 00001DF2 88F8                    	mov	al, bh
  4144 00001DF4 2C80                    	sub	al, 80h
  4145 00001DF6 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4146 00001DFA 66AB                    	stosw		; original sample (R)
  4147 00001DFC 88D8                    	mov	al, bl
  4148 00001DFE 00D0                    	add	al, dl	; [next_val_l]
  4149 00001E00 D0D8                    	rcr	al, 1
  4150 00001E02 86C3                    	xchg	al, bl	; al = [previous_val_l]
  4151 00001E04 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4152 00001E06 D0D8                    	rcr	al, 1
  4153 00001E08 2C80                    	sub	al, 80h
  4154 00001E0A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4155 00001E0E 66AB                    	stosw		; interpolated sample 1 (L)
  4156 00001E10 88F8                    	mov	al, bh
  4157 00001E12 00F0                    	add	al, dh	; [next_val_r]
  4158 00001E14 D0D8                    	rcr	al, 1
  4159 00001E16 86C7                    	xchg	al, bh	; al = [previous_val_h]
  4160 00001E18 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4161 00001E1A D0D8                    	rcr	al, 1
  4162 00001E1C 2C80                    	sub	al, 80h
  4163 00001E1E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4164 00001E22 66AB                    	stosw		; interpolated sample 1 (R)
  4165 00001E24 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4166 00001E26 2C80                    	sub	al, 80h
  4167 00001E28 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4168 00001E2C 66AB                    	stosw		; interpolated sample 2 (L)
  4169 00001E2E 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4170 00001E30 2C80                    	sub	al, 80h
  4171 00001E32 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4172 00001E36 66AB                    	stosw		; interpolated sample 2 (L)
  4173 00001E38 88D8                    	mov	al, bl
  4174 00001E3A 00D0                    	add	al, dl	; [next_val_l]
  4175 00001E3C D0D8                    	rcr	al, 1
  4176 00001E3E 2C80                    	sub	al, 80h
  4177 00001E40 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4178 00001E44 66AB                    	stosw		; interpolated sample 3 (L)
  4179 00001E46 88F8                    	mov	al, bh
  4180 00001E48 00F0                    	add	al, dh	; [next_val_r]
  4181 00001E4A D0D8                    	rcr	al, 1
  4182 00001E4C 2C80                    	sub	al, 80h
  4183 00001E4E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4184 00001E52 66AB                    	stosw		; interpolated sample 3 (R)
  4185 00001E54 C3                      	retn
  4186                                  
  4187                                  interpolating_5_16bit_mono:
  4188                                  	; 18/11/2023
  4189                                  	; ax = [previous_val]
  4190                                  	; dx = [next_val]
  4191                                  	; original-interpltd-interpltd-interpltd-interpltd
  4192 00001E55 66AB                    	stosw		; original sample (L)
  4193 00001E57 66AB                    	stosw		; original sample (R)
  4194 00001E59 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4195 00001E5C 89C3                    	mov	ebx, eax ; [previous_val]
  4196 00001E5E 80C680                  	add	dh, 80h
  4197 00001E61 6601D0                  	add	ax, dx
  4198 00001E64 66D1D8                  	rcr	ax, 1
  4199 00001E67 50                      	push	eax ; *	; interpolated middle (temporary)
  4200 00001E68 6601D8                  	add	ax, bx	; interpolated middle + [previous_val] 
  4201 00001E6B 66D1D8                  	rcr	ax, 1
  4202 00001E6E 50                      	push	eax ; **	; interpolated 1st quarter (temporary)
  4203 00001E6F 6601D8                  	add	ax, bx	; 1st quarter + [previous_val]
  4204 00001E72 66D1D8                  	rcr	ax, 1	
  4205 00001E75 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4206 00001E78 66AB                    	stosw 		; interpolated sample 1 (L)
  4207 00001E7A 66AB                    	stosw		; interpolated sample 1 (R)
  4208 00001E7C 58                      	pop	eax ; **	
  4209 00001E7D 5B                      	pop	ebx ; *
  4210 00001E7E 6601D8                  	add	ax, bx	; 1st quarter + middle
  4211 00001E81 66D1D8                  	rcr	ax, 1	; / 2
  4212 00001E84 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again	
  4213 00001E87 66AB                    	stosw		; interpolated sample 2 (L)
  4214 00001E89 66AB                    	stosw		; interpolated sample 2 (R)		
  4215 00001E8B 89D8                    	mov	eax, ebx
  4216 00001E8D 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4217 00001E90 66D1D8                  	rcr	ax, 1
  4218 00001E93 50                      	push	eax ; *	; interpolated 3rd quarter (temporary)
  4219 00001E94 6601D8                  	add	ax, bx	; + interpolated middle
  4220 00001E97 66D1D8                  	rcr	ax, 1
  4221 00001E9A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4222 00001E9D 66AB                    	stosw		; interpolated sample 3 (L)
  4223 00001E9F 66AB                    	stosw		; interpolated sample 3 (R)
  4224 00001EA1 58                      	pop	eax ; *	
  4225 00001EA2 6601D0                  	add	ax, dx	; 3rd quarter + [next_val]
  4226 00001EA5 66D1D8                  	rcr	ax, 1	; / 2
  4227 00001EA8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4228 00001EAB 66AB                    	stosw		; interpolated sample 4 (L)
  4229 00001EAD 66AB                    	stosw		; interpolated sample 4 (R)
  4230 00001EAF C3                      	retn
  4231                                  
  4232                                  interpolating_5_16bit_stereo:
  4233                                  	; 18/11/2023
  4234                                  	; bx = [previous_val_l]
  4235                                  	; ax = [previous_val_r]
  4236                                  	; [next_val_l]
  4237                                  	; [next_val_r]
  4238                                  	; original-interpltd-interpltd-interpltd-interpltd
  4239 00001EB0 51                      	push	ecx ; !
  4240 00001EB1 93                      	xchg	eax, ebx
  4241 00001EB2 66AB                    	stosw		; original sample (L)
  4242 00001EB4 93                      	xchg	eax, ebx
  4243 00001EB5 66AB                    	stosw		; original sample (R)
  4244 00001EB7 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4245 00001EBA 50                      	push	eax ; *	; [previous_val_r]
  4246 00001EBB 80C780                  	add	bh, 80h
  4247 00001EBE 8005[3A200000]80        	add	byte [next_val_l+1], 80h
  4248 00001EC5 66A1[39200000]          	mov	ax, [next_val_l]
  4249 00001ECB 6601D8                  	add	ax, bx	; [previous_val_l]
  4250 00001ECE 66D1D8                  	rcr	ax, 1
  4251 00001ED1 89C1                    	mov	ecx, eax ; interpolated middle (L)
  4252 00001ED3 6601D8                  	add	ax, bx	
  4253 00001ED6 66D1D8                  	rcr	ax, 1
  4254 00001ED9 89C2                    	mov	edx, eax ; interpolated 1st quarter (L)	
  4255 00001EDB 6601D8                  	add	ax, bx	; [previous_val_l]
  4256 00001EDE 66D1D8                  	rcr	ax, 1
  4257 00001EE1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4258 00001EE4 66AB                    	stosw 		; interpolated sample 1 (L)
  4259 00001EE6 89C8                    	mov	eax, ecx
  4260 00001EE8 6601D0                  	add	ax, dx	; middle (L) + 1st quarter (L) 
  4261 00001EEB 66D1D8                  	rcr	ax, 1	; / 2
  4262 00001EEE 89C3                    	mov	ebx, eax  ; interpolated sample 2 (L)
  4263 00001EF0 5A                      	pop	edx ; *	; [previous_val_r]
  4264 00001EF1 89D0                    	mov	eax, edx
  4265 00001EF3 8005[3C200000]80        	add	byte [next_val_r+1], 80h
  4266 00001EFA 660305[3B200000]        	add	ax, [next_val_r]
  4267 00001F01 66D1D8                  	rcr	ax, 1
  4268 00001F04 50                      	push	eax ; *	; interpolated middle (R)
  4269 00001F05 6601D0                  	add	ax, dx
  4270 00001F08 66D1D8                  	rcr	ax, 1
  4271 00001F0B 50                      	push	eax ; ** ; interpolated 1st quarter (R)
  4272 00001F0C 6601D0                  	add	ax, dx	; [previous_val_r]
  4273 00001F0F 66D1D8                  	rcr	ax, 1
  4274 00001F12 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4275 00001F15 66AB                    	stosw 		; interpolated sample 1 (R)
  4276 00001F17 89D8                    	mov	eax, ebx
  4277 00001F19 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4278 00001F1C 66AB                    	stosw 		; interpolated sample 2 (L)
  4279 00001F1E 58                      	pop	eax ; **
  4280 00001F1F 5A                      	pop	edx ; *
  4281 00001F20 6601D0                  	add	ax, dx	; 1st quarter (R) + middle (R)
  4282 00001F23 66D1D8                  	rcr	ax, 1	; / 2
  4283 00001F26 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4284 00001F29 66AB                    	stosw 		; interpolated sample 2 (R)
  4285 00001F2B 89C8                    	mov	eax, ecx
  4286 00001F2D 660305[39200000]        	add	ax, [next_val_l]
  4287 00001F34 66D1D8                  	rcr	ax, 1
  4288 00001F37 50                      	push	eax ; * ; interpolated 3rd quarter (L)
  4289 00001F38 6601C8                  	add	ax, cx	; interpolated middle (L)
  4290 00001F3B 66D1D8                  	rcr	ax, 1
  4291 00001F3E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4292 00001F41 66AB                    	stosw 		; interpolated sample 3 (L)
  4293 00001F43 89D0                    	mov	eax, edx
  4294 00001F45 660305[3B200000]        	add	ax, [next_val_r]
  4295 00001F4C 66D1D8                  	rcr	ax, 1
  4296 00001F4F 50                      	push	eax ; ** ; interpolated 3rd quarter (R)
  4297 00001F50 6601D0                  	add	ax, dx	; interpolated middle (R)
  4298 00001F53 66D1D8                  	rcr	ax, 1
  4299 00001F56 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4300 00001F59 66AB                    	stosw 		; interpolated sample 3 (R)
  4301 00001F5B 5B                      	pop	ebx ; **
  4302 00001F5C 58                      	pop	eax ; *
  4303 00001F5D 660305[39200000]        	add	ax, [next_val_l]
  4304 00001F64 66D1D8                  	rcr	ax, 1
  4305 00001F67 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4306 00001F6A 66AB                    	stosw 		; interpolated sample 4 (L)
  4307 00001F6C 89D8                    	mov	eax, ebx	
  4308 00001F6E 660305[3B200000]        	add	ax, [next_val_r]
  4309 00001F75 66D1D8                  	rcr	ax, 1
  4310 00001F78 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4311 00001F7B 66AB                    	stosw 		; interpolated sample 4 (R)
  4312 00001F7D 59                      	pop	ecx ; !
  4313 00001F7E C3                      	retn
  4314                                  
  4315                                  interpolating_4_16bit_mono:
  4316                                  	; 18/11/2023
  4317                                  	; ax = [previous_val]
  4318                                  	; dx = [next_val]
  4319                                  	; original-interpolated
  4320                                  
  4321 00001F7F 66AB                    	stosw		; original sample (L)
  4322 00001F81 66AB                    	stosw		; original sample (R)
  4323 00001F83 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4324 00001F86 89C3                    	mov	ebx, eax ; [previous_val]
  4325 00001F88 80C680                  	add	dh, 80h
  4326 00001F8B 6601D0                  	add	ax, dx	; [previous_val] + [next_val]
  4327 00001F8E 66D1D8                  	rcr	ax, 1
  4328 00001F91 93                      	xchg	eax, ebx	
  4329 00001F92 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  4330 00001F95 66D1D8                  	rcr	ax, 1
  4331 00001F98 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4332 00001F9B 66AB                    	stosw 		; interpolated sample 1 (L)
  4333 00001F9D 66AB                    	stosw		; interpolated sample 1 (R)
  4334 00001F9F 89D8                    	mov	eax, ebx ; interpolated middle
  4335 00001FA1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4336 00001FA4 66AB                    	stosw 		; interpolated sample 2 (L)
  4337 00001FA6 66AB                    	stosw		; interpolated sample 2 (R)
  4338 00001FA8 89D8                    	mov	eax, ebx
  4339 00001FAA 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4340 00001FAD 66D1D8                  	rcr	ax, 1
  4341 00001FB0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4342 00001FB3 66AB                    	stosw		; interpolated sample 3 (L)
  4343 00001FB5 66AB                    	stosw		; interpolated sample 3 (R)
  4344 00001FB7 C3                      	retn
  4345                                  
  4346                                  interpolating_4_16bit_stereo:
  4347                                  	; 18/11/2023
  4348                                  	; bx = [previous_val_l]
  4349                                  	; ax = [previous_val_r]
  4350                                  	; [next_val_l]
  4351                                  	; [next_val_r]
  4352                                  	; original-interpolated-interpolated-interpolated
  4353 00001FB8 93                      	xchg	eax, ebx
  4354 00001FB9 66AB                    	stosw		; original sample (L)
  4355 00001FBB 93                      	xchg	eax, ebx
  4356 00001FBC 66AB                    	stosw		; original sample (R)
  4357 00001FBE 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4358 00001FC1 89C2                    	mov	edx, eax ; [previous_val_r]
  4359 00001FC3 80C780                  	add	bh, 80h
  4360 00001FC6 8005[3A200000]80        	add	byte [next_val_l+1], 80h
  4361 00001FCD 66A1[39200000]          	mov	ax, [next_val_l]
  4362 00001FD3 6601D8                  	add	ax, bx	; [previous_val_l]
  4363 00001FD6 66D1D8                  	rcr	ax, 1
  4364 00001FD9 93                      	xchg	eax, ebx	
  4365 00001FDA 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  4366 00001FDD 66D1D8                  	rcr	ax, 1
  4367 00001FE0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4368 00001FE3 66AB                    	stosw 		; interpolated sample 1 (L)
  4369 00001FE5 8005[3C200000]80        	add	byte [next_val_r+1], 80h
  4370 00001FEC 89D0                    	mov	eax, edx ; [previous_val_r]
  4371 00001FEE 660305[3B200000]        	add	ax, [next_val_r]
  4372 00001FF5 66D1D8                  	rcr	ax, 1
  4373 00001FF8 92                      	xchg	eax, edx	
  4374 00001FF9 6601D0                  	add	ax, dx	; dx = interpolated middle (R)
  4375 00001FFC 66D1D8                  	rcr	ax, 1
  4376 00001FFF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4377 00002002 66AB                    	stosw 		; interpolated sample 1 (R)
  4378 00002004 89D8                    	mov	eax, ebx
  4379 00002006 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4380 00002009 66AB                    	stosw 		; interpolated sample 2 (L)
  4381 0000200B 89D0                    	mov	eax, edx
  4382 0000200D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4383 00002010 66AB                    	stosw 		; interpolated sample 2 (R)
  4384 00002012 89D8                    	mov	eax, ebx
  4385 00002014 660305[39200000]        	add	ax, [next_val_l]
  4386 0000201B 66D1D8                  	rcr	ax, 1
  4387 0000201E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4388 00002021 66AB                    	stosw 		; interpolated sample 3 (L)
  4389 00002023 89D0                    	mov	eax, edx
  4390 00002025 660305[3B200000]        	add	ax, [next_val_r]
  4391 0000202C 66D1D8                  	rcr	ax, 1
  4392 0000202F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4393 00002032 66AB                    	stosw 		; interpolated sample 3 (R)
  4394 00002034 C3                      	retn
  4395                                  
  4396                                  ; 13/11/2023
  4397                                  previous_val:
  4398 00002035 0000                    previous_val_l: dw 0
  4399 00002037 0000                    previous_val_r: dw 0
  4400                                  next_val:
  4401 00002039 0000                    next_val_l: dw 0
  4402 0000203B 0000                    next_val_r: dw 0
  4403                                  
  4404                                  ; 16/11/2023
  4405 0000203D 00                      faz:	db 0	
  4406                                  	
  4407                                  ; --------------------------------------------------------
  4408                                  ; 27/05/2024 - (TRDOS 386 Kernel) audio.s
  4409                                  ; --------------------------------------------------------
  4410                                  
  4411                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30 ; 19/03/2017
  4412                                  NOT_BIT31 EQU 7FFFFFFFh
  4413                                  
  4414                                  pciFindDevice:
  4415                                  	; 19/11/2023
  4416                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4417                                  	;
  4418                                  	; scan through PCI space looking for a device+vendor ID
  4419                                  	;
  4420                                  	; Entry: EAX=Device+Vendor ID
  4421                                  	;
  4422                                  	; Exit: EAX=PCI address if device found
  4423                                  	;	EDX=Device+Vendor ID
  4424                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  4425                                  	;
  4426                                  	; Destroys: ebx, edi ; 19/11/2023
  4427                                  
  4428                                          ; 19/11/2023
  4429 0000203E 89C3                    	mov	ebx, eax
  4430 00002040 BF00000080              	mov	edi, 80000000h
  4431                                  nextPCIdevice:
  4432 00002045 89F8                    	mov 	eax, edi		; read PCI registers
  4433 00002047 E88C000000              	call	pciRegRead32
  4434                                  	; 19/11/2023
  4435 0000204C 39DA                    	cmp	edx, ebx
  4436 0000204E 7412                    	je	short PCIScanExit	; found
  4437                                  	; 19/11/2023
  4438 00002050 81FF00F8FF80            	cmp	edi, 80FFF800h
  4439 00002056 7308                    	jnb	short pfd_nf		; not found
  4440 00002058 81C700010000            	add	edi, 100h
  4441 0000205E EBE5                    	jmp	short nextPCIdevice
  4442                                  pfd_nf:
  4443 00002060 F9                      	stc
  4444 00002061 C3                      	retn
  4445                                  PCIScanExit:
  4446                                  	;pushf
  4447 00002062 B8FFFFFF7F              	mov	eax, NOT_BIT31 	; 19/03/2017
  4448 00002067 21F8                    	and	eax, edi	; return only bus/dev/fn #
  4449 00002069 C3                      	retn
  4450                                  
  4451                                  pciRegRead:
  4452                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4453                                  	;
  4454                                  	; 8/16/32bit PCI reader
  4455                                  	;
  4456                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4457                                  	;           BIT30 set if 32 bit access requested
  4458                                  	;           BIT29 set if 16 bit access requested
  4459                                  	;           otherwise defaults to 8 bit read
  4460                                  	;
  4461                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  4462                                  	;
  4463                                  	; Note1: this routine is meant to be called via pciRegRead8,
  4464                                  	;	 pciRegread16 or pciRegRead32, listed below.
  4465                                  	;
  4466                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  4467                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  4468                                  	;	 non word aligned reg #
  4469                                  	
  4470 0000206A 53                      	push	ebx
  4471 0000206B 51                      	push	ecx
  4472 0000206C 89C3                            mov     ebx, eax		; save eax, dh
  4473 0000206E 88F1                            mov     cl, dh
  4474                                  
  4475 00002070 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4476 00002075 0D00000080                      or      eax, BIT31		; make a PCI access request
  4477 0000207A 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4478                                  
  4479 0000207C 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4480                                          ;out	dx, eax			; write PCI selector
  4481                                  	; 29/05/2024
  4482 00002080 53                      	push	ebx
  4483 00002081 89C3                    	mov	ebx, eax ; data, dword
  4484 00002083 B405                    	mov	ah, 5 ; write port, dword
  4485                                  	; dx = port number
  4486 00002085 CD34                    	int	34h
  4487 00002087 5B                      	pop	ebx
  4488                                  	
  4489 00002088 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4490 0000208C 88D8                            mov     al, bl
  4491 0000208E 2403                            and     al, 3			; figure out which port to
  4492 00002090 00C2                            add     dl, al			; read to
  4493                                  
  4494 00002092 F7C3000000C0            	test    ebx, PCI32+PCI16
  4495 00002098 750A                            jnz     short _pregr0
  4496                                  
  4497                                  	;in	al, dx			; return 8 bits of data
  4498                                  	; 29/05/2024
  4499 0000209A B400                    	mov	ah, 0 ; read port, byte
  4500                                  	; dx = port number
  4501 0000209C CD34                    	int	34h
  4502                                          
  4503 0000209E 88C2                    	mov	dl, al
  4504 000020A0 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  4505 000020A2 EB17                    	jmp	short _pregr2
  4506                                  _pregr0:	
  4507 000020A4 F7C300000080            	test    ebx, PCI32
  4508 000020AA 7509                            jnz	short _pregr1
  4509                                  
  4510                                  	;in	ax, dx
  4511                                  	; 29/05/2024
  4512 000020AC B402                    	mov	ah, 2 ; read port, word
  4513                                  	; dx = port number
  4514 000020AE CD34                    	int	34h	        
  4515                                  
  4516 000020B0 6689C2                  	mov     dx, ax			; return 16 bits of data
  4517 000020B3 EB06                    	jmp	short _pregr2
  4518                                  _pregr1:
  4519                                  	;in	eax, dx			; return 32 bits of data
  4520                                  	; 29/05/2024
  4521 000020B5 B404                    	mov	ah, 4 ; read port, dword
  4522                                  	; dx = port number
  4523 000020B7 CD34                    	int	34h
  4524                                  
  4525 000020B9 89C2                    	mov	edx, eax
  4526                                  _pregr2:
  4527 000020BB 89D8                    	mov     eax, ebx		; restore eax
  4528 000020BD 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4529 000020C2 59                      	pop	ecx
  4530 000020C3 5B                      	pop	ebx
  4531 000020C4 C3                      	retn
  4532                                  
  4533                                  pciRegRead8:
  4534 000020C5 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  4535 000020CA EB9E                            jmp     short pciRegRead	; call generic PCI access
  4536                                  
  4537                                  pciRegRead16:
  4538 000020CC 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  4539 000020D1 0D00000040                      or      eax, PCI16		; call generic PCI access
  4540 000020D6 EB92                            jmp     short pciRegRead
  4541                                  
  4542                                  pciRegRead32:
  4543 000020D8 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  4544 000020DD 0D00000080                      or      eax, PCI32		; call generic PCI access
  4545 000020E2 EB86                            jmp     pciRegRead
  4546                                  
  4547                                  pciRegWrite:
  4548                                  	; 03/04/2017 ('pci.asm', 29/11/2016)
  4549                                  	;
  4550                                  	; 8/16/32bit PCI writer
  4551                                  	;
  4552                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4553                                  	;           BIT31 set if 32 bit access requested
  4554                                  	;           BIT30 set if 16 bit access requested
  4555                                  	;           otherwise defaults to 8bit read
  4556                                  	;        DL/DX/EDX data to write depending on size
  4557                                  	;
  4558                                  	; Note1: this routine is meant to be called via pciRegWrite8, 
  4559                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  4560                                  	;
  4561                                  	; Note2: don't attempt to write 32bits of data from a non dword
  4562                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  4563                                  	;	 non word aligned reg #
  4564                                  
  4565 000020E4 53                      	push	ebx
  4566 000020E5 51                      	push	ecx
  4567 000020E6 89C3                            mov     ebx, eax		; save eax, edx
  4568 000020E8 89D1                            mov     ecx, edx
  4569 000020EA 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  4570 000020EF 0D00000080                      or      eax, BIT31		; make a PCI access request
  4571 000020F4 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4572                                  
  4573 000020F6 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4574                                  	;out	dx, eax			; write PCI selector
  4575                                  	; 29/05/2024
  4576 000020FA 53                      	push	ebx
  4577 000020FB 89C3                    	mov	ebx, eax ; data, dword
  4578 000020FD B405                    	mov	ah, 5 ; write port, dword
  4579                                  	; dx = port number
  4580 000020FF CD34                    	int	34h
  4581 00002101 5B                      	pop	ebx
  4582                                  	
  4583 00002102 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4584 00002106 88D8                            mov     al, bl
  4585 00002108 2403                            and     al, 3			; figure out which port to
  4586 0000210A 00C2                            add     dl, al			; write to
  4587                                  
  4588 0000210C F7C3000000C0            	test    ebx, PCI32+PCI16
  4589 00002112 7508                            jnz     short _pregw0
  4590 00002114 88C8                    	mov	al, cl 			; put data into al
  4591                                  	;out	dx, al
  4592                                  	; 29/05/2024
  4593                                  	; al = data, byte
  4594 00002116 B401                    	mov	ah, 1 ; write port, byte
  4595                                  	; dx = port number
  4596 00002118 CD34                    	int	34h
  4597                                  
  4598 0000211A EB1F                    	jmp	short _pregw2
  4599                                  _pregw0:
  4600 0000211C F7C300000080            	test    ebx, PCI32
  4601 00002122 750D                            jnz     short _pregw1
  4602 00002124 6689C8                  	mov	ax, cx			; put data into ax
  4603                                  	;out	dx, ax
  4604                                  	; 29/05/2024
  4605 00002127 53                      	push	ebx
  4606 00002128 89C3                    	mov	ebx, eax ; data, word
  4607 0000212A B403                    	mov	ah, 3 ; write port, word
  4608                                  	; dx = port number
  4609 0000212C CD34                    	int	34h
  4610 0000212E 5B                      	pop	ebx
  4611                                  
  4612 0000212F EB0A                    	jmp	short _pregw2
  4613                                  _pregw1:
  4614 00002131 89C8                    	mov	eax, ecx		; put data into eax
  4615                                  	;out	dx, eax
  4616                                  	; 29/05/2024
  4617 00002133 53                      	push	ebx
  4618 00002134 89C3                    	mov	ebx, eax ; data, dword
  4619 00002136 B405                    	mov	ah, 5 ; write port, dword
  4620                                  	; dx = port number
  4621 00002138 CD34                    	int	34h
  4622 0000213A 5B                      	pop	ebx
  4623                                  _pregw2:
  4624 0000213B 89D8                            mov     eax, ebx		; restore eax
  4625 0000213D 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4626 00002142 89CA                            mov     edx, ecx		; restore dx
  4627 00002144 59                      	pop	ecx
  4628 00002145 5B                      	pop	ebx
  4629 00002146 C3                      	retn
  4630                                  
  4631                                  pciRegWrite8:
  4632 00002147 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  4633 0000214C EB96                            jmp	short pciRegWrite	; call generic PCI access
  4634                                  
  4635                                  pciRegWrite16:
  4636 0000214E 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  4637 00002153 0D00000040                      or      eax, PCI16		; call generic PCI access
  4638 00002158 EB8A                            jmp	short pciRegWrite
  4639                                  
  4640                                  pciRegWrite32:
  4641 0000215A 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  4642 0000215F 0D00000080                      or      eax, PCI32		; call generic PCI access
  4643 00002164 E97BFFFFFF                      jmp	pciRegWrite
  4644                                  
  4645                                  ; --------------------------------------------------------
  4646                                  ; 19/05/2024 - (playwav4.asm) ac97_vra.asm
  4647                                  ; --------------------------------------------------------
  4648                                  
  4649                                  	; 13/11/2023
  4650                                  
  4651                                  ;VRA:	db 1
  4652                                  
  4653                                  codecConfig:
  4654                                  	; 29/05/2024 (playwav7.s modification)
  4655                                  	; 19/05/2024
  4656                                  	; 19/11/2023
  4657                                  	; 15/11/2023
  4658                                  	; 04/11/2023
  4659                                  	; 17/02/2017 
  4660                                  	; 07/11/2016 (Erdogan Tan)
  4661                                  
  4662                                  	;AC97_EA_VRA equ 1
  4663                                  	AC97_EA_VRA equ BIT0
  4664                                  
  4665                                  	; 04/11/2023
  4666                                  init_ac97_controller:
  4667 00002169 A1[9A280000]            	mov	eax, [bus_dev_fn]
  4668 0000216E B004                    	mov	al, PCI_CMD_REG
  4669 00002170 E857FFFFFF              	call	pciRegRead16		; read PCI command register
  4670 00002175 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4671 00002178 E8D1FFFFFF              	call	pciRegWrite16
  4672                                  
  4673                                  	;call	delay_100ms
  4674                                  
  4675                                  	; 19/05/2024
  4676                                  	; ('PLAYMOD3.ASM', Erdogan Tan, 18/05/2024)
  4677                                  
  4678                                  init_ac97_codec:
  4679                                  	; 18/11/2023
  4680 0000217D BD28000000              	mov	ebp, 40
  4681                                  	; 29/05/2024
  4682                                  	;mov	ebp, 1000
  4683                                  _initc_1:
  4684                                  	; 29/05/2024
  4685 00002182 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  4686 00002186 660315[A0280000]        	add	dx, [NABMBAR]
  4687                                  	;in	eax, dx
  4688 0000218D B404                    	mov	ah, 4	; read port, dword
  4689 0000218F CD34                    	int	34h
  4690                                  
  4691                                  	; 19/05/2024
  4692 00002191 E895020000              	call	delay1_4ms
  4693                                  
  4694 00002196 83F8FF                  	cmp	eax, 0FFFFFFFFh ; -1
  4695 00002199 750A                    	jne	short _initc_3
  4696                                  _initc_2:
  4697 0000219B 4D                      	dec	ebp
  4698 0000219C 7425                    	jz	short _ac97_codec_ready
  4699                                  
  4700 0000219E E879020000              	call	delay_100ms
  4701 000021A3 EBDD                    	jmp	short _initc_1
  4702                                  _initc_3:
  4703 000021A5 A900030010              	test	eax, CTRL_ST_CREADY
  4704 000021AA 7517                    	jnz	short _ac97_codec_ready
  4705                                  
  4706                                  	; 30/05/2024
  4707 000021AC 803D[07250000]01        	cmp	byte [reset], 1
  4708 000021B3 73E6                    	jnb	short _initc_2
  4709                                  
  4710 000021B5 E886010000              	call	reset_ac97_codec
  4711                                  	; 30/05/2024
  4712 000021BA C605[07250000]01        	mov	byte [reset], 1
  4713                                  	; 19/05/2024
  4714 000021C1 EBD8                    	jmp	short _initc_2
  4715                                  
  4716                                  _ac97_codec_ready:
  4717 000021C3 668B15[9E280000]        	mov	dx, [NAMBAR]
  4718                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  4719                                  	;out	dx, ax
  4720                                  	; 29/05/2024
  4721 000021CA 53                      	push	ebx
  4722 000021CB 89C3                    	mov	ebx, eax ; bx = data, word
  4723 000021CD B403                    	mov	ah, 3	; write port, word
  4724 000021CF CD34                    	int	34h
  4725 000021D1 5B                      	pop	ebx
  4726                                  
  4727                                  	; 29/05/2024
  4728 000021D2 E845020000              	call	delay_100ms
  4729                                  
  4730                                  	; 19/11/2023
  4731 000021D7 09ED                    	or	ebp, ebp
  4732 000021D9 7539                    	jnz	short _ac97_codec_init_ok
  4733                                  
  4734 000021DB 31C0                    	xor	eax, eax ; 0
  4735 000021DD 668B15[9E280000]        	mov	dx, [NAMBAR]
  4736 000021E4 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4737                                  	;out	dx, ax
  4738                                  	; 29/05/2024
  4739 000021E8 53                      	push	ebx
  4740 000021E9 89C3                    	mov	ebx, eax
  4741 000021EB B403                    	mov	ah, 3	; write port, word
  4742 000021ED CD34                    	int	34h
  4743 000021EF 5B                      	pop	ebx
  4744                                  	
  4745                                  	; 19/11/2023
  4746                                  	; wait for 1 second
  4747                                  	; 19/05/2024
  4748 000021F0 B9E8030000              	mov	ecx, 1000 ; 1000*4*0.25ms = 1s
  4749                                  	;;mov	ecx, 10
  4750                                  	; 30/05/2024
  4751                                  	;mov	ecx, 40
  4752                                  _ac97_codec_rloop:
  4753                                  	;call	delay_100ms
  4754                                  
  4755                                  	;mov	dx, [NAMBAR]
  4756                                  	;add	dx, CODEC_REG_POWERDOWN
  4757                                  	;in	ax, dx
  4758                                  	; 29/05/2024
  4759                                  	;in	eax, dx
  4760 000021F5 668B15[9E280000]        	mov	dx, [NAMBAR]
  4761 000021FC 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4762 00002200 B401                    	mov	ah, 1	; read port, word
  4763 00002202 CD34                    	int	34h
  4764                                  
  4765 00002204 E822020000              	call	delay1_4ms
  4766                                  	
  4767 00002209 6683E00F                	and	ax, 0Fh
  4768 0000220D 3C0F                    	cmp	al, 0Fh
  4769 0000220F 7403                    	je	short _ac97_codec_init_ok
  4770 00002211 E2E2                    	loop	_ac97_codec_rloop 
  4771                                  
  4772                                  init_ac97_codec_err1:
  4773                                  	;stc	; cf = 1 ; 19/05/2024
  4774                                  init_ac97_codec_err2:
  4775 00002213 C3                      	retn
  4776                                  
  4777                                  _ac97_codec_init_ok:
  4778 00002214 E8C8000000              	call 	reset_ac97_controller
  4779                                  
  4780                                  	; 30/05/2024
  4781                                  	; 19/05/2024
  4782                                  	;call	delay_100ms
  4783                                  
  4784                                  	; 30/05/2024
  4785 00002219 E80D020000              	call	delay1_4ms
  4786 0000221E E808020000              	call	delay1_4ms
  4787 00002223 E803020000              	call	delay1_4ms
  4788 00002228 E8FE010000              	call	delay1_4ms
  4789                                  
  4790                                  setup_ac97_codec:
  4791                                  	; 12/11/2023
  4792 0000222D 66813D[1E280000]80-     	cmp	word [sample_rate], 48000
  4792 00002235 BB                 
  4793 00002236 747A                    	je	short skip_rate
  4794                                  	
  4795                                  	; 30/05/2024
  4796                                  	; 29/05/2024
  4797 00002238 803D[25280000]00        	cmp	byte [VRA], 0
  4798 0000223F 7671                    	jna	short skip_rate
  4799                                  
  4800                                  	; 11/11/2023
  4801 00002241 668B15[9E280000]        	mov	dx, [NAMBAR]
  4802 00002248 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4803                                  	;in	ax, dx
  4804                                  	; 29/05/2024
  4805 0000224C B402                    	mov	ah, 2 ; read port, word
  4806 0000224E CD34                    	int	34h
  4807                                  
  4808                                  	; 30/05/2024
  4809                                  	; 19/05/2024
  4810 00002250 E8D6010000              	call	delay1_4ms
  4811                                  	
  4812 00002255 24FD                    	and	al, ~BIT1 ; Clear DRA
  4813 00002257 0C01                    	or	al, AC97_EA_VRA ; 1 ; 04/11/2023
  4814                                  	;out	dx, ax			; Enable variable rate audio
  4815                                  	; 29/05/2024
  4816 00002259 53                      	push	ebx
  4817 0000225A 89C3                    	mov	ebx, eax
  4818                                  	;
  4819                                  	; 30/05/2024
  4820 0000225C 668B15[9E280000]        	mov	dx, [NAMBAR]
  4821 00002263 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4822                                  	;
  4823 00002267 B403                    	mov	ah, 3 ; write port, word
  4824 00002269 CD34                    	int	34h
  4825 0000226B 5B                      	pop	ebx
  4826                                  
  4827                                  	;mov	cx, 10
  4828 0000226C B90A000000              	mov	ecx, 10 ; 30/05/2024
  4829                                  check_vra_loop:
  4830                                  	; 30/05/2024
  4831                                  	;call	delay_100ms
  4832                                  	; 30/05/2024
  4833 00002271 E8B5010000              	call	delay1_4ms
  4834                                  
  4835                                  	; 11/11/2023
  4836                                  	;in	ax, dx
  4837                                  	; 29/05/2024
  4838 00002276 668B15[9E280000]        	mov	dx, [NAMBAR]
  4839 0000227D 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4840 00002281 B402                    	mov	ah, 2 ; read port, word
  4841 00002283 CD34                    	int	34h
  4842                                  
  4843 00002285 A801                    	test	al, AC97_EA_VRA ; 1
  4844 00002287 750B                    	jnz	short set_rate
  4845                                  
  4846                                  	; 11/11/2023
  4847 00002289 E2E6                    	loop	check_vra_loop
  4848                                  
  4849                                  ;vra_not_supported:	; 19/05/2024
  4850 0000228B C605[25280000]00        	mov	byte [VRA], 0
  4851 00002292 EB1E                    	jmp	short skip_rate
  4852                                  
  4853                                  set_rate:
  4854 00002294 66A1[1E280000]          	mov	ax, [sample_rate] ; 17/02/2017 (Erdogan Tan)
  4855                                  
  4856 0000229A 668B15[9E280000]        	mov    	dx, [NAMBAR]               	
  4857 000022A1 6683C22C                	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch  	  
  4858                                  	;out	dx, ax 			; PCM Front/Center Output Sample Rate
  4859                                  	; 29/05/2024
  4860 000022A5 53                      	push	ebx
  4861 000022A6 89C3                    	mov	ebx, eax  ; bx = data, word
  4862 000022A8 B403                    	mov	ah, 3 ; write port, word
  4863 000022AA CD34                    	int	34h
  4864 000022AC 5B                      	pop	ebx
  4865                                  
  4866                                  	; 29/05/2024
  4867                                  	;call	delay_100ms
  4868                                  	; 30/05/2024
  4869 000022AD E879010000              	call	delay1_4ms
  4870                                  
  4871                                  	; 12/11/2023
  4872                                  skip_rate:
  4873 000022B2 66B80202                	mov	ax, 0202h
  4874 000022B6 668B15[9E280000]          	mov	dx, [NAMBAR]
  4875 000022BD 6683C202                  	add	dx, CODEC_MASTER_VOL_REG	;02h 
  4876                                  	;out	dx, ax
  4877                                  	; 29/05/2024
  4878 000022C1 53                      	push	ebx
  4879 000022C2 89C3                    	mov	ebx, eax  ; bx = data, word
  4880 000022C4 B403                    	mov	ah, 3 ; write port, word
  4881 000022C6 CD34                    	int	34h
  4882 000022C8 5B                      	pop	ebx
  4883                                  
  4884                                  	; 29/05/2024
  4885                                  	;call	delay1_4ms
  4886                                  	;call	delay1_4ms
  4887                                  	;call	delay1_4ms
  4888                                  	;call	delay1_4ms
  4889                                  
  4890 000022C9 66B80202                	mov	ax, 0202h
  4891 000022CD 668B15[9E280000]          	mov	dx, [NAMBAR]
  4892 000022D4 6683C218                  	add	dx, CODEC_PCM_OUT_REG		;18h 
  4893                                    	;out	dx, ax
  4894                                  	; 29/05/2024
  4895 000022D8 53                      	push	ebx
  4896 000022D9 89C3                    	mov	ebx, eax  ; bx = data, word
  4897 000022DB B403                    	mov	ah, 3 ; write port, word
  4898 000022DD CD34                    	int	34h
  4899 000022DF 5B                      	pop	ebx
  4900                                  
  4901                                   	; 29/05/2024
  4902                                  	;call	delay1_4ms
  4903                                  	;call	delay1_4ms
  4904                                  	;call	delay1_4ms
  4905                                  	;call	delay1_4ms
  4906                                  
  4907                                  	; 19/05/2024
  4908                                  	;clc
  4909                                  
  4910 000022E0 C3                              retn
  4911                                  
  4912                                  reset_ac97_controller:
  4913                                  	; 29/05/2024 (TRDOS 386)
  4914                                  	; 19/05/2024
  4915                                  	; 11/11/2023
  4916                                  	; 10/06/2017
  4917                                  	; 29/05/2017
  4918                                  	; 28/05/2017
  4919                                  	; reset AC97 audio controller registers
  4920 000022E1 31C0                    	xor	eax, eax
  4921 000022E3 66BA0B00                        mov	dx, PI_CR_REG
  4922 000022E7 660315[A0280000]        	add	dx, [NABMBAR]
  4923                                  	;out	dx, al
  4924                                  	; 29/05/2024
  4925                                  	; al = data, byte
  4926 000022EE B401                    	mov	ah, 1 ; write port, byte
  4927 000022F0 CD34                    	int	34h
  4928                                  
  4929                                  	; 19/05/2024
  4930                                  	;call	delay1_4ms
  4931                                  
  4932 000022F2 66BA1B00                        mov     dx, PO_CR_REG
  4933 000022F6 660315[A0280000]        	add	dx, [NABMBAR]
  4934                                  	;out	dx, al
  4935                                  	; 29/05/2024
  4936                                  	; al = data, byte
  4937 000022FD B401                    	mov	ah, 1 ; write port, byte
  4938 000022FF CD34                    	int	34h
  4939                                  
  4940                                  	; 19/05/2024
  4941                                  	;call	delay1_4ms
  4942                                  
  4943 00002301 66BA2B00                        mov     dx, MC_CR_REG
  4944 00002305 660315[A0280000]        	add	dx, [NABMBAR]
  4945                                  	;out	dx, al
  4946                                  	; 29/05/2024
  4947                                  	; al = data, byte
  4948 0000230C B401                    	mov	ah, 1 ; write port, byte
  4949 0000230E CD34                    	int	34h
  4950                                  
  4951                                  	; 19/05/2024
  4952                                  	;call	delay1_4ms
  4953                                  
  4954 00002310 B002                            mov	al, RR
  4955 00002312 66BA0B00                        mov	dx, PI_CR_REG
  4956 00002316 660315[A0280000]        	add	dx, [NABMBAR]
  4957                                  	;out	dx, al
  4958                                  	; 29/05/2024
  4959                                  	; al = data, byte
  4960 0000231D B401                    	mov	ah, 1 ; write port, byte
  4961 0000231F CD34                    	int	34h
  4962                                  
  4963                                  	; 19/05/2024
  4964                                  	;call	delay1_4ms
  4965                                  
  4966 00002321 66BA1B00                        mov	dx, PO_CR_REG
  4967 00002325 660315[A0280000]        	add	dx, [NABMBAR]
  4968                                  	;out	dx, al
  4969                                  	; 29/05/2024
  4970                                  	; al = data, byte
  4971 0000232C B401                    	mov	ah, 1 ; write port, byte
  4972 0000232E CD34                    	int	34h
  4973                                  
  4974                                  	; 19/05/2024
  4975                                  	;call	delay1_4ms
  4976                                  
  4977 00002330 66BA2B00                        mov	dx, MC_CR_REG
  4978 00002334 660315[A0280000]        	add	dx, [NABMBAR]
  4979                                  	;out	dx, al
  4980                                  	; 29/05/2024
  4981                                  	; al = data, byte
  4982 0000233B B401                    	mov	ah, 1 ; write port, byte
  4983 0000233D CD34                    	int	34h
  4984                                  
  4985                                  	; 19/05/2024
  4986                                  	;call	delay1_4ms
  4987                                  
  4988 0000233F C3                      	retn
  4989                                  
  4990                                  reset_ac97_codec:
  4991                                  	; 29/05/2024 (TRDOS 386)
  4992                                  	; 11/11/2023
  4993                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  4994 00002340 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  4995 00002344 660315[A0280000]        	add	dx, [NABMBAR]
  4996                                  	;in	eax, dx
  4997                                  	; 29/05/2024
  4998 0000234B B404                    	mov	ah, 4 ; read port, dword
  4999 0000234D CD34                    	int	34h
  5000                                  
  5001                                  	;test	eax, 2
  5002                                  	; 06/08/2022
  5003 0000234F A802                    	test	al, 2
  5004 00002351 7407                    	jz	short _r_ac97codec_cold	
  5005                                  
  5006 00002353 E80F000000              	call	warm_ac97codec_reset
  5007 00002358 7308                    	jnc	short _r_ac97codec_ok
  5008                                  _r_ac97codec_cold:
  5009 0000235A E845000000                      call	cold_ac97codec_reset
  5010 0000235F 7301                            jnc	short _r_ac97codec_ok
  5011                                  	
  5012                                  	; 16/04/2017
  5013                                          ;xor	eax, eax	; timeout error
  5014                                         	;stc
  5015 00002361 C3                      	retn
  5016                                  
  5017                                  _r_ac97codec_ok:
  5018 00002362 31C0                            xor     eax, eax
  5019                                          ;mov	al, VIA_ACLINK_C00_READY ; 1
  5020 00002364 FEC0                            inc	al
  5021 00002366 C3                      	retn
  5022                                  
  5023                                  warm_ac97codec_reset:
  5024                                  	; 29/05/2024 (TRDOS 386)
  5025                                  	; 11/11/2023
  5026                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5027                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5028 00002367 B806000000              	mov	eax, 6
  5029 0000236C 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5030 00002370 660315[A0280000]        	add	dx, [NABMBAR]
  5031                                  	;out	dx, eax
  5032                                  	; 29/05/2024
  5033 00002377 53                      	push	ebx
  5034 00002378 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5035 0000237A B405                    	mov	ah, 5 ; write port, dword
  5036 0000237C CD34                    	int	34h
  5037 0000237E 5B                      	pop	ebx
  5038                                  
  5039                                  	; 30/05/2024
  5040 0000237F B90A000000              	mov	ecx, 10	; total 1s
  5041                                  	; 29/05/2024
  5042                                  	;mov	ecx, 4000
  5043                                  _warm_ac97c_rst_wait:
  5044                                  	; 30/05/2024
  5045 00002384 E893000000              	call	delay_100ms
  5046                                  
  5047 00002389 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5048 0000238D 660315[A0280000]        	add	dx, [NABMBAR]
  5049                                  	;in	eax, dx
  5050                                  	; 29/05/2024
  5051 00002394 B404                    	mov	ah, 4 ; read port, dword
  5052 00002396 CD34                    	int	34h
  5053                                  
  5054 00002398 A900030010              	test	eax, CTRL_ST_CREADY
  5055 0000239D 7504                    	jnz	short _warm_ac97c_rst_ok
  5056                                  
  5057 0000239F 49                      	dec	ecx
  5058 000023A0 75E2                    	jnz	short _warm_ac97c_rst_wait
  5059                                  
  5060                                  _warm_ac97c_rst_fail:
  5061 000023A2 F9                              stc
  5062                                  _warm_ac97c_rst_ok:
  5063 000023A3 C3                      	retn
  5064                                  
  5065                                  cold_ac97codec_reset:
  5066                                  	; 11/11/2023
  5067                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5068                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5069 000023A4 B802000000                      mov	eax, 2
  5070 000023A9 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5071 000023AD 660315[A0280000]        	add	dx, [NABMBAR]
  5072                                  	;out	dx, eax
  5073                                  	; 29/05/2024
  5074 000023B4 53                      	push	ebx
  5075 000023B5 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5076 000023B7 B405                    	mov	ah, 5 ; write port, dword
  5077 000023B9 CD34                    	int	34h
  5078 000023BB 5B                      	pop	ebx
  5079                                  
  5080                                  	; 30/05/2024
  5081 000023BC E85B000000              	call	delay_100ms 	; wait 100 ms
  5082 000023C1 E856000000              	call	delay_100ms 	; wait 100 ms
  5083 000023C6 E851000000              	call	delay_100ms 	; wait 100 ms
  5084 000023CB E84C000000              	call	delay_100ms 	; wait 100 ms
  5085                                  
  5086                                  	; 30/05/2024
  5087 000023D0 B910000000              	mov	ecx, 16	; total 20*100 ms = 2s
  5088                                  	; 29/05/2024
  5089                                  	;mov	ecx, 16000
  5090                                  _cold_ac97c_rst_wait:
  5091 000023D5 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5092 000023D9 660315[A0280000]        	add	dx, [NABMBAR]
  5093                                  	;in	eax, dx
  5094                                  	; 29/05/2024
  5095 000023E0 B404                    	mov	ah, 4 ; read port, dword
  5096 000023E2 CD34                    	int	34h
  5097                                  
  5098 000023E4 A900030010              	test	eax, CTRL_ST_CREADY
  5099 000023E9 7509                    	jnz	short _cold_ac97c_rst_ok
  5100                                  
  5101                                  	; 30/05/2024
  5102                                  	; 29/05/2024
  5103 000023EB E82C000000              	call	delay_100ms
  5104                                  
  5105 000023F0 49                      	dec	ecx
  5106 000023F1 75E2                    	jnz	short _cold_ac97c_rst_wait
  5107                                  
  5108                                  _cold_ac97c_rst_fail:
  5109 000023F3 F9                              stc
  5110                                  _cold_ac97c_rst_ok:
  5111 000023F4 C3                      	retn
  5112                                  
  5113                                  ; 30/05/2024
  5114                                  %if 1
  5115                                  check_vra:
  5116                                  	; 29/05/2024
  5117 000023F5 C605[25280000]01        	mov	byte [VRA], 1
  5118                                  
  5119                                  	; 29/05/2024 - audio.s (TRDOS 386 Kernel) - 27/05/2024
  5120                                  	; 24/05/2024
  5121                                  	; 23/05/2024
  5122 000023FC 668B15[9E280000]        	mov	dx, [NAMBAR]
  5123 00002403 6683C228                	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5124                                  	;in	ax, dx
  5125                                  	; 29/05/2024
  5126 00002407 B402                    	mov	ah, 2 ; read port, word
  5127 00002409 CD34                    	int	34h
  5128                                  
  5129                                  	; 30/05/2024
  5130                                  	; 23/05/2024
  5131 0000240B E81B000000              	call	delay1_4ms
  5132                                  
  5133                                  	; 29/05/2024
  5134 00002410 A801                    	test	al, BIT0
  5135                                  	;test	al, 1 ; BIT0 ; Variable Rate Audio bit
  5136 00002412 7507                    	jnz	short check_vra_ok
  5137                                  
  5138                                  vra_not_supported:
  5139                                  	; 13/11/2023
  5140 00002414 C605[25280000]00        	mov	byte [VRA], 0
  5141                                  check_vra_ok:
  5142 0000241B C3                      	retn
  5143                                  %endif
  5144                                  
  5145                                  ; --------------------------------------------------------
  5146                                  
  5147                                  PORTB		EQU 061h
  5148                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5149                                  
  5150                                  delay_100ms:
  5151 0000241C 51                      	push	ecx
  5152 0000241D B990010000              	mov	ecx, 400  ; 400*0.25ms
  5153                                  _delay_x_ms:
  5154 00002422 E804000000              	call	delay1_4ms
  5155 00002427 E2F9                            loop	_delay_x_ms
  5156 00002429 59                      	pop	ecx
  5157 0000242A C3                      	retn
  5158                                  
  5159                                  delay1_4ms:
  5160                                  	; 30/05/2024 (TRDOS 386)
  5161 0000242B 50                              push    eax 
  5162 0000242C 51                              push    ecx
  5163 0000242D 53                      	push	ebx
  5164 0000242E 52                      	push	edx
  5165 0000242F B910000000                      mov     ecx, 16			; close enough.
  5166                                  	;in	al, PORTB
  5167                                  	; 30/05/2024
  5168 00002434 66BA6100                	mov	dx, PORTB
  5169 00002438 B400                    	mov	ah, 0  ; read port, byte
  5170 0000243A CD34                    	int	34h
  5171                                  
  5172 0000243C 2410                    	and	al, REFRESH_STATUS
  5173                                  	;mov	ah, al			; Start toggle state
  5174 0000243E 88C3                    	mov	bl, al
  5175 00002440 09C9                    	or	ecx, ecx
  5176 00002442 7401                    	jz	short _d4ms1
  5177 00002444 41                      	inc	ecx			; Throwaway first toggle
  5178                                  _d4ms1:	
  5179                                  	;in	al, PORTB		; Read system control port
  5180                                  	; 30/05/2024
  5181 00002445 66BA6100                	mov	dx, PORTB
  5182 00002449 B400                    	mov	ah, 0  ; read port, byte
  5183 0000244B CD34                    	int	34h
  5184                                  
  5185 0000244D 2410                    	and	al, REFRESH_STATUS	; Refresh toggles 15.085 microseconds
  5186                                  	;cmp	ah, al
  5187 0000244F 38C3                    	cmp	bl, al
  5188 00002451 74F2                    	je	short _d4ms1		; Wait for state change
  5189                                  
  5190                                  	;mov	ah, al			; Update with new state
  5191 00002453 88C3                    	mov	bl, al
  5192 00002455 49                      	dec	ecx
  5193 00002456 75ED                    	jnz	short _d4ms1
  5194                                  
  5195 00002458 5A                      	pop	edx
  5196 00002459 5B                              pop	ebx
  5197 0000245A 59                      	pop	ecx
  5198 0000245B 58                              pop	eax
  5199 0000245C C3                              retn
  5200                                  
  5201                                  ; --------------------------------------------------------
  5202                                  ; 19/05/2024 - (playwav4.asm) ich_wav4.asm
  5203                                  ; --------------------------------------------------------
  5204                                  
  5205                                  check4keyboardstop:
  5206                                  	; 29/05/2024 (TRDOS 386)
  5207                                  	; 19/05/2024
  5208                                  	; 08/11/2023
  5209                                  	; 06/11/2023
  5210                                  	; 04/11/2023
  5211 0000245D B401                    	mov	ah, 1
  5212                                  	;int	16h
  5213 0000245F CD32                    	int	32h	; TRDOS 386
  5214                                  	;clc
  5215 00002461 743E                    	jz	short _cksr
  5216                                  
  5217 00002463 30E4                    	xor	ah, ah
  5218                                  	;int	16h
  5219 00002465 CD32                    	int	32h	; TRDOS 386
  5220                                  
  5221                                  	;;;
  5222                                  	; 19/05/2024 (change PCM out volume)
  5223 00002467 3C2B                    	cmp	al, '+'
  5224 00002469 750D                    	jne	short p_1
  5225                                  	
  5226 0000246B A0[02250000]            	mov	al, [volume]
  5227 00002470 3C00                    	cmp	al, 0
  5228 00002472 762E                    	jna	short p_3
  5229 00002474 FEC8                    	dec	al
  5230 00002476 EB0F                    	jmp	short p_2
  5231                                  p_1:
  5232 00002478 3C2D                    	cmp	al, '-'
  5233 0000247A 7527                    	jne	short p_4
  5234                                  
  5235 0000247C A0[02250000]            	mov	al, [volume]
  5236 00002481 3C1F                    	cmp	al, 31
  5237 00002483 731D                    	jnb	short p_3
  5238 00002485 FEC0                    	inc	al
  5239                                  p_2:
  5240 00002487 A2[02250000]            	mov	[volume], al
  5241 0000248C 88C4                    	mov	ah, al
  5242 0000248E 668B15[9E280000]        	mov     dx, [NAMBAR]
  5243                                    	;add    dx, CODEC_MASTER_VOL_REG
  5244 00002495 6683C218                	add	dx, CODEC_PCM_OUT_REG
  5245                                  	;out	dx, ax
  5246                                  	; 29/05/2024
  5247 00002499 53                      	push	ebx
  5248 0000249A 89C3                    	mov	ebx, eax ; bx = data, word
  5249 0000249C B403                    	mov	ah, 3 ; write port, word
  5250 0000249E CD34                    	int	34h
  5251 000024A0 5B                      	pop	ebx
  5252                                  
  5253                                  	;call	delay1_4ms
  5254                                          ;call	delay1_4ms
  5255                                          ;call	delay1_4ms
  5256                                          ;call	delay1_4ms
  5257                                  _cksr:		; 19/05/2024
  5258 000024A1 F8                      	clc
  5259                                  p_3:
  5260 000024A2 C3                      	retn
  5261                                  p_4:
  5262                                  	;;;
  5263                                  ;_cskr:	
  5264 000024A3 F9                      	stc
  5265 000024A4 C3                      	retn
  5266                                  
  5267                                  ; returns AL = current index value
  5268                                  getCurrentIndex:
  5269                                  	; 29/05/2024 (TRDOS 386)
  5270                                  	; 08/11/2023
  5271 000024A5 668B15[A0280000]        	mov	dx, [NABMBAR]
  5272 000024AC 6683C214                	add	dx, PO_CIV_REG
  5273                                  	;in	al, dx
  5274                                  	; 29/05/2024
  5275 000024B0 B400                    	mov	ah, 0 ; read port, byte
  5276 000024B2 CD34                    	int	34h
  5277                                  uLVI2:	;	06/11/2023
  5278 000024B4 C3                      	retn
  5279                                  
  5280                                  updateLVI:
  5281                                  	; 29/05/2024 (TRDOS 386)
  5282                                  	; 08/11/2023
  5283                                  	; 07/11/2023
  5284                                  	; 06/11/2023
  5285 000024B5 668B15[A0280000]        	mov	dx, [NABMBAR]
  5286 000024BC 6683C214                	add	dx, PO_CIV_REG
  5287                                  	; (Current Index Value and Last Valid Index value)
  5288                                  	;in	ax, dx
  5289                                  	; 29/05/2024
  5290 000024C0 B402                    	mov	ah, 2 ; read port, word
  5291 000024C2 CD34                    	int	34h
  5292                                  
  5293 000024C4 38E0                    	cmp	al, ah ; is current index = last index ?
  5294 000024C6 75EC                    	jne	short uLVI2
  5295                                  
  5296                                  	; 08/11/2023	
  5297 000024C8 E8D8FFFFFF              	call	getCurrentIndex
  5298                                   
  5299 000024CD F605[24280000]01        	test	byte [flags], ENDOFFILE
  5300                                  	;jnz	short uLVI1
  5301 000024D4 7418                    	jz	short uLVI0  ; 08/11/2023
  5302                                  
  5303                                  	; 08/11/2023
  5304 000024D6 50                      	push	eax	; 29/05/2024 (32 bit)
  5305 000024D7 668B15[A0280000]        	mov	dx, [NABMBAR]
  5306 000024DE 6683C216                	add	dx, PO_SR_REG  ; PCM out status register
  5307                                  	;in	ax, dx
  5308                                  	; 29/05/2024
  5309 000024E2 B402                    	mov	ah, 2 ; read port, word
  5310 000024E4 CD34                    	int	34h
  5311                                  
  5312 000024E6 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5313                                  		      ; (has been processed)
  5314                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5315 000024E8 58                      	pop	eax
  5316 000024E9 7407                    	jz	short uLVI1
  5317                                  uLVI3:
  5318 000024EB 31C0                    	xor	eax, eax
  5319                                  	; zf = 1
  5320 000024ED C3                      	retn
  5321                                  uLVI0:
  5322                                          ; not at the end of the file yet.
  5323 000024EE FEC8                    	dec	al
  5324 000024F0 241F                    	and	al, 1Fh
  5325                                  uLVI1:
  5326                                  	;call	setLastValidIndex
  5327                                  ;uLVI2:
  5328                                  	;retn
  5329                                  
  5330                                  ;input AL = index # to stop on
  5331                                  setLastValidIndex:
  5332                                  	; 29/05/2024 (TRDOS 386)
  5333                                  	; 08/11/2023
  5334 000024F2 668B15[A0280000]        	mov	dx, [NABMBAR]
  5335 000024F9 6683C215                	add	dx, PO_LVI_REG
  5336                                          ;out	dx, al
  5337                                  	; 29/05/2024
  5338                                  	; al = data, byte
  5339 000024FD B401                    	mov	ah, 1 ; write port, byte
  5340 000024FF CD34                    	int	34h
  5341 00002501 C3                      	retn
  5342                                  
  5343                                  ; 29/05/2024
  5344                                  ; 19/05/2024
  5345 00002502 02                      volume: db	02h
  5346                                  	
  5347                                  ; --------------------------------------------------------
  5348                                  
  5349                                  ; DATA
  5350                                  
  5351                                  FileHandle:	
  5352 00002503 FFFFFFFF                	dd	-1
  5353                                  
  5354                                  ; 30/05/2024
  5355 00002507 00                      reset:	db	0
  5356                                  
  5357                                  Credits:
  5358 00002508 54696E792057415620-     	db	'Tiny WAV Player for TRDOS 386 by Erdogan Tan. '
  5358 00002511 506C6179657220666F-
  5358 0000251A 72205452444F532033-
  5358 00002523 383620627920457264-
  5358 0000252C 6F67616E2054616E2E-
  5358 00002535 20                 
  5359                                  	;db	'August 2020.',10,13,0
  5360 00002536 4D617920323032342E-     	db	'May 2024.',10,13,0
  5360 0000253F 0A0D00             
  5361 00002542 31372F30362F323031-     	db	'17/06/2017', 10,13,0
  5361 0000254B 370A0D00           
  5362 0000254F 31382F30382F323032-     	db	'18/08/2020', 10,13,0
  5362 00002558 300A0D00           
  5363 0000255C 32372F31312F323032-     	db	'27/11/2023', 10,13,0
  5363 00002565 330A0D00           
  5364 00002569 32392F30352F323032-     	db	'29/05/2024', 10,13,0
  5364 00002572 340A0D00           
  5365                                  
  5366                                  msgAudioCardInfo:
  5367 00002576 666F7220496E74656C-     	db 	'for Intel AC97 (ICH) Audio Controller.', 10,13,0
  5367 0000257F 204143393720284943-
  5367 00002588 482920417564696F20-
  5367 00002591 436F6E74726F6C6C65-
  5367 0000259A 722E0A0D00         
  5368                                  
  5369                                  msg_usage:
  5370 0000259F 75736167653A20706C-     	db	'usage: playwav7 filename.wav',10,13,0 ; 29/05/2024
  5370 000025A8 617977617637206669-
  5370 000025B1 6C656E616D652E7761-
  5370 000025BA 760A0D00           
  5371                                  
  5372                                  noDevMsg:
  5373 000025BE 4572726F723A20556E-     	db	'Error: Unable to find AC97 audio device!'
  5373 000025C7 61626C6520746F2066-
  5373 000025D0 696E64204143393720-
  5373 000025D9 617564696F20646576-
  5373 000025E2 69636521           
  5374 000025E6 0A0D00                  	db	10,13,0
  5375                                  
  5376                                  noFileErrMsg:
  5377 000025E9 4572726F723A206669-     	db	'Error: file not found.',10,13,0
  5377 000025F2 6C65206E6F7420666F-
  5377 000025FB 756E642E0A0D00     
  5378                                  
  5379                                  msg_error:	; 29/05/2024
  5380                                  trdos386_err_msg:
  5381 00002602 5452444F5320333836-     	db	'TRDOS 386 System call error !',10,13,0
  5381 0000260B 2053797374656D2063-
  5381 00002614 616C6C206572726F72-
  5381 0000261D 20210A0D00         
  5382                                  
  5383                                  ; 29/05/2024
  5384                                  ; 11/11/2023
  5385                                  msg_init_err:
  5386 00002622 0D0A                    	db	CR, LF
  5387 00002624 4143393720436F6E74-     	db	"AC97 Controller/Codec initialization error !"
  5387 0000262D 726F6C6C65722F436F-
  5387 00002636 64656320696E697469-
  5387 0000263F 616C697A6174696F6E-
  5387 00002648 206572726F722021   
  5388 00002650 0D0A24                  	db	CR, LF, "$"
  5389                                  
  5390                                  ; 25/11/2023
  5391                                  msg_no_vra:
  5392 00002653 0A0D                    	db	10,13
  5393 00002655 4E6F20565241207375-     	db	"No VRA support ! Only 48 kHZ sample rate supported !"
  5393 0000265E 70706F72742021204F-
  5393 00002667 6E6C79203438206B48-
  5393 00002670 5A2073616D706C6520-
  5393 00002679 726174652073757070-
  5393 00002682 6F727465642021     
  5394 00002689 0A0D00                  	db	10,13,0
  5395                                  
  5396                                  ; 29/05/2024 (TRDOS 386)
  5397                                  ; 17/02/2017
  5398                                  ; Valid ICH device IDs
  5399                                  
  5400                                  valid_ids:
  5401 0000268C 86801524                dd	(ICH_DID << 16) + INTEL_VID  	 ; 8086h:2415h
  5402 00002690 86802524                dd	(ICH0_DID << 16) + INTEL_VID 	 ; 8086h:2425h
  5403 00002694 86804524                dd	(ICH2_DID << 16) + INTEL_VID 	 ; 8086h:2445h
  5404 00002698 86808524                dd	(ICH3_DID << 16) + INTEL_VID 	 ; 8086h:2485h
  5405 0000269C 8680C524                dd	(ICH4_DID << 16) + INTEL_VID 	 ; 8086h:24C5h
  5406 000026A0 8680D524                dd	(ICH5_DID << 16) + INTEL_VID 	 ; 8086h:24D5h
  5407 000026A4 86806E26                dd	(ICH6_DID << 16) + INTEL_VID 	 ; 8086h:266Eh
  5408 000026A8 8680A625                dd	(ESB6300_DID << 16) + INTEL_VID  ; 8086h:25A6h
  5409 000026AC 86809826                dd	(ESB631X_DID << 16) + INTEL_VID  ; 8086h:2698h
  5410 000026B0 8680DE27                dd	(ICH7_DID << 16) + INTEL_VID 	 ; 8086h:27DEh
  5411                                  ; 03/11/2023 - Erdogan Tan
  5412 000026B4 86809571                dd	(MX82440_DID << 16) + INTEL_VID  ; 8086h:7195h
  5413 000026B8 39101270                dd	(SI7012_DID << 16)  + SIS_VID	 ; 1039h:7012h
  5414 000026BC DE10B101                dd 	(NFORCE_DID << 16)  + NVIDIA_VID ; 10DEh:01B1h
  5415 000026C0 DE106A00                dd 	(NFORCE2_DID << 16) + NVIDIA_VID ; 10DEh:006Ah
  5416 000026C4 22106D74                dd 	(AMD8111_DID << 16) + AMD_VID 	 ; 1022h:746Dh
  5417 000026C8 22104574                dd 	(AMD768_DID << 16)  + AMD_VID 	 ; 1022h:7445h
  5418 000026CC DE105900                dd 	(CK804_DID << 16) + NVIDIA_VID	 ; 10DEh:0059h
  5419 000026D0 DE103A00                dd 	(MCP04_DID << 16) + NVIDIA_VID	 ; 10DEh:003Ah
  5420 000026D4 DE108A00                dd 	(CK8_DID << 16) + NVIDIA_VID	 ; 1022h:008Ah
  5421 000026D8 DE10DA00                dd 	(NFORCE3_DID << 16) + NVIDIA_VID ; 10DEh:00DAh
  5422 000026DC DE10EA00                dd 	(CK8S_DID << 16) + NVIDIA_VID	 ; 10DEh:00EAh
  5423                                  
  5424                                  valid_id_count:	equ ($ - valid_ids)>>2 ; 05/11/2023
  5425                                  
  5426 000026E0 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  5426 000026E9 65204E616D653A2000 
  5427 000026F2 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  5427 000026FB 526174653A20       
  5428 00002701 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  5428 0000270A 2000               
  5429 0000270C 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  5430 00002715 4D6F6E6F0D0A00          msgMono:	db "Mono", 0Dh, 0Ah, 0
  5431 0000271C 313620626974732C20-     msg16Bits:	db "16 bits, ", 0 
  5431 00002725 00                 
  5432 00002726 53746572656F            msgStereo:	db "Stereo"
  5433 0000272C 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  5434                                  
  5435                                  ; 03/06/2017
  5436 0000272F 303132333435363738-     hex_chars	db "0123456789ABCDEF", 0
  5436 00002738 3941424344454600   
  5437 00002740 0D0A                    msgAC97Info	db 0Dh, 0Ah
  5438 00002742 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah 
  5438 0000274B 6F20436F6E74726F6C-
  5438 00002754 6C6572202620436F64-
  5438 0000275D 656320496E666F0D0A 
  5439 00002766 56656E646F72204944-     		db "Vendor ID: "
  5439 0000276F 3A20               
  5440 00002771 303030306820446576-     msgVendorId	db "0000h Device ID: "
  5440 0000277A 6963652049443A20   
  5441 00002782 30303030680D0A          msgDevId	db "0000h", 0Dh, 0Ah
  5442 00002789 4275733A20              		db "Bus: "
  5443 0000278E 303068204465766963-     msgBusNo	db "00h Device: "
  5443 00002797 653A20             
  5444 0000279A 3030682046756E6374-     msgDevNo	db "00h Function: "
  5444 000027A3 696F6E3A20         
  5445 000027A8 303068                  msgFncNo	db "00h"
  5446 000027AB 0D0A                    		db 0Dh, 0Ah
  5447 000027AD 4E414D4241523A20        		db "NAMBAR: "
  5448 000027B5 30303030682020          msgNamBar	db "0000h  "
  5449 000027BC 4E41424D4241523A20      		db "NABMBAR: "
  5450 000027C5 303030306820204952-     msgNabmBar	db "0000h  IRQ: "
  5450 000027CE 513A20             
  5451 000027D1 3030                    msgIRQ		dw 3030h
  5452 000027D3 0D0A00                  		db 0Dh, 0Ah, 0
  5453                                  ; 25/11/2023
  5454 000027D6 56524120737570706F-     msgVRAheader:	db "VRA support: "
  5454 000027DF 72743A20           
  5455 000027E3 00                      		db 0	
  5456 000027E4 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  5457 000027EA 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  5458 000027EF 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  5458 000027F8 617465642073616D70-
  5458 00002801 6C6520726174652070-
  5458 0000280A 6C6179696E67206D65-
  5458 00002813 74686F6429         
  5459 00002818 0D0A00                  		db 0Dh, 0Ah, 0
  5460                                  EOF: 
  5461                                  
  5462                                  ; BSS
  5463                                  
  5464                                  bss_start:
  5465                                  
  5466                                  ABSOLUTE bss_start
  5467                                  
  5468 0000281B ??                      alignb 4
  5469                                  
  5470 0000281C ??                      stmo:		resb 1 ; stereo or mono (1=stereo) 
  5471 0000281D ??                      bps:		resb 1 ; bits per sample (8,16)
  5472 0000281E ????                    sample_rate:	resw 1 ; Sample Frequency (Hz)
  5473                                  
  5474                                  ; 25/11/2023
  5475 00002820 ????????                bufferSize:	resd 1
  5476                                  
  5477 00002824 ??                      flags:		resb 1
  5478                                  
  5479                                  ; 29/05/2024
  5480                                  ;;cbs_busy:	resb 1
  5481                                  ;half_buff:	resb 1
  5482                                  ;srb:		resb 1
  5483                                  
  5484                                  ; 30/05/2024
  5485                                  ; 18/08/2020
  5486                                  ;volume_level:	resb 1
  5487                                  ; 25/11/2023
  5488 00002825 ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  5489                                  
  5490 00002826 <res 1Ch>               smpRBuff:	resw 14 
  5491                                  
  5492                                  wav_file_name:
  5493 00002842 <res 50h>               		resb 80 ; wave file, path name (<= 80 bytes)
  5494                                  
  5495 00002892 ????                    		resw 1
  5496 00002894 ??                      ac97_int_ln_reg: resb 1
  5497 00002895 ??                      fbs_shift:	resb 1 ; 26/11/2023
  5498 00002896 ????????                dev_vendor:	resd 1
  5499 0000289A ????????                bus_dev_fn:	resd 1
  5500                                  ;ac97_NamBar:	resw 1
  5501                                  ;ac97_NabmBar:	resw 1
  5502                                  
  5503                                  ; 29/05/2024
  5504                                  ; 17/02/2017
  5505                                  ; NAMBAR:  Native Audio Mixer Base Address Register
  5506                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 10h-13h
  5507                                  ; NABMBAR: Native Audio Bus Mastering Base Address register
  5508                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 14h-17h
  5509 0000289E ????                    NAMBAR:		resw 1			; BAR for mixer
  5510 000028A0 ????                    NABMBAR:	resw 1			; BAR for bus master regs
  5511                                  
  5512                                  ; 29/05/2024
  5513 000028A2 ????????                audio_buffer:	resd 1
  5514                                  ; 29/05/2024
  5515 000028A6 ????????                _bdl_buffer:	resd 1
  5516                                  ;wav_buffer1:	resd 1
  5517                                  ;wav_buffer2:	resd 1
  5518                                  
  5519                                  bss_end:
  5520                                  
  5521 000028AA <res 756h>              alignb 4096
  5522                                  		; 256 byte buffer for descriptor list
  5523 00003000 <res 100h>              BDL_BUFFER:	resb 256
  5524                                  
  5525 00003100 <res F00h>              alignb 4096
  5526                                  
  5527                                  ;audio_buffer:	resb BUFFERSIZE ; DMA Buffer Size / 2 (32768)
  5528                                  ; 29/05/2024
  5529                                  ; 26/11/2023
  5530                                  ;audio_buffer:	resb 65536
  5531                                  ; 29/05/2024
  5532 00004000 <res 10000h>            WAVBUFFER_1:	resb 65536
  5533 00014000 <res 10000h>            WAVBUFFER_2:	resb 65536
  5534                                  ; 13/06/2017
  5535                                  ;temp_buffer:	resb BUFFERSIZE
  5536                                  ; 26/11/2023
  5537 00024000 <res 10000h>            temp_buffer:	resb 65536
