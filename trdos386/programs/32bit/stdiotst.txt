     1                                  ; ****************************************************************************
     2                                  ; stdiotst.s - TRDOS 386 (TRDOS v2.0) Kernel - SYSSTDIO function test
     3                                  ; ----------------------------------------------------------------------------
     4                                  ;
     5                                  ; 23/08/2024
     6                                  ;
     7                                  ; [ Last Modification: 24/08/2024 ]
     8                                  ;
     9                                  ; ****************************************************************************
    10                                  
    11                                  ; 20/08/2024 ; TRDOS 386 v2.0.9 (exit code)
    12                                  ; 20/08/2017
    13                                  ; 01/03/2017
    14                                  ; 16/10/2016
    15                                  ; 29/04/2016
    16                                  ; TRDOS 386 system calls (temporary list!)
    17                                  _ver 	equ 0
    18                                  _exit 	equ 1
    19                                  _fork 	equ 2
    20                                  _read 	equ 3
    21                                  _write	equ 4
    22                                  _open	equ 5
    23                                  _close 	equ 6
    24                                  _wait 	equ 7
    25                                  _creat 	equ 8
    26                                  _link 	equ 9
    27                                  _unlink	equ 10
    28                                  _exec	equ 11
    29                                  _chdir	equ 12
    30                                  _time 	equ 13
    31                                  _mkdir 	equ 14
    32                                  _chmod	equ 15
    33                                  _chown	equ 16
    34                                  _break	equ 17
    35                                  _stat	equ 18
    36                                  _seek	equ 19
    37                                  _tell 	equ 20
    38                                  _mount	equ 21
    39                                  _umount	equ 22
    40                                  _setuid	equ 23
    41                                  _getuid	equ 24
    42                                  _stime	equ 25
    43                                  _quit	equ 26	
    44                                  _intr	equ 27
    45                                  _fstat	equ 28
    46                                  _emt 	equ 29
    47                                  _mdate 	equ 30
    48                                  _video 	equ 31
    49                                  _audio	equ 32
    50                                  _timer	equ 33
    51                                  _sleep	equ 34
    52                                  _msg    equ 35
    53                                  _geterr	equ 36
    54                                  _fpsave	equ 37
    55                                  _pri	equ 38
    56                                  _rele	equ 39
    57                                  _fff	equ 40
    58                                  _fnf	equ 41
    59                                  _alloc	equ 42
    60                                  _dalloc equ 43
    61                                  _calbac equ 44
    62                                  _dma	equ 45
    63                                  _stdio  equ 46	;  TRDOS 386 v2.0.9
    64                                  
    65                                  %macro sys 1-4
    66                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)	
    67                                      ; 03/09/2015	
    68                                      ; 13/04/2015
    69                                      ; Retro UNIX 386 v1 system call.	
    70                                      %if %0 >= 2   
    71                                          mov ebx, %2
    72                                          %if %0 >= 3    
    73                                              mov ecx, %3
    74                                              %if %0 = 4
    75                                                 mov edx, %4   
    76                                              %endif
    77                                          %endif
    78                                      %endif
    79                                      mov eax, %1
    80                                      ;int 30h
    81                                      int 40h ; TRDOS 386 (TRDOS v2.0)	   
    82                                  %endmacro
    83                                  
    84                                  ; TRDOS 386 (and Retro UNIX 386 v1) system call format:
    85                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
    86                                  
    87                                  ;========================================================================
    88                                  ; EXEC TEST - CODE
    89                                  ;========================================================================
    90                                  
    91                                  [BITS 32] ; 32-bit intructions
    92                                  
    93                                  [ORG 0] 
    94                                  
    95                                  START_CODE:
    96                                  	sys	_msg, program, len0, 0Bh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000000 BB[3D050000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000005 B92D000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000000A BA0B000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000000F B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000014 CD40                <1>  int 40h
    97                                  	sys	_msg, owner, 255, 0Eh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000016 BB[6B050000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000001B B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000020 BA0E000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000025 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000002A CD40                <1>  int 40h
    98                                  
    99                                  	; If TRDOS 386 kernel version < 2.0.9 ..
   100                                  	; (because sysstdio sysstem call was not existing before v2.0.9)
   101                                  	; Program will be terminated with Invalid Function Call error msg
   102                                  
   103                                  	; sysstdio Reset STDIN & STDOUT redirections
   104                                  	; NOTE: In fact, there is not a redirection at start stage of
   105                                  	; a program. (Redirections are done in a program.)
   106                                  	; ((I am putting this here for IFC test.))
   107                                  	sys	_stdio, 4, 0  ; Reset STDIN redirection
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000002C BB04000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000031 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000036 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000003B CD40                <1>  int 40h
   108                                  	sys	_stdio, 5, 0  ; Reset STDOUT redirection
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000003D BB05000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000042 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000047 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000004C CD40                <1>  int 40h
   109                                  
   110                                  restart:
   111                                  	sys	_msg, press_F_key, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000004E BB[9E050000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000053 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000058 BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000005D B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000062 CD40                <1>  int 40h
   112                                  	sys	_msg, functions1, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000064 BB[D9050000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000069 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000006E BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000073 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000078 CD40                <1>  int 40h
   113                                  	sys	_msg, functions2, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000007A BB[94060000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000007F B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000084 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000089 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000008E CD40                <1>  int 40h
   114                                  	sys	_msg, functions3, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000090 BB[6F070000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000095 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000009A BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000009F B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000000A4 CD40                <1>  int 40h
   115                                  
   116                                  getchar_@:
   117                                  	; getchar
   118                                  	;mov	ah, 10h
   119                                  	;int	32h
   120                                  
   121                                  	; stdio getchar (TRDOS 386 Kernel v2.0.9 and later)
   122                                  	;mov	bl, 6	; read character (ascii and scancode) on stdin
   123                                  			; -no redirection, wait-
   124                                  	sys	_stdio, 6
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000000A6 BB06000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000000AB B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000000B0 CD40                <1>  int 40h
   125                                  	
   126 000000B2 3C1B                    	cmp	al, 1Bh ; ESC key
   127 000000B4 7471                    	je	short terminate
   128                                  
   129 000000B6 80FC3B                  	cmp	ah, 3Bh ; F1 key
   130 000000B9 72EB                    	jb	short getchar_@
   131 000000BB 80FC44                  	cmp	ah, 44h ; F10 key
   132 000000BE 77E6                    	ja	short getchar_@
   133                                  
   134 000000C0 88E3                    	mov	bl, ah
   135 000000C2 80EB3B                  	sub	bl, 3Bh
   136 000000C5 C1E302                  	shl	ebx, 2
   137 000000C8 81C3[4C010000]          	add	ebx, function_table
   138 000000CE FF13                    	call	dword [ebx]
   139                                  	sys	_msg, crlf, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000000D0 BB[5C090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000000D5 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000000DA BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000000DF B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000000E4 CD40                <1>  int 40h
   140                                  	sys	_msg, continue_msg, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000000E6 BB[2D090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000000EB B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000000F0 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000000F5 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000000FA CD40                <1>  int 40h
   141                                  	sys	_stdio, 6
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000000FC BB06000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000101 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 00000106 CD40                <1>  int 40h
   142 00000108 3C1B                    	cmp	al, 1Bh ; ESC key
   143 0000010A 7405                    	je	short _ok
   144 0000010C E93DFFFFFF              	jmp	restart
   145                                  
   146                                  getchar_@@:
   147                                  
   148                                  _ok:
   149                                  	sys	_msg, msg_ok, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000111 BB[970C0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000116 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000011B BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000120 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000125 CD40                <1>  int 40h
   150                                  terminate:
   151                                  	sys	_msg, crlf, 2, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000127 BB[5C090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000012C B902000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000131 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000136 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000013B CD40                <1>  int 40h
   152                                  
   153                                  	sys	_exit, 0  ; ebx = exit code
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000013D BB00000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000142 B801000000          <1>  mov eax, %1
    80                              <1> 
    81 00000147 CD40                <1>  int 40h
   154                                  	;sys	_exit
   155                                  here:
   156 00000149 90                      	nop
   157 0000014A EBFD                    	jmp	short here
   158                                  
   159                                  function_table:
   160 0000014C [74010000]              	dd	F1_function
   161 00000150 [E1010000]              	dd	F2_function
   162 00000154 [52020000]              	dd	F3_function
   163 00000158 [38050000]              	dd	F4_function
   164 0000015C [10040000]              	dd	F5_function
   165 00000160 [38050000]              	dd	F6_function
   166 00000164 [38050000]              	dd	F7_function
   167 00000168 [38050000]              	dd	F8_function
   168 0000016C [38050000]              	dd	F9_function
   169 00000170 [38050000]              	dd	F10_function
   170                                  
   171                                  F1_function:
   172                                  	sys	_stdio, 4, 0 ; reset STDIN
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000174 BB04000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000179 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000017E B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 00000183 CD40                <1>  int 40h
   173                                  	; ecx = 0
   174                                  	sys	_stdio, 5    ; reset STDOUT
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000185 BB05000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000018A B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000018F CD40                <1>  int 40h
   175                                  
   176                                  	sys	_msg, F1_header, 255, 0Ch
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000191 BB[5F090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000196 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000019B BA0C000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001A0 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000001A5 CD40                <1>  int 40h
   177                                  	sys	_msg, F1_text, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001A7 BB[B6090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000001AC B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000001B1 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001B6 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000001BB CD40                <1>  int 40h
   178                                  
   179 000001BD 29C9                    	sub	ecx, ecx
   180 000001BF B50F                    	mov	ch, 0Fh ; color = white
   181                                  F1_nextchar:	
   182                                  	sys	_stdio, 6  ; read character (from STDIN)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001C1 BB06000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001C6 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000001CB CD40                <1>  int 40h
   183 000001CD 88C1                    	mov	cl, al
   184                                  	sys	_stdio, 8  ; write character (to STDOUT)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001CF BB08000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001D4 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000001D9 CD40                <1>  int 40h
   185 000001DB 80F90D                  	cmp	cl, 0Dh  ; ENTER/CR key
   186 000001DE 75E1                    	jne	short F1_nextchar
   187 000001E0 C3                      	retn
   188                                  
   189                                  F2_function:
   190                                  	sys	_stdio, 4, 0 ; reset STDIN
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001E1 BB04000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000001E6 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001EB B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000001F0 CD40                <1>  int 40h
   191                                  	; ecx = 0
   192                                  	sys	_stdio, 5    ; reset STDOUT
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001F2 BB05000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000001F7 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000001FC CD40                <1>  int 40h
   193                                  
   194                                  	sys	_msg, F2_header, 255, 0Ch
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000001FE BB[89090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000203 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000208 BA0C000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000020D B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000212 CD40                <1>  int 40h
   195                                  	sys	_msg, F2_text, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000214 BB[B6090000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000219 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000021E BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000223 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000228 CD40                <1>  int 40h
   196                                  
   197 0000022A 29C9                    	sub	ecx, ecx
   198 0000022C B50F                    	mov	ch, 0Fh ; color = white
   199                                  F2_nextchar:	
   200                                  	sys	_stdio, 7  ; read character (from STDIN)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000022E BB07000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000233 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 00000238 CD40                <1>  int 40h
   201 0000023A 21C0                    	and	eax, eax
   202 0000023C 74F0                    	jz	short F2_nextchar ; not a character input
   203 0000023E 88C1                    	mov	cl, al
   204                                  	sys	_stdio, 8  ; write character (to STDOUT)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000240 BB08000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000245 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000024A CD40                <1>  int 40h
   205 0000024C 80F90D                  	cmp	cl, 0Dh  ; ENTER/CR key
   206 0000024F 75DD                    	jne	short F2_nextchar
   207 00000251 C3                      	retn
   208                                  
   209                                  F3_function:
   210                                  	sys	_msg, F3_header, 255, 0Ch
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000252 BB[440A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000257 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000025C BA0C000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000261 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000266 CD40                <1>  int 40h
   211                                  	sys	_msg, F3_text, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000268 BB[790A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000026D B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000272 BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000277 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000027C CD40                <1>  int 40h
   212                                  	sys	_msg, stdio_at_first, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000027E BB[AA0A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000283 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000288 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000028D B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000292 CD40                <1>  int 40h
   213                                  
   214                                  	; create STDIO.TXT or truncate it if it is existing
   215                                  	sys	_creat, stdio_file, 0 ; create normal file
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000294 BB[EA0A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000299 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000029E B808000000          <1>  mov eax, %1
    80                              <1> 
    81 000002A3 CD40                <1>  int 40h
   216 000002A5 7317                    	jnc	short F3_continue_1 ; eax = file handle
   217                                  F3_error:
   218                                  	sys	_msg, create_error, 255, 0Dh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000002A7 BB[F40A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000002AC B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000002B1 BA0D000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000002B6 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000002BB CD40                <1>  int 40h
   219 000002BD C3                      	retn
   220                                  
   221                                  F3_continue_1:
   222                                  	sys	_close, eax 
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000002BE 89C3                <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000002C0 B806000000          <1>  mov eax, %1
    80                              <1> 
    81 000002C5 CD40                <1>  int 40h
   223                                  		; needed for now (TRDOS 386 v2.0.9 defect/bug)
   224                                  	sys	_open, stdio_file, 1 ; open for write
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000002C7 BB[EA0A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000002CC B901000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000002D1 B805000000          <1>  mov eax, %1
    80                              <1> 
    81 000002D6 CD40                <1>  int 40h
   225 000002D8 72CD                    	jc	short F3_error
   226 000002DA 40                      	inc	eax ;  file descriptor + 1 (for SYSSTDIO)
   227 000002DB A3[930C0000]            	mov	[filehandle], eax
   228                                  	sys	_intr, 0 ; CRTL+BRK disabled
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000002E0 BB00000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000002E5 B81B000000          <1>  mov eax, %1
    80                              <1> 
    81 000002EA CD40                <1>  int 40h
   229                                  	sys	_msg, redir_option_hdr, 255, 0Eh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000002EC BB[E4070000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000002F1 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000002F6 BA0E000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000002FB B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000300 CD40                <1>  int 40h
   230                                  	sys	_msg, redir_option, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000302 BB[05080000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000307 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000030C BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000311 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000316 CD40                <1>  int 40h
   231                                  F3_continue_2:
   232                                  	sys	_stdio, 6 ; read character (from STDIN)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000318 BB06000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000031D B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 00000322 CD40                <1>  int 40h
   233 00000324 3C0D                    	cmp	al, 0Dh ; ENTER
   234 00000326 744A                    	je	short F3_continue_4
   235 00000328 3C1B                    	cmp	al, 1Bh ;  ESC
   236 0000032A 75EC                    	jne	short F3_continue_2
   237                                  		
   238                                  	; write SAMPLE text
   239                                  	; redirect STDOUT to the (open) file
   240                                  	sys	_stdio, 5, [filehandle]
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000032C BB05000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000331 8B0D[930C0000]      <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000337 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000033C CD40                <1>  int 40h
   241                                  
   242                                  	sys	_msg, redir_text_hdr, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000033E BB[44080000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000343 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000348 BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000034D B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000352 CD40                <1>  int 40h
   243                                  	
   244 00000354 BE[6B080000]            	mov	esi, redir_text
   245 00000359 BFC1000000              	mov	edi, redir_text_size
   246                                  F3_continue_3:
   247 0000035E AC                      	lodsb	; load a character from the sample text
   248                                  	; write to redirected STDOUT (STDIO.TXT)
   249                                  	sys	_stdio, 2, eax
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000035F BB02000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000364 89C1                <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000366 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000036B CD40                <1>  int 40h
   250 0000036D 4F                      	dec	edi
   251 0000036E 75EE                    	jnz	short F3_continue_3
   252 00000370 EB5C                    	jmp	short F3_continue_9
   253                                  
   254                                  F3_continue_4:
   255                                  	; read from STDIN
   256                                  	sys	_msg, F3_enter_msg, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000372 BB[750B0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000377 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000037C BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000381 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000386 CD40                <1>  int 40h
   257                                  F3_continue_5:
   258                                  	sys	_stdio, 6 ; read char (no redir, wait)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000388 BB06000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000038D B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 00000392 CD40                <1>  int 40h
   259 00000394 3C20                    	cmp	al, 20h
   260 00000396 7210                    	jb	short F3_continue_6
   261                                  	; write to redirected STDOUT (STDIO.TXT)
   262                                  	sys	_stdio, 2, eax
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000398 BB02000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000039D 89C1                <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000039F B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000003A4 CD40                <1>  int 40h
   263 000003A6 89C8                    	mov	eax, ecx
   264                                  F3_continue_6:
   265 000003A8 3C0D                    	cmp	al, 0Dh
   266 000003AA 7406                    	je	short F3_continue_8
   267                                  F3_continue_7:
   268 000003AC 3C1B                    	cmp	al, 1Bh
   269 000003AE 75D8                    	jne	short F3_continue_5
   270 000003B0 B00D                    	mov	al, 0Dh
   271                                  F3_continue_8:
   272                                  	; AL = CR
   273                                  	sys	_stdio, 2, eax
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000003B2 BB02000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000003B7 89C1                <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000003B9 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000003BE CD40                <1>  int 40h
   274 000003C0 B10A                    	mov	cl, 0Ah ; LF
   275                                  	sys	_stdio, 2
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000003C2 BB02000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000003C7 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000003CC CD40                <1>  int 40h
   276                                  	;jmp	short F3_continue_9
   277                                  
   278                                  F3_continue_9:
   279                                  	; close STDIO.TXT file
   280 000003CE 8B1D[930C0000]          	mov	ebx, [filehandle]  ; file descriptor + 1
   281 000003D4 4B                      	dec	ebx ; file descriptor (0 based)
   282                                  	sys	_close
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71                              <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000003D5 B806000000          <1>  mov eax, %1
    80                              <1> 
    81 000003DA CD40                <1>  int 40h
   283                                  
   284                                  	sys	_intr, 1 ; CRTL+BRK enabled again
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000003DC BB01000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000003E1 B81B000000          <1>  mov eax, %1
    80                              <1> 
    81 000003E6 CD40                <1>  int 40h
   285                                  
   286                                  	; cancel STDOUT redirection
   287                                  	sys	_stdio, 5, 0 ; reset stdout
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000003E8 BB05000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000003ED B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000003F2 B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000003F7 CD40                <1>  int 40h
   288                                  	
   289                                  	; written message (success/completed msg)
   290                                  	sys	_msg, msg_written, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000003F9 BB[34080000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000003FE B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000403 BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000408 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000040D CD40                <1>  int 40h
   291 0000040F C3                      	retn
   292                                  
   293                                  F5_function:
   294                                  	sys	_msg, F5_header, 255, 0Ch
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000410 BB[430C0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000415 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000041A BA0C000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000041F B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000424 CD40                <1>  int 40h
   295                                  	sys	_msg, F5_text, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000426 BB[630C0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000042B B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000430 BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000435 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 0000043A CD40                <1>  int 40h
   296                                  	
   297                                  	; CL = 0E7h -> except volume names and directories
   298                                  	; CH = 0 -> 24 bytes buffer
   299                                  	sys	_fff, stdio_file, 0E7h, fff_buffer
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000043C BB[EA0A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000441 B9E7000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000446 BA[86050000]        <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000044B B828000000          <1>  mov eax, %1
    80                              <1> 
    81 00000450 CD40                <1>  int 40h
   300 00000452 7230                    	jc	short F5_nf_error
   301                                  
   302 00000454 837A0600                	cmp	dword [edx+6], 0 ; file size
   303 00000458 7641                    	jna	short F5_zf_error
   304                                  
   305                                  	sys	_open, stdio_file, 1 ; open for write
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000045A BB[EA0A0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 0000045F B901000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000464 B805000000          <1>  mov eax, %1
    80                              <1> 
    81 00000469 CD40                <1>  int 40h
   306 0000046B 7345                    	jnc	short F5_continue_1
   307                                  	; access denied error !?
   308                                  F5_error:
   309                                  	sys	_msg, open_error, 255, 0Dh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000046D BB[1E0B0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000472 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 00000477 BA0D000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000047C B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000481 CD40                <1>  int 40h
   310 00000483 C3                      	retn
   311                                  
   312                                  F5_nf_error:
   313                                  	sys	_msg, not_found, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000484 BB[5E0B0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000489 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000048E BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000493 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000498 CD40                <1>  int 40h
   314 0000049A C3                      	retn
   315                                  F5_zf_error:
   316                                  	sys	_msg, zero_file, 255, 0Fh
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 0000049B BB[3E0B0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000004A0 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 000004A5 BA0F000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004AA B823000000          <1>  mov eax, %1
    80                              <1> 
    81 000004AF CD40                <1>  int 40h
   317 000004B1 C3                      	retn
   318                                  
   319                                  F5_continue_1:
   320 000004B2 40                      	inc	eax ;  file descriptor + 1 (for SYSSTDIO)
   321 000004B3 A3[930C0000]            	mov	[filehandle], eax
   322                                  	
   323                                  	sys	_intr, 0 ; CRTL+BRK disabled
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000004B8 BB00000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004BD B81B000000          <1>  mov eax, %1
    80                              <1> 
    81 000004C2 CD40                <1>  int 40h
   324                                  	; redirect STDIN to the (open) file
   325                                  	sys	_stdio, 4, [filehandle]
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000004C4 BB04000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000004C9 8B0D[930C0000]      <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004CF B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000004D4 CD40                <1>  int 40h
   326                                  F5_continue_2:
   327                                  	sys	_stdio, 0 ; read character (from STDIN)
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000004D6 BB00000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004DB B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000004E0 CD40                <1>  int 40h
   328 000004E2 7212                    	jc	short F5_continue_3
   329                                  
   330 000004E4 B40F                    	mov	ah, 0Fh ; character color	
   331                                  	; write character/byte to STDOUT (non redirected)
   332                                  	sys	_stdio, 8, eax
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 000004E6 BB08000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 000004EB 89C1                <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004ED B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 000004F2 CD40                <1>  int 40h
   333                                  
   334 000004F4 EBE0                    	jmp	short F5_continue_2
   335                                  
   336                                  F5_continue_3:
   337                                  	; close STDIO.TXT file
   338 000004F6 8B1D[930C0000]          	mov	ebx, [filehandle]
   339 000004FC 4B                      	dec	ebx ; file descriptor (0 based)
   340                                  	sys	_close
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71                              <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 000004FD B806000000          <1>  mov eax, %1
    80                              <1> 
    81 00000502 CD40                <1>  int 40h
   341                                  
   342                                  	sys	_intr, 1 ; CRTL+BRK enabled again
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000504 BB01000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73                              <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000509 B81B000000          <1>  mov eax, %1
    80                              <1> 
    81 0000050E CD40                <1>  int 40h
   343                                  
   344                                  	; cancel STDIN redirection
   345                                  	sys	_stdio, 4, 0 ; reset stdin
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000510 BB04000000          <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000515 B900000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75                              <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 0000051A B82E000000          <1>  mov eax, %1
    80                              <1> 
    81 0000051F CD40                <1>  int 40h
   346                                  
   347                                  	sys	_msg, msg_ok, 255, 07h
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1>  %if %0 >= 2
    71 00000521 BB[970C0000]        <1>  mov ebx, %2
    72                              <1>  %if %0 >= 3
    73 00000526 B9FF000000          <1>  mov ecx, %3
    74                              <1>  %if %0 = 4
    75 0000052B BA07000000          <1>  mov edx, %4
    76                              <1>  %endif
    77                              <1>  %endif
    78                              <1>  %endif
    79 00000530 B823000000          <1>  mov eax, %1
    80                              <1> 
    81 00000535 CD40                <1>  int 40h
   348 00000537 C3                      	retn
   349                                  
   350                                  F4_function:
   351                                  F6_function:
   352                                  F7_function:
   353                                  F8_function:
   354                                  F9_function:
   355                                  F10_function:
   356 00000538 E9D4FBFFFF              	jmp	_ok
   357                                  
   358                                  ;-----------------------------------------------------------------
   359                                  ;  messages
   360                                  ;-----------------------------------------------------------------
   361                                  
   362                                  program:
   363 0000053D 0D0A                    		db 0Dh, 0Ah
   364 0000053F 5452444F5320333836-     		db "TRDOS 386 v2.0.9 - SYSSTDIO Function Test"
   364 00000548 2076322E302E39202D-
   364 00000551 20535953535444494F-
   364 0000055A 2046756E6374696F6E-
   364 00000563 2054657374         
   365 00000568 0D0A                    		db 0Dh, 0Ah
   366                                  len0	equ $-program
   367 0000056A 00                      		db 0
   368                                  owner:
   369 0000056B 4572646F67616E2054-     		db "Erdogan Tan - 23/08/2024"	
   369 00000574 616E202D2032332F30-
   369 0000057D 382F32303234       
   370 00000583 0D0A00                  		db 0Dh, 0Ah, 0
   371                                  
   372 00000586 FF<rep 18h>             fff_buffer:	times 24 db 0FFh
   373                                  
   374                                  press_F_key:
   375 0000059E 0D0A                    		db 0Dh, 0Ah
   376 000005A0 5072657373206F6E65-     		db "Press one of F1-F10 keys to test or press ESC to exit."
   376 000005A9 206F662046312D4631-
   376 000005B2 30206B65797320746F-
   376 000005BB 2074657374206F7220-
   376 000005C4 707265737320455343-
   376 000005CD 20746F20657869742E 
   377 000005D6 0D0A00                  		db 0Dh, 0Ah, 0
   378                                  functions1:
   379 000005D9 0D0A                    		db 0Dh, 0Ah
   380 000005DB 4631202D2072656164-     		db "F1 - read a character on stdin (wait)"
   380 000005E4 206120636861726163-
   380 000005ED 746572206F6E207374-
   380 000005F6 64696E202877616974-
   380 000005FF 29                 
   381 00000600 0D0A                    		db 0Dh, 0Ah
   382 00000602 4632202D2072656164-     		db "F2 - read a character on stdin (no wait)"
   382 0000060B 206120636861726163-
   382 00000614 746572206F6E207374-
   382 0000061D 64696E20286E6F2077-
   382 00000626 61697429           
   383 0000062A 0D0A                    		db 0Dh, 0Ah
   384 0000062C 4633202D2077726974-     		db "F3 - write a character onto stdout (redirection)"
   384 00000635 652061206368617261-
   384 0000063E 63746572206F6E746F-
   384 00000647 207374646F75742028-
   384 00000650 726564697265637469-
   384 00000659 6F6E29             
   385 0000065C 0D0A                    		db 0Dh, 0Ah
   386 0000065E 4634202D2077726974-     		db "F4 - write a character onto stderr (no redirection)"
   386 00000667 652061206368617261-
   386 00000670 63746572206F6E746F-
   386 00000679 207374646572722028-
   386 00000682 6E6F20726564697265-
   386 0000068B 6374696F6E29       
   387 00000691 0D0A00                  		db 0Dh, 0Ah,0
   388                                  functions2:		
   389 00000694 4635202D2072656469-     		db "F5 - redirect stdin to file (if cl > 0)"
   389 0000069D 726563742073746469-
   389 000006A6 6E20746F2066696C65-
   389 000006AF 2028696620636C203E-
   389 000006B8 203029             
   390 000006BB 0D0A                    		db 0Dh, 0Ah
   391 000006BD 4636202D2072656469-     		db "F6 - redirect stdout to file (if cl > 0)"
   391 000006C6 72656374207374646F-
   391 000006CF 757420746F2066696C-
   391 000006D8 652028696620636C20-
   391 000006E1 3E203029           
   392 000006E5 0D0A                    		db 0Dh, 0Ah
   393 000006E7 4637202D2072656164-     		db "F7 - read character (ascii & scancode) on stdin (no redir, wait)"
   393 000006F0 206368617261637465-
   393 000006F9 722028617363696920-
   393 00000702 26207363616E636F64-
   393 0000070B 6529206F6E20737464-
   393 00000714 696E20286E6F207265-
   393 0000071D 6469722C2077616974-
   393 00000726 29                 
   394 00000727 0D0A                    		db 0Dh, 0Ah
   395 00000729 4638202D2072656164-     		db "F8 - read character (ascii & scancode) on stdin (no redir, no wait)"
   395 00000732 206368617261637465-
   395 0000073B 722028617363696920-
   395 00000744 26207363616E636F64-
   395 0000074D 6529206F6E20737464-
   395 00000756 696E20286E6F207265-
   395 0000075F 6469722C206E6F2077-
   395 00000768 61697429           
   396 0000076C 0D0A00                  		db 0Dh, 0Ah,0
   397                                  functions3:
   398 0000076F 4639202D2077726974-     		db "F9 - write character and color onto stdout (no redirection)"
   398 00000778 652063686172616374-
   398 00000781 657220616E6420636F-
   398 0000078A 6C6F72206F6E746F20-
   398 00000793 7374646F757420286E-
   398 0000079C 6F2072656469726563-
   398 000007A5 74696F6E29         
   399 000007AA 0D0A                    		db 0Dh, 0Ah
   400 000007AC 463130202D20756E67-     		db "F10 - ungetchar (put back the ascii code in u.getc)"
   400 000007B5 657463686172202870-
   400 000007BE 7574206261636B2074-
   400 000007C7 686520617363696920-
   400 000007D0 636F646520696E2075-
   400 000007D9 2E6765746329       
   401 000007DF 0D0A                    		db 0Dh, 0Ah
   402 000007E1 0D0A00                  		db 0Dh, 0Ah, 0
   403                                  
   404                                  redir_option_hdr:
   405 000007E4 0D0A                    		db 0Dh, 0Ah
   406 000007E6 53656C65637420494E-     		db "Select INPUT option to STDOUT:"
   406 000007EF 505554206F7074696F-
   406 000007F8 6E20746F205354444F-
   406 00000801 55543A             
   407 00000804 00                      		db 0
   408                                  redir_option:
   409 00000805 0D0A                    		db 0Dh, 0Ah
   410 00000807 455343202D2053616D-     		db "ESC - Sample Text"
   410 00000810 706C652054657874   
   411 00000818 0D0A                    		db 0Dh, 0Ah
   412 0000081A 454E544552202D204B-     		db "ENTER - Keyboad (STDIN)"
   412 00000823 6579626F6164202853-
   412 0000082C 5444494E29         
   413 00000831 0D0A00                  		db 0Dh, 0Ah, 0		 
   414                                  			
   415                                  msg_written:	
   416 00000834 0D0A                    		db 0Dh, 0Ah
   417 00000836 7772697474656E202E-     		db "written ..."
   417 0000083F 2E2E               
   418 00000841 0D0A00                  		db 0Dh, 0Ah, 0
   419                                  
   420                                  redir_text_hdr:
   421 00000844 0D0A                    		db 0Dh, 0Ah
   422 00000846 53616D706C65205465-     		db "Sample Text for Redirection Test :"
   422 0000084F 787420666F72205265-
   422 00000858 646972656374696F6E-
   422 00000861 2054657374203A     
   423 00000868 0D0A00                  		db 0Dh, 0Ah, 0
   424                                  redir_text:
   425 0000086B 546869732069732061-     		db "This is a text for TRDOS 386 v2.0.9 SYSSTDIO system call,"
   425 00000874 207465787420666F72-
   425 0000087D 205452444F53203338-
   425 00000886 362076322E302E3920-
   425 0000088F 535953535444494F20-
   425 00000898 73797374656D206361-
   425 000008A1 6C6C2C             
   426 000008A4 0D0A                    		db 0Dh, 0Ah
   427 000008A6 535444494E2F535444-     		db "STDIN/STDOUT redirection test."
   427 000008AF 4F5554207265646972-
   427 000008B8 656374696F6E207465-
   427 000008C1 73742E             
   428 000008C4 0D0A                    		db 0Dh, 0Ah
   429 000008C6 0D0A                    		db 0Dh, 0Ah
   430 000008C8 492072756E20656163-     		db "I run each teen me? Each team. Catch bar duck each teen?"
   430 000008D1 68207465656E206D65-
   430 000008DA 3F2045616368207465-
   430 000008E3 616D2E204361746368-
   430 000008EC 20626172206475636B-
   430 000008F5 206561636820746565-
   430 000008FE 6E3F               
   431 00000900 0D0A                    		db 0Dh, 0Ah
   432 00000902 4F6E20626172206475-     		db "On bar duck each team. Why high one why!"
   432 0000090B 636B20656163682074-
   432 00000914 65616D2E2057687920-
   432 0000091D 68696768206F6E6520-
   432 00000926 77687921           
   433 0000092A 0D0A00                  		db 0Dh, 0Ah, 0
   434                                  redir_text_size equ $ - (redir_text+1) ;  except 0 
   435                                  
   436                                  continue_msg:
   437 0000092D 0D0A                    		db 0Dh, 0Ah
   438 0000092F 50726573732061206B-     		db "Press a key to continue or press ESC to exit."
   438 00000938 657920746F20636F6E-
   438 00000941 74696E7565206F7220-
   438 0000094A 707265737320455343-
   438 00000953 20746F20657869742E 
   439                                  crlf:
   440 0000095C 0D0A00                  		db 0Dh, 0Ah, 0
   441                                  F1_header:
   442 0000095F 0D0A                    		db 0Dh, 0Ah
   443 00000961 4631202D2072656164-     		db "F1 - read a character on stdin (wait)"
   443 0000096A 206120636861726163-
   443 00000973 746572206F6E207374-
   443 0000097C 64696E202877616974-
   443 00000985 29                 
   444 00000986 0D0A00                  		db 0Dh, 0Ah, 0
   445                                  F2_header:
   446 00000989 0D0A                    		db 0Dh, 0Ah
   447 0000098B 4632202D2072656164-     		db "F2 - read a character on stdin (no wait)"
   447 00000994 206120636861726163-
   447 0000099D 746572206F6E207374-
   447 000009A6 64696E20286E6F2077-
   447 000009AF 61697429           
   448 000009B3 0D0A00                  		db 0Dh, 0Ah, 0
   449                                  F1_text:
   450                                  F2_text:
   451 000009B6 0D0A                    		db 0Dh, 0Ah
   452 000009B8 4B6579626F61726420-     		db "Keyboard is set as STDIN."
   452 000009C1 697320736574206173-
   452 000009CA 20535444494E2E     
   453 000009D1 0D0A                    		db 0Dh, 0Ah
   454 000009D3 436F6E736F6C652053-     		db "Console Screen is set as STDOUT."
   454 000009DC 637265656E20697320-
   454 000009E5 736574206173205354-
   454 000009EE 444F55542E         
   455 000009F3 0D0A                    		db 0Dh, 0Ah
   456 000009F5 50726573736564206B-     		db "Pressed keys will be sent to STDOUT."
   456 000009FE 6579732077696C6C20-
   456 00000A07 62652073656E742074-
   456 00000A10 6F205354444F55542E 
   457 00000A19 0D0A                    		db 0Dh, 0Ah
   458 00000A1B 28454E544552206120-     		db "(ENTER a character string to display.)"
   458 00000A24 636861726163746572-
   458 00000A2D 20737472696E672074-
   458 00000A36 6F20646973706C6179-
   458 00000A3F 2E29               
   459 00000A41 0D0A00                  		db 0Dh, 0Ah, 0
   460                                  
   461                                  F3_header:
   462 00000A44 0D0A                    		db 0Dh, 0Ah
   463 00000A46 4633202D2077726974-     		db "F3 - write a character onto stdout (redirection)"
   463 00000A4F 652061206368617261-
   463 00000A58 63746572206F6E746F-
   463 00000A61 207374646F75742028-
   463 00000A6A 726564697265637469-
   463 00000A73 6F6E29             
   464 00000A76 0D0A00                  		db 0Dh, 0Ah, 0
   465                                  F3_text:
   466 00000A79 0D0A                    		db 0Dh, 0Ah
   467 00000A7B 5354444F5554207769-     		db "STDOUT will be redirected to STDIO.TXT file."
   467 00000A84 6C6C20626520726564-
   467 00000A8D 697265637465642074-
   467 00000A96 6F20535444494F2E54-
   467 00000A9F 58542066696C652E   
   468 00000AA7 0D0A00                  		db 0Dh, 0Ah, 0
   469                                  stdio_at_first:
   470 00000AAA 0D0A                    		db 0Dh, 0Ah
   471 00000AAC 41742046697273742C-     		db "At First, the STDIO.TXT file will be opened (from scratch)."
   471 00000AB5 207468652053544449-
   471 00000ABE 4F2E5458542066696C-
   471 00000AC7 652077696C6C206265-
   471 00000AD0 206F70656E65642028-
   471 00000AD9 66726F6D2073637261-
   471 00000AE2 746368292E         
   472 00000AE7 0D0A00                  		db 0Dh, 0Ah, 0
   473                                  
   474                                  stdio_file:
   475 00000AEA 535444494F2E545854-     		db "STDIO.TXT", 0
   475 00000AF3 00                 
   476                                  create_error:
   477 00000AF4 0D0A                    		db 0Dh, 0Ah
   478 00000AF6 535953435245415420-     		db "SYSCREAT - File creating/open error !"
   478 00000AFF 2D2046696C65206372-
   478 00000B08 656174696E672F6F70-
   478 00000B11 656E206572726F7220-
   478 00000B1A 21                 
   479 00000B1B 0D0A00                  		db 0Dh, 0Ah,0
   480                                  open_error:
   481 00000B1E 0D0A                    		db 0Dh, 0Ah
   482 00000B20 5359534F50454E202D-     		db "SYSOPEN - File open error !"
   482 00000B29 2046696C65206F7065-
   482 00000B32 6E206572726F722021 
   483 00000B3B 0D0A00                  		db 0Dh, 0Ah,0
   484                                  zero_file:
   485 00000B3E 535444494F2E545854-     		db "STDIO.TXT File Size is zero !", 0Dh, 0Ah, 0
   485 00000B47 2046696C652053697A-
   485 00000B50 65206973207A65726F-
   485 00000B59 20210D0A00         
   486                                  not_found:
   487 00000B5E 535444494F2E545854-     		db "STDIO.TXT not found!", 0Dh, 0Ah, 0
   487 00000B67 206E6F7420666F756E-
   487 00000B70 64210D0A00         
   488                                  
   489                                  F3_enter_msg:
   490 00000B75 0D0A                    		db 0Dh, 0Ah
   491 00000B77 50726573736564206B-     		db "Pressed keys will be written into STDOUT file."
   491 00000B80 6579732077696C6C20-
   491 00000B89 626520777269747465-
   491 00000B92 6E20696E746F205354-
   491 00000B9B 444F55542066696C65-
   491 00000BA4 2E                 
   492 00000BA5 0D0A                    		db 0Dh, 0Ah
   493 00000BA7 5772697474656E2063-     		db "Written characters will be echoed to STDERR/screen."		
   493 00000BB0 686172616374657273-
   493 00000BB9 2077696C6C20626520-
   493 00000BC2 6563686F656420746F-
   493 00000BCB 205354444552522F73-
   493 00000BD4 637265656E2E       
   494 00000BDA 0D0A                    		db 0Dh, 0Ah
   495 00000BDC 5468656E2E2E2E2050-     		db "Then... Press ENTER to stop and close the file."
   495 00000BE5 7265737320454E5445-
   495 00000BEE 5220746F2073746F70-
   495 00000BF7 20616E6420636C6F73-
   495 00000C00 65207468652066696C-
   495 00000C09 652E               
   496 00000C0B 0D0A                    		db 0Dh, 0Ah
   497 00000C0D 43524C462077696C6C-     		db "CRLF will be added to the file instead of ENTER/CR."
   497 00000C16 206265206164646564-
   497 00000C1F 20746F207468652066-
   497 00000C28 696C6520696E737465-
   497 00000C31 6164206F6620454E54-
   497 00000C3A 45522F43522E       
   498 00000C40 0D0A00                  		db 0Dh, 0Ah, 0
   499                                  
   500                                  F5_header:
   501 00000C43 0D0A                    		db 0Dh, 0Ah
   502 00000C45 4635202D2072656469-     		db "F5 - redirect stdin to file"
   502 00000C4E 726563742073746469-
   502 00000C57 6E20746F2066696C65 
   503 00000C60 0D0A00                  		db 0Dh, 0Ah, 0
   504                                  F5_text:
   505 00000C63 0D0A                    		db 0Dh, 0Ah
   506 00000C65 535444494E2077696C-     		db "STDIN will be redirected to STDIO.TXT file."
   506 00000C6E 6C2062652072656469-
   506 00000C77 72656374656420746F-
   506 00000C80 20535444494F2E5458-
   506 00000C89 542066696C652E     
   507 00000C90 0D0A00                  		db 0Dh, 0Ah, 0
   508                                  
   509 00000C93 00000000                filehandle:	dd 0
   510                                  
   511                                  msg_ok:
   512 00000C97 0D0A                    		db 0Dh, 0Ah
   513 00000C99 4F4B2E20                		db "OK. "
   514 00000C9D 00                      		db 0
